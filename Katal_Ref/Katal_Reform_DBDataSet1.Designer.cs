//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.42000
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace Katal_Ref {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("Katal_Reform_DBDataSet1")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class Katal_Reform_DBDataSet1 : global::System.Data.DataSet {
        
        private _Изменение_концентрации_DataTable _tableИзменение_концентрации_;
        
        private ИзмКонц_УстановкаDataTable tableИзмКонц_Установка;
        
        private КомпонентыDataTable tableКомпоненты;
        
        private Компоненты_УстановкаDataTable tableКомпоненты_Установка;
        
        private СотрудникиDataTable tableСотрудники;
        
        private _Термодин_харак_DataTable _tableТермодин_харак_;
        
        private УстановкаDataTable tableУстановка;
        
        private global::System.Data.DataRelation relationFK__ИзмКонц_У__conc___2180FB33;
        
        private global::System.Data.DataRelation relationFK__ИзмКонц_У__facil__22751F6C;
        
        private global::System.Data.DataRelation relationFK__Компонент__chara__07C12930;
        
        private global::System.Data.DataRelation relationFK__Компонент__compo__1DB06A4F;
        
        private global::System.Data.DataRelation relationFK__Компонент__facil__1EA48E88;
        
        private global::System.Data.DataRelation relationFK__Сотрудник__facil__1AD3FDA4;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public Katal_Reform_DBDataSet1() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected Katal_Reform_DBDataSet1(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["Изменение_концентрации$"] != null)) {
                    base.Tables.Add(new _Изменение_концентрации_DataTable(ds.Tables["Изменение_концентрации$"]));
                }
                if ((ds.Tables["ИзмКонц_Установка"] != null)) {
                    base.Tables.Add(new ИзмКонц_УстановкаDataTable(ds.Tables["ИзмКонц_Установка"]));
                }
                if ((ds.Tables["Компоненты"] != null)) {
                    base.Tables.Add(new КомпонентыDataTable(ds.Tables["Компоненты"]));
                }
                if ((ds.Tables["Компоненты_Установка"] != null)) {
                    base.Tables.Add(new Компоненты_УстановкаDataTable(ds.Tables["Компоненты_Установка"]));
                }
                if ((ds.Tables["Сотрудники"] != null)) {
                    base.Tables.Add(new СотрудникиDataTable(ds.Tables["Сотрудники"]));
                }
                if ((ds.Tables["Термодин_харак$"] != null)) {
                    base.Tables.Add(new _Термодин_харак_DataTable(ds.Tables["Термодин_харак$"]));
                }
                if ((ds.Tables["Установка"] != null)) {
                    base.Tables.Add(new УстановкаDataTable(ds.Tables["Установка"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public _Изменение_концентрации_DataTable _Изменение_концентрации_ {
            get {
                return this._tableИзменение_концентрации_;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public ИзмКонц_УстановкаDataTable ИзмКонц_Установка {
            get {
                return this.tableИзмКонц_Установка;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public КомпонентыDataTable Компоненты {
            get {
                return this.tableКомпоненты;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public Компоненты_УстановкаDataTable Компоненты_Установка {
            get {
                return this.tableКомпоненты_Установка;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public СотрудникиDataTable Сотрудники {
            get {
                return this.tableСотрудники;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public _Термодин_харак_DataTable _Термодин_харак_ {
            get {
                return this._tableТермодин_харак_;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public УстановкаDataTable Установка {
            get {
                return this.tableУстановка;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public override global::System.Data.DataSet Clone() {
            Katal_Reform_DBDataSet1 cln = ((Katal_Reform_DBDataSet1)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["Изменение_концентрации$"] != null)) {
                    base.Tables.Add(new _Изменение_концентрации_DataTable(ds.Tables["Изменение_концентрации$"]));
                }
                if ((ds.Tables["ИзмКонц_Установка"] != null)) {
                    base.Tables.Add(new ИзмКонц_УстановкаDataTable(ds.Tables["ИзмКонц_Установка"]));
                }
                if ((ds.Tables["Компоненты"] != null)) {
                    base.Tables.Add(new КомпонентыDataTable(ds.Tables["Компоненты"]));
                }
                if ((ds.Tables["Компоненты_Установка"] != null)) {
                    base.Tables.Add(new Компоненты_УстановкаDataTable(ds.Tables["Компоненты_Установка"]));
                }
                if ((ds.Tables["Сотрудники"] != null)) {
                    base.Tables.Add(new СотрудникиDataTable(ds.Tables["Сотрудники"]));
                }
                if ((ds.Tables["Термодин_харак$"] != null)) {
                    base.Tables.Add(new _Термодин_харак_DataTable(ds.Tables["Термодин_харак$"]));
                }
                if ((ds.Tables["Установка"] != null)) {
                    base.Tables.Add(new УстановкаDataTable(ds.Tables["Установка"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal void InitVars(bool initTable) {
            this._tableИзменение_концентрации_ = ((_Изменение_концентрации_DataTable)(base.Tables["Изменение_концентрации$"]));
            if ((initTable == true)) {
                if ((this._tableИзменение_концентрации_ != null)) {
                    this._tableИзменение_концентрации_.InitVars();
                }
            }
            this.tableИзмКонц_Установка = ((ИзмКонц_УстановкаDataTable)(base.Tables["ИзмКонц_Установка"]));
            if ((initTable == true)) {
                if ((this.tableИзмКонц_Установка != null)) {
                    this.tableИзмКонц_Установка.InitVars();
                }
            }
            this.tableКомпоненты = ((КомпонентыDataTable)(base.Tables["Компоненты"]));
            if ((initTable == true)) {
                if ((this.tableКомпоненты != null)) {
                    this.tableКомпоненты.InitVars();
                }
            }
            this.tableКомпоненты_Установка = ((Компоненты_УстановкаDataTable)(base.Tables["Компоненты_Установка"]));
            if ((initTable == true)) {
                if ((this.tableКомпоненты_Установка != null)) {
                    this.tableКомпоненты_Установка.InitVars();
                }
            }
            this.tableСотрудники = ((СотрудникиDataTable)(base.Tables["Сотрудники"]));
            if ((initTable == true)) {
                if ((this.tableСотрудники != null)) {
                    this.tableСотрудники.InitVars();
                }
            }
            this._tableТермодин_харак_ = ((_Термодин_харак_DataTable)(base.Tables["Термодин_харак$"]));
            if ((initTable == true)) {
                if ((this._tableТермодин_харак_ != null)) {
                    this._tableТермодин_харак_.InitVars();
                }
            }
            this.tableУстановка = ((УстановкаDataTable)(base.Tables["Установка"]));
            if ((initTable == true)) {
                if ((this.tableУстановка != null)) {
                    this.tableУстановка.InitVars();
                }
            }
            this.relationFK__ИзмКонц_У__conc___2180FB33 = this.Relations["FK__ИзмКонц_У__conc___2180FB33"];
            this.relationFK__ИзмКонц_У__facil__22751F6C = this.Relations["FK__ИзмКонц_У__facil__22751F6C"];
            this.relationFK__Компонент__chara__07C12930 = this.Relations["FK__Компонент__chara__07C12930"];
            this.relationFK__Компонент__compo__1DB06A4F = this.Relations["FK__Компонент__compo__1DB06A4F"];
            this.relationFK__Компонент__facil__1EA48E88 = this.Relations["FK__Компонент__facil__1EA48E88"];
            this.relationFK__Сотрудник__facil__1AD3FDA4 = this.Relations["FK__Сотрудник__facil__1AD3FDA4"];
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitClass() {
            this.DataSetName = "Katal_Reform_DBDataSet1";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/Katal_Reform_DBDataSet1.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this._tableИзменение_концентрации_ = new _Изменение_концентрации_DataTable();
            base.Tables.Add(this._tableИзменение_концентрации_);
            this.tableИзмКонц_Установка = new ИзмКонц_УстановкаDataTable();
            base.Tables.Add(this.tableИзмКонц_Установка);
            this.tableКомпоненты = new КомпонентыDataTable();
            base.Tables.Add(this.tableКомпоненты);
            this.tableКомпоненты_Установка = new Компоненты_УстановкаDataTable();
            base.Tables.Add(this.tableКомпоненты_Установка);
            this.tableСотрудники = new СотрудникиDataTable();
            base.Tables.Add(this.tableСотрудники);
            this._tableТермодин_харак_ = new _Термодин_харак_DataTable();
            base.Tables.Add(this._tableТермодин_харак_);
            this.tableУстановка = new УстановкаDataTable();
            base.Tables.Add(this.tableУстановка);
            this.relationFK__ИзмКонц_У__conc___2180FB33 = new global::System.Data.DataRelation("FK__ИзмКонц_У__conc___2180FB33", new global::System.Data.DataColumn[] {
                        this._tableИзменение_концентрации_.conc_idColumn}, new global::System.Data.DataColumn[] {
                        this.tableИзмКонц_Установка.conc_idColumn}, false);
            this.Relations.Add(this.relationFK__ИзмКонц_У__conc___2180FB33);
            this.relationFK__ИзмКонц_У__facil__22751F6C = new global::System.Data.DataRelation("FK__ИзмКонц_У__facil__22751F6C", new global::System.Data.DataColumn[] {
                        this.tableУстановка.facility_idColumn}, new global::System.Data.DataColumn[] {
                        this.tableИзмКонц_Установка.facility_idColumn}, false);
            this.Relations.Add(this.relationFK__ИзмКонц_У__facil__22751F6C);
            this.relationFK__Компонент__chara__07C12930 = new global::System.Data.DataRelation("FK__Компонент__chara__07C12930", new global::System.Data.DataColumn[] {
                        this._tableТермодин_харак_.charac_idColumn}, new global::System.Data.DataColumn[] {
                        this.tableКомпоненты.charac_idColumn}, false);
            this.Relations.Add(this.relationFK__Компонент__chara__07C12930);
            this.relationFK__Компонент__compo__1DB06A4F = new global::System.Data.DataRelation("FK__Компонент__compo__1DB06A4F", new global::System.Data.DataColumn[] {
                        this.tableКомпоненты.component_idColumn}, new global::System.Data.DataColumn[] {
                        this.tableКомпоненты_Установка.component_idColumn}, false);
            this.Relations.Add(this.relationFK__Компонент__compo__1DB06A4F);
            this.relationFK__Компонент__facil__1EA48E88 = new global::System.Data.DataRelation("FK__Компонент__facil__1EA48E88", new global::System.Data.DataColumn[] {
                        this.tableУстановка.facility_idColumn}, new global::System.Data.DataColumn[] {
                        this.tableКомпоненты_Установка.facility_idColumn}, false);
            this.Relations.Add(this.relationFK__Компонент__facil__1EA48E88);
            this.relationFK__Сотрудник__facil__1AD3FDA4 = new global::System.Data.DataRelation("FK__Сотрудник__facil__1AD3FDA4", new global::System.Data.DataColumn[] {
                        this.tableУстановка.facility_idColumn}, new global::System.Data.DataColumn[] {
                        this.tableСотрудники.facility_idColumn}, false);
            this.Relations.Add(this.relationFK__Сотрудник__facil__1AD3FDA4);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private bool ShouldSerialize_Изменение_концентрации_() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private bool ShouldSerializeИзмКонц_Установка() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private bool ShouldSerializeКомпоненты() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private bool ShouldSerializeКомпоненты_Установка() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private bool ShouldSerializeСотрудники() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private bool ShouldSerialize_Термодин_харак_() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private bool ShouldSerializeУстановка() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            Katal_Reform_DBDataSet1 ds = new Katal_Reform_DBDataSet1();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public delegate void _Изменение_концентрации_RowChangeEventHandler(object sender, _Изменение_концентрации_RowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public delegate void ИзмКонц_УстановкаRowChangeEventHandler(object sender, ИзмКонц_УстановкаRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public delegate void КомпонентыRowChangeEventHandler(object sender, КомпонентыRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public delegate void Компоненты_УстановкаRowChangeEventHandler(object sender, Компоненты_УстановкаRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public delegate void СотрудникиRowChangeEventHandler(object sender, СотрудникиRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public delegate void _Термодин_харак_RowChangeEventHandler(object sender, _Термодин_харак_RowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public delegate void УстановкаRowChangeEventHandler(object sender, УстановкаRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class _Изменение_концентрации_DataTable : global::System.Data.TypedTableBase<_Изменение_концентрации_Row> {
            
            private global::System.Data.DataColumn columnconc_id;
            
            private global::System.Data.DataColumn columnмасса_катализатора;
            
            private global::System.Data.DataColumn columnNP1;
            
            private global::System.Data.DataColumn columnNP2;
            
            private global::System.Data.DataColumn columnNP3;
            
            private global::System.Data.DataColumn columnNP4;
            
            private global::System.Data.DataColumn columnNP5;
            
            private global::System.Data.DataColumn columnNP6;
            
            private global::System.Data.DataColumn columnNP7;
            
            private global::System.Data.DataColumn columnNP8;
            
            private global::System.Data.DataColumn columnNP9;
            
            private global::System.Data.DataColumn columnNP10;
            
            private global::System.Data.DataColumn columnNP11;
            
            private global::System.Data.DataColumn columnIP4;
            
            private global::System.Data.DataColumn columnIP5;
            
            private global::System.Data.DataColumn columnIP6;
            
            private global::System.Data.DataColumn columnIP7;
            
            private global::System.Data.DataColumn columnIP8;
            
            private global::System.Data.DataColumn columnIP9;
            
            private global::System.Data.DataColumn columnIP10;
            
            private global::System.Data.DataColumn columnIP11;
            
            private global::System.Data.DataColumn columnACP5;
            
            private global::System.Data.DataColumn columnACP6;
            
            private global::System.Data.DataColumn columnACP7;
            
            private global::System.Data.DataColumn columnACP8;
            
            private global::System.Data.DataColumn columnACP9;
            
            private global::System.Data.DataColumn columnACP10;
            
            private global::System.Data.DataColumn columnACP11;
            
            private global::System.Data.DataColumn columnACH6;
            
            private global::System.Data.DataColumn columnACH7;
            
            private global::System.Data.DataColumn columnACH8;
            
            private global::System.Data.DataColumn columnACH9;
            
            private global::System.Data.DataColumn columnACH10;
            
            private global::System.Data.DataColumn columnACH11;
            
            private global::System.Data.DataColumn columnA6;
            
            private global::System.Data.DataColumn columnA7;
            
            private global::System.Data.DataColumn columnA8;
            
            private global::System.Data.DataColumn columnA9;
            
            private global::System.Data.DataColumn columnA10;
            
            private global::System.Data.DataColumn columnA11;
            
            private global::System.Data.DataColumn columnH2;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public _Изменение_концентрации_DataTable() {
                this.TableName = "Изменение_концентрации$";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal _Изменение_концентрации_DataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected _Изменение_концентрации_DataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn conc_idColumn {
                get {
                    return this.columnconc_id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn масса_катализатораColumn {
                get {
                    return this.columnмасса_катализатора;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn NP1Column {
                get {
                    return this.columnNP1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn NP2Column {
                get {
                    return this.columnNP2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn NP3Column {
                get {
                    return this.columnNP3;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn NP4Column {
                get {
                    return this.columnNP4;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn NP5Column {
                get {
                    return this.columnNP5;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn NP6Column {
                get {
                    return this.columnNP6;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn NP7Column {
                get {
                    return this.columnNP7;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn NP8Column {
                get {
                    return this.columnNP8;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn NP9Column {
                get {
                    return this.columnNP9;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn NP10Column {
                get {
                    return this.columnNP10;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn NP11Column {
                get {
                    return this.columnNP11;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn IP4Column {
                get {
                    return this.columnIP4;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn IP5Column {
                get {
                    return this.columnIP5;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn IP6Column {
                get {
                    return this.columnIP6;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn IP7Column {
                get {
                    return this.columnIP7;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn IP8Column {
                get {
                    return this.columnIP8;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn IP9Column {
                get {
                    return this.columnIP9;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn IP10Column {
                get {
                    return this.columnIP10;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn IP11Column {
                get {
                    return this.columnIP11;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ACP5Column {
                get {
                    return this.columnACP5;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ACP6Column {
                get {
                    return this.columnACP6;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ACP7Column {
                get {
                    return this.columnACP7;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ACP8Column {
                get {
                    return this.columnACP8;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ACP9Column {
                get {
                    return this.columnACP9;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ACP10Column {
                get {
                    return this.columnACP10;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ACP11Column {
                get {
                    return this.columnACP11;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ACH6Column {
                get {
                    return this.columnACH6;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ACH7Column {
                get {
                    return this.columnACH7;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ACH8Column {
                get {
                    return this.columnACH8;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ACH9Column {
                get {
                    return this.columnACH9;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ACH10Column {
                get {
                    return this.columnACH10;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ACH11Column {
                get {
                    return this.columnACH11;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn A6Column {
                get {
                    return this.columnA6;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn A7Column {
                get {
                    return this.columnA7;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn A8Column {
                get {
                    return this.columnA8;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn A9Column {
                get {
                    return this.columnA9;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn A10Column {
                get {
                    return this.columnA10;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn A11Column {
                get {
                    return this.columnA11;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn H2Column {
                get {
                    return this.columnH2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public _Изменение_концентрации_Row this[int index] {
                get {
                    return ((_Изменение_концентрации_Row)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event _Изменение_концентрации_RowChangeEventHandler _Изменение_концентрации_RowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event _Изменение_концентрации_RowChangeEventHandler _Изменение_концентрации_RowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event _Изменение_концентрации_RowChangeEventHandler _Изменение_концентрации_RowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event _Изменение_концентрации_RowChangeEventHandler _Изменение_концентрации_RowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void Add_Изменение_концентрации_Row(_Изменение_концентрации_Row row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public _Изменение_концентрации_Row Add_Изменение_концентрации_Row(
                        int conc_id, 
                        int масса_катализатора, 
                        double NP1, 
                        double NP2, 
                        double NP3, 
                        double NP4, 
                        double NP5, 
                        double NP6, 
                        double NP7, 
                        double NP8, 
                        double NP9, 
                        double NP10, 
                        double NP11, 
                        double IP4, 
                        double IP5, 
                        double IP6, 
                        double IP7, 
                        double IP8, 
                        double IP9, 
                        double IP10, 
                        double IP11, 
                        double ACP5, 
                        double ACP6, 
                        double ACP7, 
                        double ACP8, 
                        double ACP9, 
                        double ACP10, 
                        double ACP11, 
                        double ACH6, 
                        double ACH7, 
                        double ACH8, 
                        double ACH9, 
                        double ACH10, 
                        double ACH11, 
                        double A6, 
                        double A7, 
                        double A8, 
                        double A9, 
                        double A10, 
                        double A11, 
                        double H2) {
                _Изменение_концентрации_Row row_Изменение_концентрации_Row = ((_Изменение_концентрации_Row)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        conc_id,
                        масса_катализатора,
                        NP1,
                        NP2,
                        NP3,
                        NP4,
                        NP5,
                        NP6,
                        NP7,
                        NP8,
                        NP9,
                        NP10,
                        NP11,
                        IP4,
                        IP5,
                        IP6,
                        IP7,
                        IP8,
                        IP9,
                        IP10,
                        IP11,
                        ACP5,
                        ACP6,
                        ACP7,
                        ACP8,
                        ACP9,
                        ACP10,
                        ACP11,
                        ACH6,
                        ACH7,
                        ACH8,
                        ACH9,
                        ACH10,
                        ACH11,
                        A6,
                        A7,
                        A8,
                        A9,
                        A10,
                        A11,
                        H2};
                row_Изменение_концентрации_Row.ItemArray = columnValuesArray;
                this.Rows.Add(row_Изменение_концентрации_Row);
                return row_Изменение_концентрации_Row;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public _Изменение_концентрации_Row FindByconc_id(int conc_id) {
                return ((_Изменение_концентрации_Row)(this.Rows.Find(new object[] {
                            conc_id})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                _Изменение_концентрации_DataTable cln = ((_Изменение_концентрации_DataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new _Изменение_концентрации_DataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal void InitVars() {
                this.columnconc_id = base.Columns["conc_id"];
                this.columnмасса_катализатора = base.Columns["масса катализатора"];
                this.columnNP1 = base.Columns["NP1"];
                this.columnNP2 = base.Columns["NP2"];
                this.columnNP3 = base.Columns["NP3"];
                this.columnNP4 = base.Columns["NP4"];
                this.columnNP5 = base.Columns["NP5"];
                this.columnNP6 = base.Columns["NP6"];
                this.columnNP7 = base.Columns["NP7"];
                this.columnNP8 = base.Columns["NP8"];
                this.columnNP9 = base.Columns["NP9"];
                this.columnNP10 = base.Columns["NP10"];
                this.columnNP11 = base.Columns["NP11"];
                this.columnIP4 = base.Columns["IP4"];
                this.columnIP5 = base.Columns["IP5"];
                this.columnIP6 = base.Columns["IP6"];
                this.columnIP7 = base.Columns["IP7"];
                this.columnIP8 = base.Columns["IP8"];
                this.columnIP9 = base.Columns["IP9"];
                this.columnIP10 = base.Columns["IP10"];
                this.columnIP11 = base.Columns["IP11"];
                this.columnACP5 = base.Columns["ACP5"];
                this.columnACP6 = base.Columns["ACP6"];
                this.columnACP7 = base.Columns["ACP7"];
                this.columnACP8 = base.Columns["ACP8"];
                this.columnACP9 = base.Columns["ACP9"];
                this.columnACP10 = base.Columns["ACP10"];
                this.columnACP11 = base.Columns["ACP11"];
                this.columnACH6 = base.Columns["ACH6"];
                this.columnACH7 = base.Columns["ACH7"];
                this.columnACH8 = base.Columns["ACH8"];
                this.columnACH9 = base.Columns["ACH9"];
                this.columnACH10 = base.Columns["ACH10"];
                this.columnACH11 = base.Columns["ACH11"];
                this.columnA6 = base.Columns["A6"];
                this.columnA7 = base.Columns["A7"];
                this.columnA8 = base.Columns["A8"];
                this.columnA9 = base.Columns["A9"];
                this.columnA10 = base.Columns["A10"];
                this.columnA11 = base.Columns["A11"];
                this.columnH2 = base.Columns["H2"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            private void InitClass() {
                this.columnconc_id = new global::System.Data.DataColumn("conc_id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnconc_id);
                this.columnмасса_катализатора = new global::System.Data.DataColumn("масса катализатора", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnмасса_катализатора);
                this.columnNP1 = new global::System.Data.DataColumn("NP1", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNP1);
                this.columnNP2 = new global::System.Data.DataColumn("NP2", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNP2);
                this.columnNP3 = new global::System.Data.DataColumn("NP3", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNP3);
                this.columnNP4 = new global::System.Data.DataColumn("NP4", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNP4);
                this.columnNP5 = new global::System.Data.DataColumn("NP5", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNP5);
                this.columnNP6 = new global::System.Data.DataColumn("NP6", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNP6);
                this.columnNP7 = new global::System.Data.DataColumn("NP7", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNP7);
                this.columnNP8 = new global::System.Data.DataColumn("NP8", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNP8);
                this.columnNP9 = new global::System.Data.DataColumn("NP9", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNP9);
                this.columnNP10 = new global::System.Data.DataColumn("NP10", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNP10);
                this.columnNP11 = new global::System.Data.DataColumn("NP11", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNP11);
                this.columnIP4 = new global::System.Data.DataColumn("IP4", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIP4);
                this.columnIP5 = new global::System.Data.DataColumn("IP5", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIP5);
                this.columnIP6 = new global::System.Data.DataColumn("IP6", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIP6);
                this.columnIP7 = new global::System.Data.DataColumn("IP7", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIP7);
                this.columnIP8 = new global::System.Data.DataColumn("IP8", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIP8);
                this.columnIP9 = new global::System.Data.DataColumn("IP9", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIP9);
                this.columnIP10 = new global::System.Data.DataColumn("IP10", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIP10);
                this.columnIP11 = new global::System.Data.DataColumn("IP11", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIP11);
                this.columnACP5 = new global::System.Data.DataColumn("ACP5", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnACP5);
                this.columnACP6 = new global::System.Data.DataColumn("ACP6", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnACP6);
                this.columnACP7 = new global::System.Data.DataColumn("ACP7", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnACP7);
                this.columnACP8 = new global::System.Data.DataColumn("ACP8", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnACP8);
                this.columnACP9 = new global::System.Data.DataColumn("ACP9", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnACP9);
                this.columnACP10 = new global::System.Data.DataColumn("ACP10", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnACP10);
                this.columnACP11 = new global::System.Data.DataColumn("ACP11", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnACP11);
                this.columnACH6 = new global::System.Data.DataColumn("ACH6", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnACH6);
                this.columnACH7 = new global::System.Data.DataColumn("ACH7", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnACH7);
                this.columnACH8 = new global::System.Data.DataColumn("ACH8", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnACH8);
                this.columnACH9 = new global::System.Data.DataColumn("ACH9", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnACH9);
                this.columnACH10 = new global::System.Data.DataColumn("ACH10", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnACH10);
                this.columnACH11 = new global::System.Data.DataColumn("ACH11", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnACH11);
                this.columnA6 = new global::System.Data.DataColumn("A6", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnA6);
                this.columnA7 = new global::System.Data.DataColumn("A7", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnA7);
                this.columnA8 = new global::System.Data.DataColumn("A8", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnA8);
                this.columnA9 = new global::System.Data.DataColumn("A9", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnA9);
                this.columnA10 = new global::System.Data.DataColumn("A10", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnA10);
                this.columnA11 = new global::System.Data.DataColumn("A11", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnA11);
                this.columnH2 = new global::System.Data.DataColumn("H2", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnH2);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnconc_id}, true));
                this.columnconc_id.AllowDBNull = false;
                this.columnconc_id.Unique = true;
                this.ExtendedProperties.Add("Generator_TableVarName", "_tableИзменение_концентрации_");
                this.ExtendedProperties.Add("Generator_UserTableName", "Изменение_концентрации$");
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public _Изменение_концентрации_Row New_Изменение_концентрации_Row() {
                return ((_Изменение_концентрации_Row)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new _Изменение_концентрации_Row(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(_Изменение_концентрации_Row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this._Изменение_концентрации_RowChanged != null)) {
                    this._Изменение_концентрации_RowChanged(this, new _Изменение_концентрации_RowChangeEvent(((_Изменение_концентрации_Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this._Изменение_концентрации_RowChanging != null)) {
                    this._Изменение_концентрации_RowChanging(this, new _Изменение_концентрации_RowChangeEvent(((_Изменение_концентрации_Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this._Изменение_концентрации_RowDeleted != null)) {
                    this._Изменение_концентрации_RowDeleted(this, new _Изменение_концентрации_RowChangeEvent(((_Изменение_концентрации_Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this._Изменение_концентрации_RowDeleting != null)) {
                    this._Изменение_концентрации_RowDeleting(this, new _Изменение_концентрации_RowChangeEvent(((_Изменение_концентрации_Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void Remove_Изменение_концентрации_Row(_Изменение_концентрации_Row row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                Katal_Reform_DBDataSet1 ds = new Katal_Reform_DBDataSet1();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "_Изменение_концентрации_DataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class ИзмКонц_УстановкаDataTable : global::System.Data.TypedTableBase<ИзмКонц_УстановкаRow> {
            
            private global::System.Data.DataColumn columnconc_id;
            
            private global::System.Data.DataColumn columnfacility_id;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public ИзмКонц_УстановкаDataTable() {
                this.TableName = "ИзмКонц_Установка";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal ИзмКонц_УстановкаDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected ИзмКонц_УстановкаDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn conc_idColumn {
                get {
                    return this.columnconc_id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn facility_idColumn {
                get {
                    return this.columnfacility_id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public ИзмКонц_УстановкаRow this[int index] {
                get {
                    return ((ИзмКонц_УстановкаRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event ИзмКонц_УстановкаRowChangeEventHandler ИзмКонц_УстановкаRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event ИзмКонц_УстановкаRowChangeEventHandler ИзмКонц_УстановкаRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event ИзмКонц_УстановкаRowChangeEventHandler ИзмКонц_УстановкаRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event ИзмКонц_УстановкаRowChangeEventHandler ИзмКонц_УстановкаRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void AddИзмКонц_УстановкаRow(ИзмКонц_УстановкаRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public ИзмКонц_УстановкаRow AddИзмКонц_УстановкаRow(_Изменение_концентрации_Row parent_Изменение_концентрации_RowByFK__ИзмКонц_У__conc___2180FB33, УстановкаRow parentУстановкаRowByFK__ИзмКонц_У__facil__22751F6C) {
                ИзмКонц_УстановкаRow rowИзмКонц_УстановкаRow = ((ИзмКонц_УстановкаRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        null};
                if ((parent_Изменение_концентрации_RowByFK__ИзмКонц_У__conc___2180FB33 != null)) {
                    columnValuesArray[0] = parent_Изменение_концентрации_RowByFK__ИзмКонц_У__conc___2180FB33[0];
                }
                if ((parentУстановкаRowByFK__ИзмКонц_У__facil__22751F6C != null)) {
                    columnValuesArray[1] = parentУстановкаRowByFK__ИзмКонц_У__facil__22751F6C[0];
                }
                rowИзмКонц_УстановкаRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowИзмКонц_УстановкаRow);
                return rowИзмКонц_УстановкаRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public ИзмКонц_УстановкаRow FindByconc_idfacility_id(int conc_id, int facility_id) {
                return ((ИзмКонц_УстановкаRow)(this.Rows.Find(new object[] {
                            conc_id,
                            facility_id})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                ИзмКонц_УстановкаDataTable cln = ((ИзмКонц_УстановкаDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new ИзмКонц_УстановкаDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal void InitVars() {
                this.columnconc_id = base.Columns["conc_id"];
                this.columnfacility_id = base.Columns["facility_id"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            private void InitClass() {
                this.columnconc_id = new global::System.Data.DataColumn("conc_id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnconc_id);
                this.columnfacility_id = new global::System.Data.DataColumn("facility_id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnfacility_id);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnconc_id,
                                this.columnfacility_id}, true));
                this.columnconc_id.AllowDBNull = false;
                this.columnfacility_id.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public ИзмКонц_УстановкаRow NewИзмКонц_УстановкаRow() {
                return ((ИзмКонц_УстановкаRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new ИзмКонц_УстановкаRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(ИзмКонц_УстановкаRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.ИзмКонц_УстановкаRowChanged != null)) {
                    this.ИзмКонц_УстановкаRowChanged(this, new ИзмКонц_УстановкаRowChangeEvent(((ИзмКонц_УстановкаRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.ИзмКонц_УстановкаRowChanging != null)) {
                    this.ИзмКонц_УстановкаRowChanging(this, new ИзмКонц_УстановкаRowChangeEvent(((ИзмКонц_УстановкаRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.ИзмКонц_УстановкаRowDeleted != null)) {
                    this.ИзмКонц_УстановкаRowDeleted(this, new ИзмКонц_УстановкаRowChangeEvent(((ИзмКонц_УстановкаRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.ИзмКонц_УстановкаRowDeleting != null)) {
                    this.ИзмКонц_УстановкаRowDeleting(this, new ИзмКонц_УстановкаRowChangeEvent(((ИзмКонц_УстановкаRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void RemoveИзмКонц_УстановкаRow(ИзмКонц_УстановкаRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                Katal_Reform_DBDataSet1 ds = new Katal_Reform_DBDataSet1();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "ИзмКонц_УстановкаDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class КомпонентыDataTable : global::System.Data.TypedTableBase<КомпонентыRow> {
            
            private global::System.Data.DataColumn columncomponent_id;
            
            private global::System.Data.DataColumn columnНаименование_компонента;
            
            private global::System.Data.DataColumn columnХим_формула;
            
            private global::System.Data.DataColumn columnМолярная_масса;
            
            private global::System.Data.DataColumn columnТемпература_кипения;
            
            private global::System.Data.DataColumn columncharac_id;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public КомпонентыDataTable() {
                this.TableName = "Компоненты";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal КомпонентыDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected КомпонентыDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn component_idColumn {
                get {
                    return this.columncomponent_id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn Наименование_компонентаColumn {
                get {
                    return this.columnНаименование_компонента;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn Хим_формулаColumn {
                get {
                    return this.columnХим_формула;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn Молярная_массаColumn {
                get {
                    return this.columnМолярная_масса;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn Температура_кипенияColumn {
                get {
                    return this.columnТемпература_кипения;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn charac_idColumn {
                get {
                    return this.columncharac_id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public КомпонентыRow this[int index] {
                get {
                    return ((КомпонентыRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event КомпонентыRowChangeEventHandler КомпонентыRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event КомпонентыRowChangeEventHandler КомпонентыRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event КомпонентыRowChangeEventHandler КомпонентыRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event КомпонентыRowChangeEventHandler КомпонентыRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void AddКомпонентыRow(КомпонентыRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public КомпонентыRow AddКомпонентыRow(int component_id, string Наименование_компонента, string Хим_формула, double Молярная_масса, double Температура_кипения, _Термодин_харак_Row parent_Термодин_харак_RowByFK__Компонент__chara__07C12930) {
                КомпонентыRow rowКомпонентыRow = ((КомпонентыRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        component_id,
                        Наименование_компонента,
                        Хим_формула,
                        Молярная_масса,
                        Температура_кипения,
                        null};
                if ((parent_Термодин_харак_RowByFK__Компонент__chara__07C12930 != null)) {
                    columnValuesArray[5] = parent_Термодин_харак_RowByFK__Компонент__chara__07C12930[0];
                }
                rowКомпонентыRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowКомпонентыRow);
                return rowКомпонентыRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public КомпонентыRow FindBycomponent_id(int component_id) {
                return ((КомпонентыRow)(this.Rows.Find(new object[] {
                            component_id})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                КомпонентыDataTable cln = ((КомпонентыDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new КомпонентыDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal void InitVars() {
                this.columncomponent_id = base.Columns["component_id"];
                this.columnНаименование_компонента = base.Columns["Наименование_компонента"];
                this.columnХим_формула = base.Columns["Хим_формула"];
                this.columnМолярная_масса = base.Columns["Молярная_масса"];
                this.columnТемпература_кипения = base.Columns["Температура_кипения"];
                this.columncharac_id = base.Columns["charac_id"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            private void InitClass() {
                this.columncomponent_id = new global::System.Data.DataColumn("component_id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncomponent_id);
                this.columnНаименование_компонента = new global::System.Data.DataColumn("Наименование_компонента", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnНаименование_компонента);
                this.columnХим_формула = new global::System.Data.DataColumn("Хим_формула", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnХим_формула);
                this.columnМолярная_масса = new global::System.Data.DataColumn("Молярная_масса", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnМолярная_масса);
                this.columnТемпература_кипения = new global::System.Data.DataColumn("Температура_кипения", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnТемпература_кипения);
                this.columncharac_id = new global::System.Data.DataColumn("charac_id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncharac_id);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columncomponent_id}, true));
                this.columncomponent_id.AllowDBNull = false;
                this.columncomponent_id.Unique = true;
                this.columnНаименование_компонента.AllowDBNull = false;
                this.columnНаименование_компонента.MaxLength = 64;
                this.columnХим_формула.AllowDBNull = false;
                this.columnХим_формула.MaxLength = 30;
                this.columnМолярная_масса.AllowDBNull = false;
                this.columnТемпература_кипения.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public КомпонентыRow NewКомпонентыRow() {
                return ((КомпонентыRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new КомпонентыRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(КомпонентыRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.КомпонентыRowChanged != null)) {
                    this.КомпонентыRowChanged(this, new КомпонентыRowChangeEvent(((КомпонентыRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.КомпонентыRowChanging != null)) {
                    this.КомпонентыRowChanging(this, new КомпонентыRowChangeEvent(((КомпонентыRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.КомпонентыRowDeleted != null)) {
                    this.КомпонентыRowDeleted(this, new КомпонентыRowChangeEvent(((КомпонентыRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.КомпонентыRowDeleting != null)) {
                    this.КомпонентыRowDeleting(this, new КомпонентыRowChangeEvent(((КомпонентыRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void RemoveКомпонентыRow(КомпонентыRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                Katal_Reform_DBDataSet1 ds = new Katal_Reform_DBDataSet1();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "КомпонентыDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class Компоненты_УстановкаDataTable : global::System.Data.TypedTableBase<Компоненты_УстановкаRow> {
            
            private global::System.Data.DataColumn columncomponent_id;
            
            private global::System.Data.DataColumn columnfacility_id;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public Компоненты_УстановкаDataTable() {
                this.TableName = "Компоненты_Установка";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal Компоненты_УстановкаDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected Компоненты_УстановкаDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn component_idColumn {
                get {
                    return this.columncomponent_id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn facility_idColumn {
                get {
                    return this.columnfacility_id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public Компоненты_УстановкаRow this[int index] {
                get {
                    return ((Компоненты_УстановкаRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event Компоненты_УстановкаRowChangeEventHandler Компоненты_УстановкаRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event Компоненты_УстановкаRowChangeEventHandler Компоненты_УстановкаRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event Компоненты_УстановкаRowChangeEventHandler Компоненты_УстановкаRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event Компоненты_УстановкаRowChangeEventHandler Компоненты_УстановкаRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void AddКомпоненты_УстановкаRow(Компоненты_УстановкаRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public Компоненты_УстановкаRow AddКомпоненты_УстановкаRow(КомпонентыRow parentКомпонентыRowByFK__Компонент__compo__1DB06A4F, УстановкаRow parentУстановкаRowByFK__Компонент__facil__1EA48E88) {
                Компоненты_УстановкаRow rowКомпоненты_УстановкаRow = ((Компоненты_УстановкаRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        null};
                if ((parentКомпонентыRowByFK__Компонент__compo__1DB06A4F != null)) {
                    columnValuesArray[0] = parentКомпонентыRowByFK__Компонент__compo__1DB06A4F[0];
                }
                if ((parentУстановкаRowByFK__Компонент__facil__1EA48E88 != null)) {
                    columnValuesArray[1] = parentУстановкаRowByFK__Компонент__facil__1EA48E88[0];
                }
                rowКомпоненты_УстановкаRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowКомпоненты_УстановкаRow);
                return rowКомпоненты_УстановкаRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public Компоненты_УстановкаRow FindBycomponent_idfacility_id(int component_id, int facility_id) {
                return ((Компоненты_УстановкаRow)(this.Rows.Find(new object[] {
                            component_id,
                            facility_id})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                Компоненты_УстановкаDataTable cln = ((Компоненты_УстановкаDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new Компоненты_УстановкаDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal void InitVars() {
                this.columncomponent_id = base.Columns["component_id"];
                this.columnfacility_id = base.Columns["facility_id"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            private void InitClass() {
                this.columncomponent_id = new global::System.Data.DataColumn("component_id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncomponent_id);
                this.columnfacility_id = new global::System.Data.DataColumn("facility_id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnfacility_id);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columncomponent_id,
                                this.columnfacility_id}, true));
                this.columncomponent_id.AllowDBNull = false;
                this.columnfacility_id.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public Компоненты_УстановкаRow NewКомпоненты_УстановкаRow() {
                return ((Компоненты_УстановкаRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new Компоненты_УстановкаRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(Компоненты_УстановкаRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.Компоненты_УстановкаRowChanged != null)) {
                    this.Компоненты_УстановкаRowChanged(this, new Компоненты_УстановкаRowChangeEvent(((Компоненты_УстановкаRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.Компоненты_УстановкаRowChanging != null)) {
                    this.Компоненты_УстановкаRowChanging(this, new Компоненты_УстановкаRowChangeEvent(((Компоненты_УстановкаRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.Компоненты_УстановкаRowDeleted != null)) {
                    this.Компоненты_УстановкаRowDeleted(this, new Компоненты_УстановкаRowChangeEvent(((Компоненты_УстановкаRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.Компоненты_УстановкаRowDeleting != null)) {
                    this.Компоненты_УстановкаRowDeleting(this, new Компоненты_УстановкаRowChangeEvent(((Компоненты_УстановкаRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void RemoveКомпоненты_УстановкаRow(Компоненты_УстановкаRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                Katal_Reform_DBDataSet1 ds = new Katal_Reform_DBDataSet1();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "Компоненты_УстановкаDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class СотрудникиDataTable : global::System.Data.TypedTableBase<СотрудникиRow> {
            
            private global::System.Data.DataColumn columnemployee_id;
            
            private global::System.Data.DataColumn columnФИО;
            
            private global::System.Data.DataColumn columnДата_рождения;
            
            private global::System.Data.DataColumn columnПасспортные_данные;
            
            private global::System.Data.DataColumn columnДолжность;
            
            private global::System.Data.DataColumn columnНомер_телефона;
            
            private global::System.Data.DataColumn columnfacility_id;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public СотрудникиDataTable() {
                this.TableName = "Сотрудники";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal СотрудникиDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected СотрудникиDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn employee_idColumn {
                get {
                    return this.columnemployee_id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ФИОColumn {
                get {
                    return this.columnФИО;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn Дата_рожденияColumn {
                get {
                    return this.columnДата_рождения;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn Пасспортные_данныеColumn {
                get {
                    return this.columnПасспортные_данные;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ДолжностьColumn {
                get {
                    return this.columnДолжность;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn Номер_телефонаColumn {
                get {
                    return this.columnНомер_телефона;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn facility_idColumn {
                get {
                    return this.columnfacility_id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public СотрудникиRow this[int index] {
                get {
                    return ((СотрудникиRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event СотрудникиRowChangeEventHandler СотрудникиRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event СотрудникиRowChangeEventHandler СотрудникиRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event СотрудникиRowChangeEventHandler СотрудникиRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event СотрудникиRowChangeEventHandler СотрудникиRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void AddСотрудникиRow(СотрудникиRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public СотрудникиRow AddСотрудникиRow(int employee_id, string ФИО, System.DateTime Дата_рождения, long Пасспортные_данные, string Должность, string Номер_телефона, УстановкаRow parentУстановкаRowByFK__Сотрудник__facil__1AD3FDA4) {
                СотрудникиRow rowСотрудникиRow = ((СотрудникиRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        employee_id,
                        ФИО,
                        Дата_рождения,
                        Пасспортные_данные,
                        Должность,
                        Номер_телефона,
                        null};
                if ((parentУстановкаRowByFK__Сотрудник__facil__1AD3FDA4 != null)) {
                    columnValuesArray[6] = parentУстановкаRowByFK__Сотрудник__facil__1AD3FDA4[0];
                }
                rowСотрудникиRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowСотрудникиRow);
                return rowСотрудникиRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public СотрудникиRow FindByemployee_id(int employee_id) {
                return ((СотрудникиRow)(this.Rows.Find(new object[] {
                            employee_id})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                СотрудникиDataTable cln = ((СотрудникиDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new СотрудникиDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal void InitVars() {
                this.columnemployee_id = base.Columns["employee_id"];
                this.columnФИО = base.Columns["ФИО"];
                this.columnДата_рождения = base.Columns["Дата_рождения"];
                this.columnПасспортные_данные = base.Columns["Пасспортные_данные"];
                this.columnДолжность = base.Columns["Должность"];
                this.columnНомер_телефона = base.Columns["Номер_телефона"];
                this.columnfacility_id = base.Columns["facility_id"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            private void InitClass() {
                this.columnemployee_id = new global::System.Data.DataColumn("employee_id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnemployee_id);
                this.columnФИО = new global::System.Data.DataColumn("ФИО", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnФИО);
                this.columnДата_рождения = new global::System.Data.DataColumn("Дата_рождения", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnДата_рождения);
                this.columnПасспортные_данные = new global::System.Data.DataColumn("Пасспортные_данные", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnПасспортные_данные);
                this.columnДолжность = new global::System.Data.DataColumn("Должность", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnДолжность);
                this.columnНомер_телефона = new global::System.Data.DataColumn("Номер_телефона", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnНомер_телефона);
                this.columnfacility_id = new global::System.Data.DataColumn("facility_id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnfacility_id);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnemployee_id}, true));
                this.columnemployee_id.AllowDBNull = false;
                this.columnemployee_id.Unique = true;
                this.columnФИО.AllowDBNull = false;
                this.columnФИО.MaxLength = 50;
                this.columnДата_рождения.AllowDBNull = false;
                this.columnПасспортные_данные.AllowDBNull = false;
                this.columnДолжность.AllowDBNull = false;
                this.columnДолжность.MaxLength = 50;
                this.columnНомер_телефона.MaxLength = 30;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public СотрудникиRow NewСотрудникиRow() {
                return ((СотрудникиRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new СотрудникиRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(СотрудникиRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.СотрудникиRowChanged != null)) {
                    this.СотрудникиRowChanged(this, new СотрудникиRowChangeEvent(((СотрудникиRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.СотрудникиRowChanging != null)) {
                    this.СотрудникиRowChanging(this, new СотрудникиRowChangeEvent(((СотрудникиRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.СотрудникиRowDeleted != null)) {
                    this.СотрудникиRowDeleted(this, new СотрудникиRowChangeEvent(((СотрудникиRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.СотрудникиRowDeleting != null)) {
                    this.СотрудникиRowDeleting(this, new СотрудникиRowChangeEvent(((СотрудникиRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void RemoveСотрудникиRow(СотрудникиRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                Katal_Reform_DBDataSet1 ds = new Katal_Reform_DBDataSet1();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "СотрудникиDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class _Термодин_харак_DataTable : global::System.Data.TypedTableBase<_Термодин_харак_Row> {
            
            private global::System.Data.DataColumn columncharac_id;
            
            private global::System.Data.DataColumn columnОбозначение_;
            
            private global::System.Data.DataColumn columnНаименование;
            
            private global::System.Data.DataColumn _columnΔH298___кДж_моль;
            
            private global::System.Data.DataColumn _column_S298___Дж__моль_К_;
            
            private global::System.Data.DataColumn _columnСp_298__Дж__моль_град_;
            
            private global::System.Data.DataColumn columna_;
            
            private global::System.Data.DataColumn _columnb_10_3;
            
            private global::System.Data.DataColumn _columnc_10_6;
            
            private global::System.Data.DataColumn _columnc__10__5;
            
            private global::System.Data.DataColumn _columnСp_298__Дж__моль_град___Расчитанная_через_коэфициенты;
            
            private global::System.Data.DataColumn _columnОшибка___;
            
            private global::System.Data.DataColumn columnF13;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public _Термодин_харак_DataTable() {
                this.TableName = "Термодин_харак$";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal _Термодин_харак_DataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected _Термодин_харак_DataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn charac_idColumn {
                get {
                    return this.columncharac_id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn Обозначение_Column {
                get {
                    return this.columnОбозначение_;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn НаименованиеColumn {
                get {
                    return this.columnНаименование;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn _ΔH298___кДж_мольColumn {
                get {
                    return this._columnΔH298___кДж_моль;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn @__S298___Дж__моль_К_Column {
                get {
                    return this._column_S298___Дж__моль_К_;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn _Сp_298__Дж__моль_град_Column {
                get {
                    return this._columnСp_298__Дж__моль_град_;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn a_Column {
                get {
                    return this.columna_;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn _b_10_3Column {
                get {
                    return this._columnb_10_3;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn _c_10_6Column {
                get {
                    return this._columnc_10_6;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn _c__10__5Column {
                get {
                    return this._columnc__10__5;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn _Сp_298__Дж__моль_град___Расчитанная_через_коэфициентыColumn {
                get {
                    return this._columnСp_298__Дж__моль_град___Расчитанная_через_коэфициенты;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn _Ошибка___Column {
                get {
                    return this._columnОшибка___;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn F13Column {
                get {
                    return this.columnF13;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public _Термодин_харак_Row this[int index] {
                get {
                    return ((_Термодин_харак_Row)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event _Термодин_харак_RowChangeEventHandler _Термодин_харак_RowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event _Термодин_харак_RowChangeEventHandler _Термодин_харак_RowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event _Термодин_харак_RowChangeEventHandler _Термодин_харак_RowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event _Термодин_харак_RowChangeEventHandler _Термодин_харак_RowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void Add_Термодин_харак_Row(_Термодин_харак_Row row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public _Термодин_харак_Row Add_Термодин_харак_Row(int charac_id, string Обозначение_, string Наименование, double _ΔH298___кДж_моль, double @__S298___Дж__моль_К_, double _Сp_298__Дж__моль_град_, double a_, double _b_10_3, double _c_10_6, double _c__10__5, double _Сp_298__Дж__моль_град___Расчитанная_через_коэфициенты, double _Ошибка___, string F13) {
                _Термодин_харак_Row row_Термодин_харак_Row = ((_Термодин_харак_Row)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        charac_id,
                        Обозначение_,
                        Наименование,
                        _ΔH298___кДж_моль,
                        @__S298___Дж__моль_К_,
                        _Сp_298__Дж__моль_град_,
                        a_,
                        _b_10_3,
                        _c_10_6,
                        _c__10__5,
                        _Сp_298__Дж__моль_град___Расчитанная_через_коэфициенты,
                        _Ошибка___,
                        F13};
                row_Термодин_харак_Row.ItemArray = columnValuesArray;
                this.Rows.Add(row_Термодин_харак_Row);
                return row_Термодин_харак_Row;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public _Термодин_харак_Row FindBycharac_id(int charac_id) {
                return ((_Термодин_харак_Row)(this.Rows.Find(new object[] {
                            charac_id})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                _Термодин_харак_DataTable cln = ((_Термодин_харак_DataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new _Термодин_харак_DataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal void InitVars() {
                this.columncharac_id = base.Columns["charac_id"];
                this.columnОбозначение_ = base.Columns["Обозначение "];
                this.columnНаименование = base.Columns["Наименование"];
                this._columnΔH298___кДж_моль = base.Columns["ΔH298 , кДж/моль"];
                this._column_S298___Дж__моль_К_ = base.Columns[" S298 , Дж/(моль*К)"];
                this._columnСp_298__Дж__моль_град_ = base.Columns["Сp 298, Дж/(моль*град)"];
                this.columna_ = base.Columns["a "];
                this._columnb_10_3 = base.Columns["b*10^3"];
                this._columnc_10_6 = base.Columns["c*10^6"];
                this._columnc__10__5 = base.Columns["c_*10^-5"];
                this._columnСp_298__Дж__моль_град___Расчитанная_через_коэфициенты = base.Columns["Сp 298, Дж/(моль*град), Расчитанная через коэфициенты"];
                this._columnОшибка___ = base.Columns["Ошибка, %"];
                this.columnF13 = base.Columns["F13"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            private void InitClass() {
                this.columncharac_id = new global::System.Data.DataColumn("charac_id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncharac_id);
                this.columnОбозначение_ = new global::System.Data.DataColumn("Обозначение ", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnОбозначение_);
                this.columnНаименование = new global::System.Data.DataColumn("Наименование", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnНаименование);
                this._columnΔH298___кДж_моль = new global::System.Data.DataColumn("ΔH298 , кДж/моль", typeof(double), null, global::System.Data.MappingType.Element);
                this._columnΔH298___кДж_моль.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "_columnΔH298___кДж_моль");
                this._columnΔH298___кДж_моль.ExtendedProperties.Add("Generator_UserColumnName", "ΔH298 , кДж/моль");
                base.Columns.Add(this._columnΔH298___кДж_моль);
                this._column_S298___Дж__моль_К_ = new global::System.Data.DataColumn(" S298 , Дж/(моль*К)", typeof(double), null, global::System.Data.MappingType.Element);
                this._column_S298___Дж__моль_К_.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "_column_S298___Дж__моль_К_");
                this._column_S298___Дж__моль_К_.ExtendedProperties.Add("Generator_UserColumnName", " S298 , Дж/(моль*К)");
                base.Columns.Add(this._column_S298___Дж__моль_К_);
                this._columnСp_298__Дж__моль_град_ = new global::System.Data.DataColumn("Сp 298, Дж/(моль*град)", typeof(double), null, global::System.Data.MappingType.Element);
                this._columnСp_298__Дж__моль_град_.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "_columnСp_298__Дж__моль_град_");
                this._columnСp_298__Дж__моль_град_.ExtendedProperties.Add("Generator_UserColumnName", "Сp 298, Дж/(моль*град)");
                base.Columns.Add(this._columnСp_298__Дж__моль_град_);
                this.columna_ = new global::System.Data.DataColumn("a ", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columna_);
                this._columnb_10_3 = new global::System.Data.DataColumn("b*10^3", typeof(double), null, global::System.Data.MappingType.Element);
                this._columnb_10_3.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "_columnb_10_3");
                this._columnb_10_3.ExtendedProperties.Add("Generator_UserColumnName", "b*10^3");
                base.Columns.Add(this._columnb_10_3);
                this._columnc_10_6 = new global::System.Data.DataColumn("c*10^6", typeof(double), null, global::System.Data.MappingType.Element);
                this._columnc_10_6.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "_columnc_10_6");
                this._columnc_10_6.ExtendedProperties.Add("Generator_UserColumnName", "c*10^6");
                base.Columns.Add(this._columnc_10_6);
                this._columnc__10__5 = new global::System.Data.DataColumn("c_*10^-5", typeof(double), null, global::System.Data.MappingType.Element);
                this._columnc__10__5.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "_columnc__10__5");
                this._columnc__10__5.ExtendedProperties.Add("Generator_UserColumnName", "c_*10^-5");
                base.Columns.Add(this._columnc__10__5);
                this._columnСp_298__Дж__моль_град___Расчитанная_через_коэфициенты = new global::System.Data.DataColumn("Сp 298, Дж/(моль*град), Расчитанная через коэфициенты", typeof(double), null, global::System.Data.MappingType.Element);
                this._columnСp_298__Дж__моль_град___Расчитанная_через_коэфициенты.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "_columnСp_298__Дж__моль_град___Расчитанная_через_коэфициенты");
                this._columnСp_298__Дж__моль_град___Расчитанная_через_коэфициенты.ExtendedProperties.Add("Generator_UserColumnName", "Сp 298, Дж/(моль*град), Расчитанная через коэфициенты");
                base.Columns.Add(this._columnСp_298__Дж__моль_град___Расчитанная_через_коэфициенты);
                this._columnОшибка___ = new global::System.Data.DataColumn("Ошибка, %", typeof(double), null, global::System.Data.MappingType.Element);
                this._columnОшибка___.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "_columnОшибка___");
                this._columnОшибка___.ExtendedProperties.Add("Generator_UserColumnName", "Ошибка, %");
                base.Columns.Add(this._columnОшибка___);
                this.columnF13 = new global::System.Data.DataColumn("F13", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnF13);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columncharac_id}, true));
                this.columncharac_id.AllowDBNull = false;
                this.columncharac_id.Unique = true;
                this.columnОбозначение_.MaxLength = 255;
                this.columnНаименование.MaxLength = 255;
                this.columnF13.MaxLength = 255;
                this.ExtendedProperties.Add("Generator_TableVarName", "_tableТермодин_харак_");
                this.ExtendedProperties.Add("Generator_UserTableName", "Термодин_харак$");
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public _Термодин_харак_Row New_Термодин_харак_Row() {
                return ((_Термодин_харак_Row)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new _Термодин_харак_Row(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(_Термодин_харак_Row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this._Термодин_харак_RowChanged != null)) {
                    this._Термодин_харак_RowChanged(this, new _Термодин_харак_RowChangeEvent(((_Термодин_харак_Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this._Термодин_харак_RowChanging != null)) {
                    this._Термодин_харак_RowChanging(this, new _Термодин_харак_RowChangeEvent(((_Термодин_харак_Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this._Термодин_харак_RowDeleted != null)) {
                    this._Термодин_харак_RowDeleted(this, new _Термодин_харак_RowChangeEvent(((_Термодин_харак_Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this._Термодин_харак_RowDeleting != null)) {
                    this._Термодин_харак_RowDeleting(this, new _Термодин_харак_RowChangeEvent(((_Термодин_харак_Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void Remove_Термодин_харак_Row(_Термодин_харак_Row row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                Katal_Reform_DBDataSet1 ds = new Katal_Reform_DBDataSet1();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "_Термодин_харак_DataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class УстановкаDataTable : global::System.Data.TypedTableBase<УстановкаRow> {
            
            private global::System.Data.DataColumn columnfacility_id;
            
            private global::System.Data.DataColumn columnНаименование_установки;
            
            private global::System.Data.DataColumn columnГод_открытия_устанвки;
            
            private global::System.Data.DataColumn columnМестоположение;
            
            private global::System.Data.DataColumn columnПроизводительность;
            
            private global::System.Data.DataColumn columnДавление;
            
            private global::System.Data.DataColumn columnТемпература_кипения;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public УстановкаDataTable() {
                this.TableName = "Установка";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal УстановкаDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected УстановкаDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn facility_idColumn {
                get {
                    return this.columnfacility_id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn Наименование_установкиColumn {
                get {
                    return this.columnНаименование_установки;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn Год_открытия_устанвкиColumn {
                get {
                    return this.columnГод_открытия_устанвки;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn МестоположениеColumn {
                get {
                    return this.columnМестоположение;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ПроизводительностьColumn {
                get {
                    return this.columnПроизводительность;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ДавлениеColumn {
                get {
                    return this.columnДавление;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn Температура_кипенияColumn {
                get {
                    return this.columnТемпература_кипения;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public УстановкаRow this[int index] {
                get {
                    return ((УстановкаRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event УстановкаRowChangeEventHandler УстановкаRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event УстановкаRowChangeEventHandler УстановкаRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event УстановкаRowChangeEventHandler УстановкаRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event УстановкаRowChangeEventHandler УстановкаRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void AddУстановкаRow(УстановкаRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public УстановкаRow AddУстановкаRow(int facility_id, string Наименование_установки, int Год_открытия_устанвки, string Местоположение, double Производительность, double Давление, int Температура_кипения) {
                УстановкаRow rowУстановкаRow = ((УстановкаRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        facility_id,
                        Наименование_установки,
                        Год_открытия_устанвки,
                        Местоположение,
                        Производительность,
                        Давление,
                        Температура_кипения};
                rowУстановкаRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowУстановкаRow);
                return rowУстановкаRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public УстановкаRow FindByfacility_id(int facility_id) {
                return ((УстановкаRow)(this.Rows.Find(new object[] {
                            facility_id})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                УстановкаDataTable cln = ((УстановкаDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new УстановкаDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal void InitVars() {
                this.columnfacility_id = base.Columns["facility_id"];
                this.columnНаименование_установки = base.Columns["Наименование_установки"];
                this.columnГод_открытия_устанвки = base.Columns["Год_открытия_устанвки"];
                this.columnМестоположение = base.Columns["Местоположение"];
                this.columnПроизводительность = base.Columns["Производительность"];
                this.columnДавление = base.Columns["Давление"];
                this.columnТемпература_кипения = base.Columns["Температура_кипения"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            private void InitClass() {
                this.columnfacility_id = new global::System.Data.DataColumn("facility_id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnfacility_id);
                this.columnНаименование_установки = new global::System.Data.DataColumn("Наименование_установки", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnНаименование_установки);
                this.columnГод_открытия_устанвки = new global::System.Data.DataColumn("Год_открытия_устанвки", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnГод_открытия_устанвки);
                this.columnМестоположение = new global::System.Data.DataColumn("Местоположение", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnМестоположение);
                this.columnПроизводительность = new global::System.Data.DataColumn("Производительность", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnПроизводительность);
                this.columnДавление = new global::System.Data.DataColumn("Давление", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnДавление);
                this.columnТемпература_кипения = new global::System.Data.DataColumn("Температура_кипения", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnТемпература_кипения);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnfacility_id}, true));
                this.columnfacility_id.AllowDBNull = false;
                this.columnfacility_id.Unique = true;
                this.columnНаименование_установки.AllowDBNull = false;
                this.columnНаименование_установки.MaxLength = 32;
                this.columnГод_открытия_устанвки.AllowDBNull = false;
                this.columnМестоположение.AllowDBNull = false;
                this.columnМестоположение.MaxLength = 64;
                this.columnПроизводительность.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public УстановкаRow NewУстановкаRow() {
                return ((УстановкаRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new УстановкаRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(УстановкаRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.УстановкаRowChanged != null)) {
                    this.УстановкаRowChanged(this, new УстановкаRowChangeEvent(((УстановкаRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.УстановкаRowChanging != null)) {
                    this.УстановкаRowChanging(this, new УстановкаRowChangeEvent(((УстановкаRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.УстановкаRowDeleted != null)) {
                    this.УстановкаRowDeleted(this, new УстановкаRowChangeEvent(((УстановкаRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.УстановкаRowDeleting != null)) {
                    this.УстановкаRowDeleting(this, new УстановкаRowChangeEvent(((УстановкаRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void RemoveУстановкаRow(УстановкаRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                Katal_Reform_DBDataSet1 ds = new Katal_Reform_DBDataSet1();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "УстановкаDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class _Изменение_концентрации_Row : global::System.Data.DataRow {
            
            private _Изменение_концентрации_DataTable _tableИзменение_концентрации_;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal _Изменение_концентрации_Row(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this._tableИзменение_концентрации_ = ((_Изменение_концентрации_DataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int conc_id {
                get {
                    return ((int)(this[this._tableИзменение_концентрации_.conc_idColumn]));
                }
                set {
                    this[this._tableИзменение_концентрации_.conc_idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int масса_катализатора {
                get {
                    try {
                        return ((int)(this[this._tableИзменение_концентрации_.масса_катализатораColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'масса катализатора\' в таблице \'Изменение_концентрации$\' рав" +
                                "но DBNull.", e);
                    }
                }
                set {
                    this[this._tableИзменение_концентрации_.масса_катализатораColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public double NP1 {
                get {
                    try {
                        return ((double)(this[this._tableИзменение_концентрации_.NP1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'NP1\' в таблице \'Изменение_концентрации$\' равно DBNull.", e);
                    }
                }
                set {
                    this[this._tableИзменение_концентрации_.NP1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public double NP2 {
                get {
                    try {
                        return ((double)(this[this._tableИзменение_концентрации_.NP2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'NP2\' в таблице \'Изменение_концентрации$\' равно DBNull.", e);
                    }
                }
                set {
                    this[this._tableИзменение_концентрации_.NP2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public double NP3 {
                get {
                    try {
                        return ((double)(this[this._tableИзменение_концентрации_.NP3Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'NP3\' в таблице \'Изменение_концентрации$\' равно DBNull.", e);
                    }
                }
                set {
                    this[this._tableИзменение_концентрации_.NP3Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public double NP4 {
                get {
                    try {
                        return ((double)(this[this._tableИзменение_концентрации_.NP4Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'NP4\' в таблице \'Изменение_концентрации$\' равно DBNull.", e);
                    }
                }
                set {
                    this[this._tableИзменение_концентрации_.NP4Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public double NP5 {
                get {
                    try {
                        return ((double)(this[this._tableИзменение_концентрации_.NP5Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'NP5\' в таблице \'Изменение_концентрации$\' равно DBNull.", e);
                    }
                }
                set {
                    this[this._tableИзменение_концентрации_.NP5Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public double NP6 {
                get {
                    try {
                        return ((double)(this[this._tableИзменение_концентрации_.NP6Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'NP6\' в таблице \'Изменение_концентрации$\' равно DBNull.", e);
                    }
                }
                set {
                    this[this._tableИзменение_концентрации_.NP6Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public double NP7 {
                get {
                    try {
                        return ((double)(this[this._tableИзменение_концентрации_.NP7Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'NP7\' в таблице \'Изменение_концентрации$\' равно DBNull.", e);
                    }
                }
                set {
                    this[this._tableИзменение_концентрации_.NP7Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public double NP8 {
                get {
                    try {
                        return ((double)(this[this._tableИзменение_концентрации_.NP8Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'NP8\' в таблице \'Изменение_концентрации$\' равно DBNull.", e);
                    }
                }
                set {
                    this[this._tableИзменение_концентрации_.NP8Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public double NP9 {
                get {
                    try {
                        return ((double)(this[this._tableИзменение_концентрации_.NP9Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'NP9\' в таблице \'Изменение_концентрации$\' равно DBNull.", e);
                    }
                }
                set {
                    this[this._tableИзменение_концентрации_.NP9Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public double NP10 {
                get {
                    try {
                        return ((double)(this[this._tableИзменение_концентрации_.NP10Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'NP10\' в таблице \'Изменение_концентрации$\' равно DBNull.", e);
                    }
                }
                set {
                    this[this._tableИзменение_концентрации_.NP10Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public double NP11 {
                get {
                    try {
                        return ((double)(this[this._tableИзменение_концентрации_.NP11Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'NP11\' в таблице \'Изменение_концентрации$\' равно DBNull.", e);
                    }
                }
                set {
                    this[this._tableИзменение_концентрации_.NP11Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public double IP4 {
                get {
                    try {
                        return ((double)(this[this._tableИзменение_концентрации_.IP4Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'IP4\' в таблице \'Изменение_концентрации$\' равно DBNull.", e);
                    }
                }
                set {
                    this[this._tableИзменение_концентрации_.IP4Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public double IP5 {
                get {
                    try {
                        return ((double)(this[this._tableИзменение_концентрации_.IP5Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'IP5\' в таблице \'Изменение_концентрации$\' равно DBNull.", e);
                    }
                }
                set {
                    this[this._tableИзменение_концентрации_.IP5Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public double IP6 {
                get {
                    try {
                        return ((double)(this[this._tableИзменение_концентрации_.IP6Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'IP6\' в таблице \'Изменение_концентрации$\' равно DBNull.", e);
                    }
                }
                set {
                    this[this._tableИзменение_концентрации_.IP6Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public double IP7 {
                get {
                    try {
                        return ((double)(this[this._tableИзменение_концентрации_.IP7Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'IP7\' в таблице \'Изменение_концентрации$\' равно DBNull.", e);
                    }
                }
                set {
                    this[this._tableИзменение_концентрации_.IP7Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public double IP8 {
                get {
                    try {
                        return ((double)(this[this._tableИзменение_концентрации_.IP8Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'IP8\' в таблице \'Изменение_концентрации$\' равно DBNull.", e);
                    }
                }
                set {
                    this[this._tableИзменение_концентрации_.IP8Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public double IP9 {
                get {
                    try {
                        return ((double)(this[this._tableИзменение_концентрации_.IP9Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'IP9\' в таблице \'Изменение_концентрации$\' равно DBNull.", e);
                    }
                }
                set {
                    this[this._tableИзменение_концентрации_.IP9Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public double IP10 {
                get {
                    try {
                        return ((double)(this[this._tableИзменение_концентрации_.IP10Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'IP10\' в таблице \'Изменение_концентрации$\' равно DBNull.", e);
                    }
                }
                set {
                    this[this._tableИзменение_концентрации_.IP10Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public double IP11 {
                get {
                    try {
                        return ((double)(this[this._tableИзменение_концентрации_.IP11Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'IP11\' в таблице \'Изменение_концентрации$\' равно DBNull.", e);
                    }
                }
                set {
                    this[this._tableИзменение_концентрации_.IP11Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public double ACP5 {
                get {
                    try {
                        return ((double)(this[this._tableИзменение_концентрации_.ACP5Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'ACP5\' в таблице \'Изменение_концентрации$\' равно DBNull.", e);
                    }
                }
                set {
                    this[this._tableИзменение_концентрации_.ACP5Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public double ACP6 {
                get {
                    try {
                        return ((double)(this[this._tableИзменение_концентрации_.ACP6Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'ACP6\' в таблице \'Изменение_концентрации$\' равно DBNull.", e);
                    }
                }
                set {
                    this[this._tableИзменение_концентрации_.ACP6Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public double ACP7 {
                get {
                    try {
                        return ((double)(this[this._tableИзменение_концентрации_.ACP7Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'ACP7\' в таблице \'Изменение_концентрации$\' равно DBNull.", e);
                    }
                }
                set {
                    this[this._tableИзменение_концентрации_.ACP7Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public double ACP8 {
                get {
                    try {
                        return ((double)(this[this._tableИзменение_концентрации_.ACP8Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'ACP8\' в таблице \'Изменение_концентрации$\' равно DBNull.", e);
                    }
                }
                set {
                    this[this._tableИзменение_концентрации_.ACP8Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public double ACP9 {
                get {
                    try {
                        return ((double)(this[this._tableИзменение_концентрации_.ACP9Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'ACP9\' в таблице \'Изменение_концентрации$\' равно DBNull.", e);
                    }
                }
                set {
                    this[this._tableИзменение_концентрации_.ACP9Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public double ACP10 {
                get {
                    try {
                        return ((double)(this[this._tableИзменение_концентрации_.ACP10Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'ACP10\' в таблице \'Изменение_концентрации$\' равно DBNull.", e);
                    }
                }
                set {
                    this[this._tableИзменение_концентрации_.ACP10Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public double ACP11 {
                get {
                    try {
                        return ((double)(this[this._tableИзменение_концентрации_.ACP11Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'ACP11\' в таблице \'Изменение_концентрации$\' равно DBNull.", e);
                    }
                }
                set {
                    this[this._tableИзменение_концентрации_.ACP11Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public double ACH6 {
                get {
                    try {
                        return ((double)(this[this._tableИзменение_концентрации_.ACH6Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'ACH6\' в таблице \'Изменение_концентрации$\' равно DBNull.", e);
                    }
                }
                set {
                    this[this._tableИзменение_концентрации_.ACH6Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public double ACH7 {
                get {
                    try {
                        return ((double)(this[this._tableИзменение_концентрации_.ACH7Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'ACH7\' в таблице \'Изменение_концентрации$\' равно DBNull.", e);
                    }
                }
                set {
                    this[this._tableИзменение_концентрации_.ACH7Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public double ACH8 {
                get {
                    try {
                        return ((double)(this[this._tableИзменение_концентрации_.ACH8Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'ACH8\' в таблице \'Изменение_концентрации$\' равно DBNull.", e);
                    }
                }
                set {
                    this[this._tableИзменение_концентрации_.ACH8Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public double ACH9 {
                get {
                    try {
                        return ((double)(this[this._tableИзменение_концентрации_.ACH9Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'ACH9\' в таблице \'Изменение_концентрации$\' равно DBNull.", e);
                    }
                }
                set {
                    this[this._tableИзменение_концентрации_.ACH9Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public double ACH10 {
                get {
                    try {
                        return ((double)(this[this._tableИзменение_концентрации_.ACH10Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'ACH10\' в таблице \'Изменение_концентрации$\' равно DBNull.", e);
                    }
                }
                set {
                    this[this._tableИзменение_концентрации_.ACH10Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public double ACH11 {
                get {
                    try {
                        return ((double)(this[this._tableИзменение_концентрации_.ACH11Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'ACH11\' в таблице \'Изменение_концентрации$\' равно DBNull.", e);
                    }
                }
                set {
                    this[this._tableИзменение_концентрации_.ACH11Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public double A6 {
                get {
                    try {
                        return ((double)(this[this._tableИзменение_концентрации_.A6Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'A6\' в таблице \'Изменение_концентрации$\' равно DBNull.", e);
                    }
                }
                set {
                    this[this._tableИзменение_концентрации_.A6Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public double A7 {
                get {
                    try {
                        return ((double)(this[this._tableИзменение_концентрации_.A7Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'A7\' в таблице \'Изменение_концентрации$\' равно DBNull.", e);
                    }
                }
                set {
                    this[this._tableИзменение_концентрации_.A7Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public double A8 {
                get {
                    try {
                        return ((double)(this[this._tableИзменение_концентрации_.A8Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'A8\' в таблице \'Изменение_концентрации$\' равно DBNull.", e);
                    }
                }
                set {
                    this[this._tableИзменение_концентрации_.A8Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public double A9 {
                get {
                    try {
                        return ((double)(this[this._tableИзменение_концентрации_.A9Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'A9\' в таблице \'Изменение_концентрации$\' равно DBNull.", e);
                    }
                }
                set {
                    this[this._tableИзменение_концентрации_.A9Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public double A10 {
                get {
                    try {
                        return ((double)(this[this._tableИзменение_концентрации_.A10Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'A10\' в таблице \'Изменение_концентрации$\' равно DBNull.", e);
                    }
                }
                set {
                    this[this._tableИзменение_концентрации_.A10Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public double A11 {
                get {
                    try {
                        return ((double)(this[this._tableИзменение_концентрации_.A11Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'A11\' в таблице \'Изменение_концентрации$\' равно DBNull.", e);
                    }
                }
                set {
                    this[this._tableИзменение_концентрации_.A11Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public double H2 {
                get {
                    try {
                        return ((double)(this[this._tableИзменение_концентрации_.H2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'H2\' в таблице \'Изменение_концентрации$\' равно DBNull.", e);
                    }
                }
                set {
                    this[this._tableИзменение_концентрации_.H2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool Isмасса_катализатораNull() {
                return this.IsNull(this._tableИзменение_концентрации_.масса_катализатораColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void Setмасса_катализатораNull() {
                this[this._tableИзменение_концентрации_.масса_катализатораColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsNP1Null() {
                return this.IsNull(this._tableИзменение_концентрации_.NP1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetNP1Null() {
                this[this._tableИзменение_концентрации_.NP1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsNP2Null() {
                return this.IsNull(this._tableИзменение_концентрации_.NP2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetNP2Null() {
                this[this._tableИзменение_концентрации_.NP2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsNP3Null() {
                return this.IsNull(this._tableИзменение_концентрации_.NP3Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetNP3Null() {
                this[this._tableИзменение_концентрации_.NP3Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsNP4Null() {
                return this.IsNull(this._tableИзменение_концентрации_.NP4Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetNP4Null() {
                this[this._tableИзменение_концентрации_.NP4Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsNP5Null() {
                return this.IsNull(this._tableИзменение_концентрации_.NP5Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetNP5Null() {
                this[this._tableИзменение_концентрации_.NP5Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsNP6Null() {
                return this.IsNull(this._tableИзменение_концентрации_.NP6Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetNP6Null() {
                this[this._tableИзменение_концентрации_.NP6Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsNP7Null() {
                return this.IsNull(this._tableИзменение_концентрации_.NP7Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetNP7Null() {
                this[this._tableИзменение_концентрации_.NP7Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsNP8Null() {
                return this.IsNull(this._tableИзменение_концентрации_.NP8Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetNP8Null() {
                this[this._tableИзменение_концентрации_.NP8Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsNP9Null() {
                return this.IsNull(this._tableИзменение_концентрации_.NP9Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetNP9Null() {
                this[this._tableИзменение_концентрации_.NP9Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsNP10Null() {
                return this.IsNull(this._tableИзменение_концентрации_.NP10Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetNP10Null() {
                this[this._tableИзменение_концентрации_.NP10Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsNP11Null() {
                return this.IsNull(this._tableИзменение_концентрации_.NP11Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetNP11Null() {
                this[this._tableИзменение_концентрации_.NP11Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsIP4Null() {
                return this.IsNull(this._tableИзменение_концентрации_.IP4Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetIP4Null() {
                this[this._tableИзменение_концентрации_.IP4Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsIP5Null() {
                return this.IsNull(this._tableИзменение_концентрации_.IP5Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetIP5Null() {
                this[this._tableИзменение_концентрации_.IP5Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsIP6Null() {
                return this.IsNull(this._tableИзменение_концентрации_.IP6Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetIP6Null() {
                this[this._tableИзменение_концентрации_.IP6Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsIP7Null() {
                return this.IsNull(this._tableИзменение_концентрации_.IP7Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetIP7Null() {
                this[this._tableИзменение_концентрации_.IP7Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsIP8Null() {
                return this.IsNull(this._tableИзменение_концентрации_.IP8Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetIP8Null() {
                this[this._tableИзменение_концентрации_.IP8Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsIP9Null() {
                return this.IsNull(this._tableИзменение_концентрации_.IP9Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetIP9Null() {
                this[this._tableИзменение_концентрации_.IP9Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsIP10Null() {
                return this.IsNull(this._tableИзменение_концентрации_.IP10Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetIP10Null() {
                this[this._tableИзменение_концентрации_.IP10Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsIP11Null() {
                return this.IsNull(this._tableИзменение_концентрации_.IP11Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetIP11Null() {
                this[this._tableИзменение_концентрации_.IP11Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsACP5Null() {
                return this.IsNull(this._tableИзменение_концентрации_.ACP5Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetACP5Null() {
                this[this._tableИзменение_концентрации_.ACP5Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsACP6Null() {
                return this.IsNull(this._tableИзменение_концентрации_.ACP6Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetACP6Null() {
                this[this._tableИзменение_концентрации_.ACP6Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsACP7Null() {
                return this.IsNull(this._tableИзменение_концентрации_.ACP7Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetACP7Null() {
                this[this._tableИзменение_концентрации_.ACP7Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsACP8Null() {
                return this.IsNull(this._tableИзменение_концентрации_.ACP8Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetACP8Null() {
                this[this._tableИзменение_концентрации_.ACP8Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsACP9Null() {
                return this.IsNull(this._tableИзменение_концентрации_.ACP9Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetACP9Null() {
                this[this._tableИзменение_концентрации_.ACP9Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsACP10Null() {
                return this.IsNull(this._tableИзменение_концентрации_.ACP10Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetACP10Null() {
                this[this._tableИзменение_концентрации_.ACP10Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsACP11Null() {
                return this.IsNull(this._tableИзменение_концентрации_.ACP11Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetACP11Null() {
                this[this._tableИзменение_концентрации_.ACP11Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsACH6Null() {
                return this.IsNull(this._tableИзменение_концентрации_.ACH6Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetACH6Null() {
                this[this._tableИзменение_концентрации_.ACH6Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsACH7Null() {
                return this.IsNull(this._tableИзменение_концентрации_.ACH7Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetACH7Null() {
                this[this._tableИзменение_концентрации_.ACH7Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsACH8Null() {
                return this.IsNull(this._tableИзменение_концентрации_.ACH8Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetACH8Null() {
                this[this._tableИзменение_концентрации_.ACH8Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsACH9Null() {
                return this.IsNull(this._tableИзменение_концентрации_.ACH9Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetACH9Null() {
                this[this._tableИзменение_концентрации_.ACH9Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsACH10Null() {
                return this.IsNull(this._tableИзменение_концентрации_.ACH10Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetACH10Null() {
                this[this._tableИзменение_концентрации_.ACH10Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsACH11Null() {
                return this.IsNull(this._tableИзменение_концентрации_.ACH11Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetACH11Null() {
                this[this._tableИзменение_концентрации_.ACH11Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsA6Null() {
                return this.IsNull(this._tableИзменение_концентрации_.A6Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetA6Null() {
                this[this._tableИзменение_концентрации_.A6Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsA7Null() {
                return this.IsNull(this._tableИзменение_концентрации_.A7Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetA7Null() {
                this[this._tableИзменение_концентрации_.A7Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsA8Null() {
                return this.IsNull(this._tableИзменение_концентрации_.A8Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetA8Null() {
                this[this._tableИзменение_концентрации_.A8Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsA9Null() {
                return this.IsNull(this._tableИзменение_концентрации_.A9Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetA9Null() {
                this[this._tableИзменение_концентрации_.A9Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsA10Null() {
                return this.IsNull(this._tableИзменение_концентрации_.A10Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetA10Null() {
                this[this._tableИзменение_концентрации_.A10Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsA11Null() {
                return this.IsNull(this._tableИзменение_концентрации_.A11Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetA11Null() {
                this[this._tableИзменение_концентрации_.A11Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsH2Null() {
                return this.IsNull(this._tableИзменение_концентрации_.H2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetH2Null() {
                this[this._tableИзменение_концентрации_.H2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public ИзмКонц_УстановкаRow[] GetИзмКонц_УстановкаRows() {
                if ((this.Table.ChildRelations["FK__ИзмКонц_У__conc___2180FB33"] == null)) {
                    return new ИзмКонц_УстановкаRow[0];
                }
                else {
                    return ((ИзмКонц_УстановкаRow[])(base.GetChildRows(this.Table.ChildRelations["FK__ИзмКонц_У__conc___2180FB33"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class ИзмКонц_УстановкаRow : global::System.Data.DataRow {
            
            private ИзмКонц_УстановкаDataTable tableИзмКонц_Установка;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal ИзмКонц_УстановкаRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableИзмКонц_Установка = ((ИзмКонц_УстановкаDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int conc_id {
                get {
                    return ((int)(this[this.tableИзмКонц_Установка.conc_idColumn]));
                }
                set {
                    this[this.tableИзмКонц_Установка.conc_idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int facility_id {
                get {
                    return ((int)(this[this.tableИзмКонц_Установка.facility_idColumn]));
                }
                set {
                    this[this.tableИзмКонц_Установка.facility_idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public _Изменение_концентрации_Row _Изменение_концентрации_Row {
                get {
                    return ((_Изменение_концентрации_Row)(this.GetParentRow(this.Table.ParentRelations["FK__ИзмКонц_У__conc___2180FB33"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK__ИзмКонц_У__conc___2180FB33"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public УстановкаRow УстановкаRow {
                get {
                    return ((УстановкаRow)(this.GetParentRow(this.Table.ParentRelations["FK__ИзмКонц_У__facil__22751F6C"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK__ИзмКонц_У__facil__22751F6C"]);
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class КомпонентыRow : global::System.Data.DataRow {
            
            private КомпонентыDataTable tableКомпоненты;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal КомпонентыRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableКомпоненты = ((КомпонентыDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int component_id {
                get {
                    return ((int)(this[this.tableКомпоненты.component_idColumn]));
                }
                set {
                    this[this.tableКомпоненты.component_idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Наименование_компонента {
                get {
                    return ((string)(this[this.tableКомпоненты.Наименование_компонентаColumn]));
                }
                set {
                    this[this.tableКомпоненты.Наименование_компонентаColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Хим_формула {
                get {
                    return ((string)(this[this.tableКомпоненты.Хим_формулаColumn]));
                }
                set {
                    this[this.tableКомпоненты.Хим_формулаColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public double Молярная_масса {
                get {
                    return ((double)(this[this.tableКомпоненты.Молярная_массаColumn]));
                }
                set {
                    this[this.tableКомпоненты.Молярная_массаColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public double Температура_кипения {
                get {
                    return ((double)(this[this.tableКомпоненты.Температура_кипенияColumn]));
                }
                set {
                    this[this.tableКомпоненты.Температура_кипенияColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int charac_id {
                get {
                    try {
                        return ((int)(this[this.tableКомпоненты.charac_idColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'charac_id\' в таблице \'Компоненты\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableКомпоненты.charac_idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public _Термодин_харак_Row _Термодин_харак_Row {
                get {
                    return ((_Термодин_харак_Row)(this.GetParentRow(this.Table.ParentRelations["FK__Компонент__chara__07C12930"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK__Компонент__chara__07C12930"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool Ischarac_idNull() {
                return this.IsNull(this.tableКомпоненты.charac_idColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void Setcharac_idNull() {
                this[this.tableКомпоненты.charac_idColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public Компоненты_УстановкаRow[] GetКомпоненты_УстановкаRows() {
                if ((this.Table.ChildRelations["FK__Компонент__compo__1DB06A4F"] == null)) {
                    return new Компоненты_УстановкаRow[0];
                }
                else {
                    return ((Компоненты_УстановкаRow[])(base.GetChildRows(this.Table.ChildRelations["FK__Компонент__compo__1DB06A4F"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class Компоненты_УстановкаRow : global::System.Data.DataRow {
            
            private Компоненты_УстановкаDataTable tableКомпоненты_Установка;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal Компоненты_УстановкаRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableКомпоненты_Установка = ((Компоненты_УстановкаDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int component_id {
                get {
                    return ((int)(this[this.tableКомпоненты_Установка.component_idColumn]));
                }
                set {
                    this[this.tableКомпоненты_Установка.component_idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int facility_id {
                get {
                    return ((int)(this[this.tableКомпоненты_Установка.facility_idColumn]));
                }
                set {
                    this[this.tableКомпоненты_Установка.facility_idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public КомпонентыRow КомпонентыRow {
                get {
                    return ((КомпонентыRow)(this.GetParentRow(this.Table.ParentRelations["FK__Компонент__compo__1DB06A4F"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK__Компонент__compo__1DB06A4F"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public УстановкаRow УстановкаRow {
                get {
                    return ((УстановкаRow)(this.GetParentRow(this.Table.ParentRelations["FK__Компонент__facil__1EA48E88"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK__Компонент__facil__1EA48E88"]);
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class СотрудникиRow : global::System.Data.DataRow {
            
            private СотрудникиDataTable tableСотрудники;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal СотрудникиRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableСотрудники = ((СотрудникиDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int employee_id {
                get {
                    return ((int)(this[this.tableСотрудники.employee_idColumn]));
                }
                set {
                    this[this.tableСотрудники.employee_idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string ФИО {
                get {
                    return ((string)(this[this.tableСотрудники.ФИОColumn]));
                }
                set {
                    this[this.tableСотрудники.ФИОColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public System.DateTime Дата_рождения {
                get {
                    return ((global::System.DateTime)(this[this.tableСотрудники.Дата_рожденияColumn]));
                }
                set {
                    this[this.tableСотрудники.Дата_рожденияColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public long Пасспортные_данные {
                get {
                    return ((long)(this[this.tableСотрудники.Пасспортные_данныеColumn]));
                }
                set {
                    this[this.tableСотрудники.Пасспортные_данныеColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Должность {
                get {
                    return ((string)(this[this.tableСотрудники.ДолжностьColumn]));
                }
                set {
                    this[this.tableСотрудники.ДолжностьColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Номер_телефона {
                get {
                    try {
                        return ((string)(this[this.tableСотрудники.Номер_телефонаColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'Номер_телефона\' в таблице \'Сотрудники\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableСотрудники.Номер_телефонаColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int facility_id {
                get {
                    try {
                        return ((int)(this[this.tableСотрудники.facility_idColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'facility_id\' в таблице \'Сотрудники\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableСотрудники.facility_idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public УстановкаRow УстановкаRow {
                get {
                    return ((УстановкаRow)(this.GetParentRow(this.Table.ParentRelations["FK__Сотрудник__facil__1AD3FDA4"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK__Сотрудник__facil__1AD3FDA4"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsНомер_телефонаNull() {
                return this.IsNull(this.tableСотрудники.Номер_телефонаColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetНомер_телефонаNull() {
                this[this.tableСотрудники.Номер_телефонаColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool Isfacility_idNull() {
                return this.IsNull(this.tableСотрудники.facility_idColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void Setfacility_idNull() {
                this[this.tableСотрудники.facility_idColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class _Термодин_харак_Row : global::System.Data.DataRow {
            
            private _Термодин_харак_DataTable _tableТермодин_харак_;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal _Термодин_харак_Row(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this._tableТермодин_харак_ = ((_Термодин_харак_DataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int charac_id {
                get {
                    return ((int)(this[this._tableТермодин_харак_.charac_idColumn]));
                }
                set {
                    this[this._tableТермодин_харак_.charac_idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Обозначение_ {
                get {
                    try {
                        return ((string)(this[this._tableТермодин_харак_.Обозначение_Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'Обозначение \' в таблице \'Термодин_харак$\' равно DBNull.", e);
                    }
                }
                set {
                    this[this._tableТермодин_харак_.Обозначение_Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Наименование {
                get {
                    try {
                        return ((string)(this[this._tableТермодин_харак_.НаименованиеColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'Наименование\' в таблице \'Термодин_харак$\' равно DBNull.", e);
                    }
                }
                set {
                    this[this._tableТермодин_харак_.НаименованиеColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public double _ΔH298___кДж_моль {
                get {
                    try {
                        return ((double)(this[this._tableТермодин_харак_._ΔH298___кДж_мольColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'ΔH298 , кДж/моль\' в таблице \'Термодин_харак$\' равно DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this._tableТермодин_харак_._ΔH298___кДж_мольColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public double @__S298___Дж__моль_К_ {
                get {
                    try {
                        return ((double)(this[this._tableТермодин_харак_.@__S298___Дж__моль_К_Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \' S298 , Дж/(моль*К)\' в таблице \'Термодин_харак$\' равно DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this._tableТермодин_харак_.@__S298___Дж__моль_К_Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public double _Сp_298__Дж__моль_град_ {
                get {
                    try {
                        return ((double)(this[this._tableТермодин_харак_._Сp_298__Дж__моль_град_Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'Сp 298, Дж/(моль*град)\' в таблице \'Термодин_харак$\' равно D" +
                                "BNull.", e);
                    }
                }
                set {
                    this[this._tableТермодин_харак_._Сp_298__Дж__моль_град_Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public double a_ {
                get {
                    try {
                        return ((double)(this[this._tableТермодин_харак_.a_Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'a \' в таблице \'Термодин_харак$\' равно DBNull.", e);
                    }
                }
                set {
                    this[this._tableТермодин_харак_.a_Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public double _b_10_3 {
                get {
                    try {
                        return ((double)(this[this._tableТермодин_харак_._b_10_3Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'b*10^3\' в таблице \'Термодин_харак$\' равно DBNull.", e);
                    }
                }
                set {
                    this[this._tableТермодин_харак_._b_10_3Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public double _c_10_6 {
                get {
                    try {
                        return ((double)(this[this._tableТермодин_харак_._c_10_6Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'c*10^6\' в таблице \'Термодин_харак$\' равно DBNull.", e);
                    }
                }
                set {
                    this[this._tableТермодин_харак_._c_10_6Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public double _c__10__5 {
                get {
                    try {
                        return ((double)(this[this._tableТермодин_харак_._c__10__5Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'c_*10^-5\' в таблице \'Термодин_харак$\' равно DBNull.", e);
                    }
                }
                set {
                    this[this._tableТермодин_харак_._c__10__5Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public double _Сp_298__Дж__моль_град___Расчитанная_через_коэфициенты {
                get {
                    try {
                        return ((double)(this[this._tableТермодин_харак_._Сp_298__Дж__моль_град___Расчитанная_через_коэфициентыColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'Сp 298, Дж/(моль*град), Расчитанная через коэфициенты\' в та" +
                                "блице \'Термодин_харак$\' равно DBNull.", e);
                    }
                }
                set {
                    this[this._tableТермодин_харак_._Сp_298__Дж__моль_град___Расчитанная_через_коэфициентыColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public double _Ошибка___ {
                get {
                    try {
                        return ((double)(this[this._tableТермодин_харак_._Ошибка___Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'Ошибка, %\' в таблице \'Термодин_харак$\' равно DBNull.", e);
                    }
                }
                set {
                    this[this._tableТермодин_харак_._Ошибка___Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string F13 {
                get {
                    try {
                        return ((string)(this[this._tableТермодин_харак_.F13Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'F13\' в таблице \'Термодин_харак$\' равно DBNull.", e);
                    }
                }
                set {
                    this[this._tableТермодин_харак_.F13Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsОбозначение_Null() {
                return this.IsNull(this._tableТермодин_харак_.Обозначение_Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetОбозначение_Null() {
                this[this._tableТермодин_харак_.Обозначение_Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsНаименованиеNull() {
                return this.IsNull(this._tableТермодин_харак_.НаименованиеColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetНаименованиеNull() {
                this[this._tableТермодин_харак_.НаименованиеColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool Is_ΔH298___кДж_мольNull() {
                return this.IsNull(this._tableТермодин_харак_._ΔH298___кДж_мольColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void Set_ΔH298___кДж_мольNull() {
                this[this._tableТермодин_харак_._ΔH298___кДж_мольColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool Is__S298___Дж__моль_К_Null() {
                return this.IsNull(this._tableТермодин_харак_.@__S298___Дж__моль_К_Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void Set__S298___Дж__моль_К_Null() {
                this[this._tableТермодин_харак_.@__S298___Дж__моль_К_Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool Is_Сp_298__Дж__моль_град_Null() {
                return this.IsNull(this._tableТермодин_харак_._Сp_298__Дж__моль_град_Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void Set_Сp_298__Дж__моль_град_Null() {
                this[this._tableТермодин_харак_._Сp_298__Дж__моль_град_Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool Isa_Null() {
                return this.IsNull(this._tableТермодин_харак_.a_Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void Seta_Null() {
                this[this._tableТермодин_харак_.a_Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool Is_b_10_3Null() {
                return this.IsNull(this._tableТермодин_харак_._b_10_3Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void Set_b_10_3Null() {
                this[this._tableТермодин_харак_._b_10_3Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool Is_c_10_6Null() {
                return this.IsNull(this._tableТермодин_харак_._c_10_6Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void Set_c_10_6Null() {
                this[this._tableТермодин_харак_._c_10_6Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool Is_c__10__5Null() {
                return this.IsNull(this._tableТермодин_харак_._c__10__5Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void Set_c__10__5Null() {
                this[this._tableТермодин_харак_._c__10__5Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool Is_Сp_298__Дж__моль_град___Расчитанная_через_коэфициентыNull() {
                return this.IsNull(this._tableТермодин_харак_._Сp_298__Дж__моль_град___Расчитанная_через_коэфициентыColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void Set_Сp_298__Дж__моль_град___Расчитанная_через_коэфициентыNull() {
                this[this._tableТермодин_харак_._Сp_298__Дж__моль_град___Расчитанная_через_коэфициентыColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool Is_Ошибка___Null() {
                return this.IsNull(this._tableТермодин_харак_._Ошибка___Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void Set_Ошибка___Null() {
                this[this._tableТермодин_харак_._Ошибка___Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsF13Null() {
                return this.IsNull(this._tableТермодин_харак_.F13Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetF13Null() {
                this[this._tableТермодин_харак_.F13Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public КомпонентыRow[] GetКомпонентыRows() {
                if ((this.Table.ChildRelations["FK__Компонент__chara__07C12930"] == null)) {
                    return new КомпонентыRow[0];
                }
                else {
                    return ((КомпонентыRow[])(base.GetChildRows(this.Table.ChildRelations["FK__Компонент__chara__07C12930"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class УстановкаRow : global::System.Data.DataRow {
            
            private УстановкаDataTable tableУстановка;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal УстановкаRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableУстановка = ((УстановкаDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int facility_id {
                get {
                    return ((int)(this[this.tableУстановка.facility_idColumn]));
                }
                set {
                    this[this.tableУстановка.facility_idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Наименование_установки {
                get {
                    return ((string)(this[this.tableУстановка.Наименование_установкиColumn]));
                }
                set {
                    this[this.tableУстановка.Наименование_установкиColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int Год_открытия_устанвки {
                get {
                    return ((int)(this[this.tableУстановка.Год_открытия_устанвкиColumn]));
                }
                set {
                    this[this.tableУстановка.Год_открытия_устанвкиColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Местоположение {
                get {
                    return ((string)(this[this.tableУстановка.МестоположениеColumn]));
                }
                set {
                    this[this.tableУстановка.МестоположениеColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public double Производительность {
                get {
                    return ((double)(this[this.tableУстановка.ПроизводительностьColumn]));
                }
                set {
                    this[this.tableУстановка.ПроизводительностьColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public double Давление {
                get {
                    try {
                        return ((double)(this[this.tableУстановка.ДавлениеColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'Давление\' в таблице \'Установка\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableУстановка.ДавлениеColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int Температура_кипения {
                get {
                    try {
                        return ((int)(this[this.tableУстановка.Температура_кипенияColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'Температура_кипения\' в таблице \'Установка\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableУстановка.Температура_кипенияColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsДавлениеNull() {
                return this.IsNull(this.tableУстановка.ДавлениеColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetДавлениеNull() {
                this[this.tableУстановка.ДавлениеColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsТемпература_кипенияNull() {
                return this.IsNull(this.tableУстановка.Температура_кипенияColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetТемпература_кипенияNull() {
                this[this.tableУстановка.Температура_кипенияColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public ИзмКонц_УстановкаRow[] GetИзмКонц_УстановкаRows() {
                if ((this.Table.ChildRelations["FK__ИзмКонц_У__facil__22751F6C"] == null)) {
                    return new ИзмКонц_УстановкаRow[0];
                }
                else {
                    return ((ИзмКонц_УстановкаRow[])(base.GetChildRows(this.Table.ChildRelations["FK__ИзмКонц_У__facil__22751F6C"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public Компоненты_УстановкаRow[] GetКомпоненты_УстановкаRows() {
                if ((this.Table.ChildRelations["FK__Компонент__facil__1EA48E88"] == null)) {
                    return new Компоненты_УстановкаRow[0];
                }
                else {
                    return ((Компоненты_УстановкаRow[])(base.GetChildRows(this.Table.ChildRelations["FK__Компонент__facil__1EA48E88"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public СотрудникиRow[] GetСотрудникиRows() {
                if ((this.Table.ChildRelations["FK__Сотрудник__facil__1AD3FDA4"] == null)) {
                    return new СотрудникиRow[0];
                }
                else {
                    return ((СотрудникиRow[])(base.GetChildRows(this.Table.ChildRelations["FK__Сотрудник__facil__1AD3FDA4"])));
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public class _Изменение_концентрации_RowChangeEvent : global::System.EventArgs {
            
            private _Изменение_концентрации_Row eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public _Изменение_концентрации_RowChangeEvent(_Изменение_концентрации_Row row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public _Изменение_концентрации_Row Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public class ИзмКонц_УстановкаRowChangeEvent : global::System.EventArgs {
            
            private ИзмКонц_УстановкаRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public ИзмКонц_УстановкаRowChangeEvent(ИзмКонц_УстановкаRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public ИзмКонц_УстановкаRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public class КомпонентыRowChangeEvent : global::System.EventArgs {
            
            private КомпонентыRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public КомпонентыRowChangeEvent(КомпонентыRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public КомпонентыRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public class Компоненты_УстановкаRowChangeEvent : global::System.EventArgs {
            
            private Компоненты_УстановкаRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public Компоненты_УстановкаRowChangeEvent(Компоненты_УстановкаRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public Компоненты_УстановкаRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public class СотрудникиRowChangeEvent : global::System.EventArgs {
            
            private СотрудникиRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public СотрудникиRowChangeEvent(СотрудникиRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public СотрудникиRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public class _Термодин_харак_RowChangeEvent : global::System.EventArgs {
            
            private _Термодин_харак_Row eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public _Термодин_харак_RowChangeEvent(_Термодин_харак_Row row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public _Термодин_харак_Row Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public class УстановкаRowChangeEvent : global::System.EventArgs {
            
            private УстановкаRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public УстановкаRowChangeEvent(УстановкаRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public УстановкаRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
namespace Katal_Ref.Katal_Reform_DBDataSet1TableAdapters {
    
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class Изменение_концентрации_TableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public Изменение_концентрации_TableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "Изменение_концентрации$";
            tableMapping.ColumnMappings.Add("conc_id", "conc_id");
            tableMapping.ColumnMappings.Add("масса катализатора", "масса катализатора");
            tableMapping.ColumnMappings.Add("NP1", "NP1");
            tableMapping.ColumnMappings.Add("NP2", "NP2");
            tableMapping.ColumnMappings.Add("NP3", "NP3");
            tableMapping.ColumnMappings.Add("NP4", "NP4");
            tableMapping.ColumnMappings.Add("NP5", "NP5");
            tableMapping.ColumnMappings.Add("NP6", "NP6");
            tableMapping.ColumnMappings.Add("NP7", "NP7");
            tableMapping.ColumnMappings.Add("NP8", "NP8");
            tableMapping.ColumnMappings.Add("NP9", "NP9");
            tableMapping.ColumnMappings.Add("NP10", "NP10");
            tableMapping.ColumnMappings.Add("NP11", "NP11");
            tableMapping.ColumnMappings.Add("IP4", "IP4");
            tableMapping.ColumnMappings.Add("IP5", "IP5");
            tableMapping.ColumnMappings.Add("IP6", "IP6");
            tableMapping.ColumnMappings.Add("IP7", "IP7");
            tableMapping.ColumnMappings.Add("IP8", "IP8");
            tableMapping.ColumnMappings.Add("IP9", "IP9");
            tableMapping.ColumnMappings.Add("IP10", "IP10");
            tableMapping.ColumnMappings.Add("IP11", "IP11");
            tableMapping.ColumnMappings.Add("ACP5", "ACP5");
            tableMapping.ColumnMappings.Add("ACP6", "ACP6");
            tableMapping.ColumnMappings.Add("ACP7", "ACP7");
            tableMapping.ColumnMappings.Add("ACP8", "ACP8");
            tableMapping.ColumnMappings.Add("ACP9", "ACP9");
            tableMapping.ColumnMappings.Add("ACP10", "ACP10");
            tableMapping.ColumnMappings.Add("ACP11", "ACP11");
            tableMapping.ColumnMappings.Add("ACH6", "ACH6");
            tableMapping.ColumnMappings.Add("ACH7", "ACH7");
            tableMapping.ColumnMappings.Add("ACH8", "ACH8");
            tableMapping.ColumnMappings.Add("ACH9", "ACH9");
            tableMapping.ColumnMappings.Add("ACH10", "ACH10");
            tableMapping.ColumnMappings.Add("ACH11", "ACH11");
            tableMapping.ColumnMappings.Add("A6", "A6");
            tableMapping.ColumnMappings.Add("A7", "A7");
            tableMapping.ColumnMappings.Add("A8", "A8");
            tableMapping.ColumnMappings.Add("A9", "A9");
            tableMapping.ColumnMappings.Add("A10", "A10");
            tableMapping.ColumnMappings.Add("A11", "A11");
            tableMapping.ColumnMappings.Add("H2", "H2");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM [dbo].[Изменение_концентрации$] WHERE (([conc_id] = @Original_conc_id" +
                ") AND ((@IsNull_масса_катализатора = 1 AND [масса катализатора] IS NULL) OR ([ма" +
                "сса катализатора] = @Original_масса_катализатора)) AND ((@IsNull_NP1 = 1 AND [NP" +
                "1] IS NULL) OR ([NP1] = @Original_NP1)) AND ((@IsNull_NP2 = 1 AND [NP2] IS NULL)" +
                " OR ([NP2] = @Original_NP2)) AND ((@IsNull_NP3 = 1 AND [NP3] IS NULL) OR ([NP3] " +
                "= @Original_NP3)) AND ((@IsNull_NP4 = 1 AND [NP4] IS NULL) OR ([NP4] = @Original" +
                "_NP4)) AND ((@IsNull_NP5 = 1 AND [NP5] IS NULL) OR ([NP5] = @Original_NP5)) AND " +
                "((@IsNull_NP6 = 1 AND [NP6] IS NULL) OR ([NP6] = @Original_NP6)) AND ((@IsNull_N" +
                "P7 = 1 AND [NP7] IS NULL) OR ([NP7] = @Original_NP7)) AND ((@IsNull_NP8 = 1 AND " +
                "[NP8] IS NULL) OR ([NP8] = @Original_NP8)) AND ((@IsNull_NP9 = 1 AND [NP9] IS NU" +
                "LL) OR ([NP9] = @Original_NP9)) AND ((@IsNull_NP10 = 1 AND [NP10] IS NULL) OR ([" +
                "NP10] = @Original_NP10)) AND ((@IsNull_NP11 = 1 AND [NP11] IS NULL) OR ([NP11] =" +
                " @Original_NP11)) AND ((@IsNull_IP4 = 1 AND [IP4] IS NULL) OR ([IP4] = @Original" +
                "_IP4)) AND ((@IsNull_IP5 = 1 AND [IP5] IS NULL) OR ([IP5] = @Original_IP5)) AND " +
                "((@IsNull_IP6 = 1 AND [IP6] IS NULL) OR ([IP6] = @Original_IP6)) AND ((@IsNull_I" +
                "P7 = 1 AND [IP7] IS NULL) OR ([IP7] = @Original_IP7)) AND ((@IsNull_IP8 = 1 AND " +
                "[IP8] IS NULL) OR ([IP8] = @Original_IP8)) AND ((@IsNull_IP9 = 1 AND [IP9] IS NU" +
                "LL) OR ([IP9] = @Original_IP9)) AND ((@IsNull_IP10 = 1 AND [IP10] IS NULL) OR ([" +
                "IP10] = @Original_IP10)) AND ((@IsNull_IP11 = 1 AND [IP11] IS NULL) OR ([IP11] =" +
                " @Original_IP11)) AND ((@IsNull_ACP5 = 1 AND [ACP5] IS NULL) OR ([ACP5] = @Origi" +
                "nal_ACP5)) AND ((@IsNull_ACP6 = 1 AND [ACP6] IS NULL) OR ([ACP6] = @Original_ACP" +
                "6)) AND ((@IsNull_ACP7 = 1 AND [ACP7] IS NULL) OR ([ACP7] = @Original_ACP7)) AND" +
                " ((@IsNull_ACP8 = 1 AND [ACP8] IS NULL) OR ([ACP8] = @Original_ACP8)) AND ((@IsN" +
                "ull_ACP9 = 1 AND [ACP9] IS NULL) OR ([ACP9] = @Original_ACP9)) AND ((@IsNull_ACP" +
                "10 = 1 AND [ACP10] IS NULL) OR ([ACP10] = @Original_ACP10)) AND ((@IsNull_ACP11 " +
                "= 1 AND [ACP11] IS NULL) OR ([ACP11] = @Original_ACP11)) AND ((@IsNull_ACH6 = 1 " +
                "AND [ACH6] IS NULL) OR ([ACH6] = @Original_ACH6)) AND ((@IsNull_ACH7 = 1 AND [AC" +
                "H7] IS NULL) OR ([ACH7] = @Original_ACH7)) AND ((@IsNull_ACH8 = 1 AND [ACH8] IS " +
                "NULL) OR ([ACH8] = @Original_ACH8)) AND ((@IsNull_ACH9 = 1 AND [ACH9] IS NULL) O" +
                "R ([ACH9] = @Original_ACH9)) AND ((@IsNull_ACH10 = 1 AND [ACH10] IS NULL) OR ([A" +
                "CH10] = @Original_ACH10)) AND ((@IsNull_ACH11 = 1 AND [ACH11] IS NULL) OR ([ACH1" +
                "1] = @Original_ACH11)) AND ((@IsNull_A6 = 1 AND [A6] IS NULL) OR ([A6] = @Origin" +
                "al_A6)) AND ((@IsNull_A7 = 1 AND [A7] IS NULL) OR ([A7] = @Original_A7)) AND ((@" +
                "IsNull_A8 = 1 AND [A8] IS NULL) OR ([A8] = @Original_A8)) AND ((@IsNull_A9 = 1 A" +
                "ND [A9] IS NULL) OR ([A9] = @Original_A9)) AND ((@IsNull_A10 = 1 AND [A10] IS NU" +
                "LL) OR ([A10] = @Original_A10)) AND ((@IsNull_A11 = 1 AND [A11] IS NULL) OR ([A1" +
                "1] = @Original_A11)) AND ((@IsNull_H2 = 1 AND [H2] IS NULL) OR ([H2] = @Original" +
                "_H2)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_conc_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "conc_id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_масса_катализатора", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "масса катализатора", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_масса_катализатора", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "масса катализатора", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_NP1", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NP1", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_NP1", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NP1", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_NP2", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NP2", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_NP2", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NP2", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_NP3", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NP3", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_NP3", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NP3", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_NP4", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NP4", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_NP4", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NP4", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_NP5", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NP5", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_NP5", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NP5", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_NP6", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NP6", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_NP6", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NP6", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_NP7", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NP7", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_NP7", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NP7", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_NP8", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NP8", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_NP8", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NP8", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_NP9", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NP9", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_NP9", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NP9", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_NP10", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NP10", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_NP10", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NP10", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_NP11", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NP11", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_NP11", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NP11", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_IP4", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IP4", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_IP4", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IP4", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_IP5", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IP5", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_IP5", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IP5", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_IP6", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IP6", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_IP6", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IP6", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_IP7", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IP7", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_IP7", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IP7", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_IP8", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IP8", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_IP8", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IP8", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_IP9", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IP9", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_IP9", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IP9", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_IP10", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IP10", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_IP10", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IP10", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_IP11", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IP11", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_IP11", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IP11", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ACP5", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ACP5", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ACP5", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ACP5", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ACP6", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ACP6", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ACP6", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ACP6", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ACP7", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ACP7", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ACP7", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ACP7", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ACP8", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ACP8", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ACP8", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ACP8", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ACP9", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ACP9", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ACP9", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ACP9", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ACP10", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ACP10", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ACP10", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ACP10", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ACP11", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ACP11", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ACP11", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ACP11", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ACH6", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ACH6", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ACH6", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ACH6", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ACH7", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ACH7", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ACH7", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ACH7", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ACH8", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ACH8", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ACH8", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ACH8", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ACH9", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ACH9", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ACH9", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ACH9", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ACH10", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ACH10", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ACH10", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ACH10", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ACH11", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ACH11", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ACH11", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ACH11", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_A6", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "A6", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_A6", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "A6", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_A7", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "A7", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_A7", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "A7", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_A8", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "A8", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_A8", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "A8", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_A9", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "A9", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_A9", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "A9", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_A10", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "A10", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_A10", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "A10", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_A11", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "A11", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_A11", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "A11", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_H2", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "H2", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_H2", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "H2", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[Изменение_концентрации$] ([conc_id], [масса катализатора], [NP1], [NP2], [NP3], [NP4], [NP5], [NP6], [NP7], [NP8], [NP9], [NP10], [NP11], [IP4], [IP5], [IP6], [IP7], [IP8], [IP9], [IP10], [IP11], [ACP5], [ACP6], [ACP7], [ACP8], [ACP9], [ACP10], [ACP11], [ACH6], [ACH7], [ACH8], [ACH9], [ACH10], [ACH11], [A6], [A7], [A8], [A9], [A10], [A11], [H2]) VALUES (@conc_id, @масса_катализатора, @NP1, @NP2, @NP3, @NP4, @NP5, @NP6, @NP7, @NP8, @NP9, @NP10, @NP11, @IP4, @IP5, @IP6, @IP7, @IP8, @IP9, @IP10, @IP11, @ACP5, @ACP6, @ACP7, @ACP8, @ACP9, @ACP10, @ACP11, @ACH6, @ACH7, @ACH8, @ACH9, @ACH10, @ACH11, @A6, @A7, @A8, @A9, @A10, @A11, @H2);
SELECT conc_id, [масса катализатора], NP1, NP2, NP3, NP4, NP5, NP6, NP7, NP8, NP9, NP10, NP11, IP4, IP5, IP6, IP7, IP8, IP9, IP10, IP11, ACP5, ACP6, ACP7, ACP8, ACP9, ACP10, ACP11, ACH6, ACH7, ACH8, ACH9, ACH10, ACH11, A6, A7, A8, A9, A10, A11, H2 FROM Изменение_концентрации$ WHERE (conc_id = @conc_id)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@conc_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "conc_id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@масса_катализатора", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "масса катализатора", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NP1", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NP1", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NP2", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NP2", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NP3", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NP3", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NP4", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NP4", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NP5", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NP5", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NP6", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NP6", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NP7", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NP7", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NP8", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NP8", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NP9", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NP9", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NP10", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NP10", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NP11", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NP11", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IP4", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IP4", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IP5", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IP5", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IP6", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IP6", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IP7", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IP7", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IP8", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IP8", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IP9", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IP9", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IP10", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IP10", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IP11", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IP11", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ACP5", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ACP5", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ACP6", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ACP6", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ACP7", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ACP7", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ACP8", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ACP8", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ACP9", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ACP9", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ACP10", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ACP10", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ACP11", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ACP11", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ACH6", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ACH6", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ACH7", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ACH7", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ACH8", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ACH8", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ACH9", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ACH9", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ACH10", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ACH10", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ACH11", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ACH11", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@A6", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "A6", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@A7", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "A7", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@A8", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "A8", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@A9", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "A9", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@A10", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "A10", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@A11", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "A11", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@H2", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "H2", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = "UPDATE [dbo].[Изменение_концентрации$] SET [conc_id] = @conc_id, [масса катализат" +
                "ора] = @масса_катализатора, [NP1] = @NP1, [NP2] = @NP2, [NP3] = @NP3, [NP4] = @N" +
                "P4, [NP5] = @NP5, [NP6] = @NP6, [NP7] = @NP7, [NP8] = @NP8, [NP9] = @NP9, [NP10]" +
                " = @NP10, [NP11] = @NP11, [IP4] = @IP4, [IP5] = @IP5, [IP6] = @IP6, [IP7] = @IP7" +
                ", [IP8] = @IP8, [IP9] = @IP9, [IP10] = @IP10, [IP11] = @IP11, [ACP5] = @ACP5, [A" +
                "CP6] = @ACP6, [ACP7] = @ACP7, [ACP8] = @ACP8, [ACP9] = @ACP9, [ACP10] = @ACP10, " +
                "[ACP11] = @ACP11, [ACH6] = @ACH6, [ACH7] = @ACH7, [ACH8] = @ACH8, [ACH9] = @ACH9" +
                ", [ACH10] = @ACH10, [ACH11] = @ACH11, [A6] = @A6, [A7] = @A7, [A8] = @A8, [A9] =" +
                " @A9, [A10] = @A10, [A11] = @A11, [H2] = @H2 WHERE (([conc_id] = @Original_conc_" +
                "id) AND ((@IsNull_масса_катализатора = 1 AND [масса катализатора] IS NULL) OR ([" +
                "масса катализатора] = @Original_масса_катализатора)) AND ((@IsNull_NP1 = 1 AND [" +
                "NP1] IS NULL) OR ([NP1] = @Original_NP1)) AND ((@IsNull_NP2 = 1 AND [NP2] IS NUL" +
                "L) OR ([NP2] = @Original_NP2)) AND ((@IsNull_NP3 = 1 AND [NP3] IS NULL) OR ([NP3" +
                "] = @Original_NP3)) AND ((@IsNull_NP4 = 1 AND [NP4] IS NULL) OR ([NP4] = @Origin" +
                "al_NP4)) AND ((@IsNull_NP5 = 1 AND [NP5] IS NULL) OR ([NP5] = @Original_NP5)) AN" +
                "D ((@IsNull_NP6 = 1 AND [NP6] IS NULL) OR ([NP6] = @Original_NP6)) AND ((@IsNull" +
                "_NP7 = 1 AND [NP7] IS NULL) OR ([NP7] = @Original_NP7)) AND ((@IsNull_NP8 = 1 AN" +
                "D [NP8] IS NULL) OR ([NP8] = @Original_NP8)) AND ((@IsNull_NP9 = 1 AND [NP9] IS " +
                "NULL) OR ([NP9] = @Original_NP9)) AND ((@IsNull_NP10 = 1 AND [NP10] IS NULL) OR " +
                "([NP10] = @Original_NP10)) AND ((@IsNull_NP11 = 1 AND [NP11] IS NULL) OR ([NP11]" +
                " = @Original_NP11)) AND ((@IsNull_IP4 = 1 AND [IP4] IS NULL) OR ([IP4] = @Origin" +
                "al_IP4)) AND ((@IsNull_IP5 = 1 AND [IP5] IS NULL) OR ([IP5] = @Original_IP5)) AN" +
                "D ((@IsNull_IP6 = 1 AND [IP6] IS NULL) OR ([IP6] = @Original_IP6)) AND ((@IsNull" +
                "_IP7 = 1 AND [IP7] IS NULL) OR ([IP7] = @Original_IP7)) AND ((@IsNull_IP8 = 1 AN" +
                "D [IP8] IS NULL) OR ([IP8] = @Original_IP8)) AND ((@IsNull_IP9 = 1 AND [IP9] IS " +
                "NULL) OR ([IP9] = @Original_IP9)) AND ((@IsNull_IP10 = 1 AND [IP10] IS NULL) OR " +
                "([IP10] = @Original_IP10)) AND ((@IsNull_IP11 = 1 AND [IP11] IS NULL) OR ([IP11]" +
                " = @Original_IP11)) AND ((@IsNull_ACP5 = 1 AND [ACP5] IS NULL) OR ([ACP5] = @Ori" +
                "ginal_ACP5)) AND ((@IsNull_ACP6 = 1 AND [ACP6] IS NULL) OR ([ACP6] = @Original_A" +
                "CP6)) AND ((@IsNull_ACP7 = 1 AND [ACP7] IS NULL) OR ([ACP7] = @Original_ACP7)) A" +
                "ND ((@IsNull_ACP8 = 1 AND [ACP8] IS NULL) OR ([ACP8] = @Original_ACP8)) AND ((@I" +
                "sNull_ACP9 = 1 AND [ACP9] IS NULL) OR ([ACP9] = @Original_ACP9)) AND ((@IsNull_A" +
                "CP10 = 1 AND [ACP10] IS NULL) OR ([ACP10] = @Original_ACP10)) AND ((@IsNull_ACP1" +
                "1 = 1 AND [ACP11] IS NULL) OR ([ACP11] = @Original_ACP11)) AND ((@IsNull_ACH6 = " +
                "1 AND [ACH6] IS NULL) OR ([ACH6] = @Original_ACH6)) AND ((@IsNull_ACH7 = 1 AND [" +
                "ACH7] IS NULL) OR ([ACH7] = @Original_ACH7)) AND ((@IsNull_ACH8 = 1 AND [ACH8] I" +
                "S NULL) OR ([ACH8] = @Original_ACH8)) AND ((@IsNull_ACH9 = 1 AND [ACH9] IS NULL)" +
                " OR ([ACH9] = @Original_ACH9)) AND ((@IsNull_ACH10 = 1 AND [ACH10] IS NULL) OR (" +
                "[ACH10] = @Original_ACH10)) AND ((@IsNull_ACH11 = 1 AND [ACH11] IS NULL) OR ([AC" +
                "H11] = @Original_ACH11)) AND ((@IsNull_A6 = 1 AND [A6] IS NULL) OR ([A6] = @Orig" +
                "inal_A6)) AND ((@IsNull_A7 = 1 AND [A7] IS NULL) OR ([A7] = @Original_A7)) AND (" +
                "(@IsNull_A8 = 1 AND [A8] IS NULL) OR ([A8] = @Original_A8)) AND ((@IsNull_A9 = 1" +
                " AND [A9] IS NULL) OR ([A9] = @Original_A9)) AND ((@IsNull_A10 = 1 AND [A10] IS " +
                "NULL) OR ([A10] = @Original_A10)) AND ((@IsNull_A11 = 1 AND [A11] IS NULL) OR ([" +
                "A11] = @Original_A11)) AND ((@IsNull_H2 = 1 AND [H2] IS NULL) OR ([H2] = @Origin" +
                "al_H2)));\r\nSELECT conc_id, [масса катализатора], NP1, NP2, NP3, NP4, NP5, NP6, N" +
                "P7, NP8, NP9, NP10, NP11, IP4, IP5, IP6, IP7, IP8, IP9, IP10, IP11, ACP5, ACP6, " +
                "ACP7, ACP8, ACP9, ACP10, ACP11, ACH6, ACH7, ACH8, ACH9, ACH10, ACH11, A6, A7, A8" +
                ", A9, A10, A11, H2 FROM Изменение_концентрации$ WHERE (conc_id = @conc_id)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@conc_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "conc_id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@масса_катализатора", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "масса катализатора", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NP1", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NP1", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NP2", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NP2", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NP3", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NP3", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NP4", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NP4", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NP5", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NP5", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NP6", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NP6", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NP7", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NP7", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NP8", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NP8", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NP9", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NP9", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NP10", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NP10", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NP11", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NP11", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IP4", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IP4", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IP5", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IP5", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IP6", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IP6", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IP7", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IP7", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IP8", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IP8", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IP9", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IP9", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IP10", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IP10", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IP11", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IP11", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ACP5", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ACP5", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ACP6", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ACP6", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ACP7", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ACP7", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ACP8", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ACP8", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ACP9", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ACP9", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ACP10", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ACP10", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ACP11", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ACP11", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ACH6", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ACH6", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ACH7", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ACH7", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ACH8", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ACH8", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ACH9", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ACH9", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ACH10", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ACH10", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ACH11", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ACH11", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@A6", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "A6", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@A7", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "A7", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@A8", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "A8", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@A9", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "A9", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@A10", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "A10", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@A11", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "A11", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@H2", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "H2", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_conc_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "conc_id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_масса_катализатора", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "масса катализатора", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_масса_катализатора", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "масса катализатора", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_NP1", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NP1", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_NP1", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NP1", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_NP2", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NP2", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_NP2", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NP2", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_NP3", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NP3", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_NP3", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NP3", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_NP4", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NP4", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_NP4", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NP4", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_NP5", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NP5", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_NP5", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NP5", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_NP6", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NP6", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_NP6", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NP6", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_NP7", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NP7", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_NP7", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NP7", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_NP8", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NP8", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_NP8", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NP8", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_NP9", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NP9", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_NP9", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NP9", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_NP10", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NP10", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_NP10", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NP10", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_NP11", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NP11", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_NP11", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NP11", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_IP4", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IP4", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_IP4", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IP4", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_IP5", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IP5", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_IP5", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IP5", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_IP6", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IP6", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_IP6", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IP6", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_IP7", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IP7", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_IP7", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IP7", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_IP8", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IP8", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_IP8", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IP8", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_IP9", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IP9", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_IP9", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IP9", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_IP10", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IP10", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_IP10", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IP10", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_IP11", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IP11", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_IP11", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IP11", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ACP5", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ACP5", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ACP5", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ACP5", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ACP6", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ACP6", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ACP6", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ACP6", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ACP7", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ACP7", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ACP7", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ACP7", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ACP8", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ACP8", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ACP8", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ACP8", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ACP9", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ACP9", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ACP9", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ACP9", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ACP10", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ACP10", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ACP10", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ACP10", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ACP11", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ACP11", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ACP11", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ACP11", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ACH6", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ACH6", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ACH6", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ACH6", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ACH7", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ACH7", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ACH7", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ACH7", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ACH8", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ACH8", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ACH8", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ACH8", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ACH9", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ACH9", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ACH9", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ACH9", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ACH10", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ACH10", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ACH10", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ACH10", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ACH11", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ACH11", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ACH11", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ACH11", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_A6", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "A6", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_A6", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "A6", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_A7", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "A7", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_A7", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "A7", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_A8", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "A8", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_A8", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "A8", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_A9", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "A9", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_A9", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "A9", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_A10", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "A10", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_A10", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "A10", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_A11", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "A11", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_A11", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "A11", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_H2", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "H2", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_H2", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "H2", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::Katal_Ref.Properties.Settings.Default.Katal_Reform_DBConnectionStringNew;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"SELECT conc_id, [масса катализатора], NP1, NP2, NP3, NP4, NP5, NP6, NP7, NP8, NP9, NP10, NP11, IP4, IP5, IP6, IP7, IP8, IP9, IP10, IP11, ACP5, ACP6, ACP7, ACP8, ACP9, ACP10, ACP11, ACH6, ACH7, ACH8, ACH9, ACH10, ACH11, A6, A7, A8, A9, A10, A11, H2 FROM dbo.Изменение_концентрации$";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(Katal_Reform_DBDataSet1._Изменение_концентрации_DataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual Katal_Reform_DBDataSet1._Изменение_концентрации_DataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            Katal_Reform_DBDataSet1._Изменение_концентрации_DataTable dataTable = new Katal_Reform_DBDataSet1._Изменение_концентрации_DataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(Katal_Reform_DBDataSet1._Изменение_концентрации_DataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(Katal_Reform_DBDataSet1 dataSet) {
            return this.Adapter.Update(dataSet, "Изменение_концентрации$");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(
                    int Original_conc_id, 
                    global::System.Nullable<int> Original_масса_катализатора, 
                    global::System.Nullable<double> Original_NP1, 
                    global::System.Nullable<double> Original_NP2, 
                    global::System.Nullable<double> Original_NP3, 
                    global::System.Nullable<double> Original_NP4, 
                    global::System.Nullable<double> Original_NP5, 
                    global::System.Nullable<double> Original_NP6, 
                    global::System.Nullable<double> Original_NP7, 
                    global::System.Nullable<double> Original_NP8, 
                    global::System.Nullable<double> Original_NP9, 
                    global::System.Nullable<double> Original_NP10, 
                    global::System.Nullable<double> Original_NP11, 
                    global::System.Nullable<double> Original_IP4, 
                    global::System.Nullable<double> Original_IP5, 
                    global::System.Nullable<double> Original_IP6, 
                    global::System.Nullable<double> Original_IP7, 
                    global::System.Nullable<double> Original_IP8, 
                    global::System.Nullable<double> Original_IP9, 
                    global::System.Nullable<double> Original_IP10, 
                    global::System.Nullable<double> Original_IP11, 
                    global::System.Nullable<double> Original_ACP5, 
                    global::System.Nullable<double> Original_ACP6, 
                    global::System.Nullable<double> Original_ACP7, 
                    global::System.Nullable<double> Original_ACP8, 
                    global::System.Nullable<double> Original_ACP9, 
                    global::System.Nullable<double> Original_ACP10, 
                    global::System.Nullable<double> Original_ACP11, 
                    global::System.Nullable<double> Original_ACH6, 
                    global::System.Nullable<double> Original_ACH7, 
                    global::System.Nullable<double> Original_ACH8, 
                    global::System.Nullable<double> Original_ACH9, 
                    global::System.Nullable<double> Original_ACH10, 
                    global::System.Nullable<double> Original_ACH11, 
                    global::System.Nullable<double> Original_A6, 
                    global::System.Nullable<double> Original_A7, 
                    global::System.Nullable<double> Original_A8, 
                    global::System.Nullable<double> Original_A9, 
                    global::System.Nullable<double> Original_A10, 
                    global::System.Nullable<double> Original_A11, 
                    global::System.Nullable<double> Original_H2) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_conc_id));
            if ((Original_масса_катализатора.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[2].Value = ((int)(Original_масса_катализатора.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((Original_NP1.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[4].Value = ((double)(Original_NP1.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((Original_NP2.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[6].Value = ((double)(Original_NP2.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            if ((Original_NP3.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[8].Value = ((double)(Original_NP3.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            if ((Original_NP4.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[10].Value = ((double)(Original_NP4.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            if ((Original_NP5.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[12].Value = ((double)(Original_NP5.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            if ((Original_NP6.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[14].Value = ((double)(Original_NP6.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            if ((Original_NP7.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[15].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[16].Value = ((double)(Original_NP7.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[15].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            if ((Original_NP8.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[17].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[18].Value = ((double)(Original_NP8.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[17].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            if ((Original_NP9.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[19].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[20].Value = ((double)(Original_NP9.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[19].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            if ((Original_NP10.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[21].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[22].Value = ((double)(Original_NP10.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[21].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[22].Value = global::System.DBNull.Value;
            }
            if ((Original_NP11.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[23].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[24].Value = ((double)(Original_NP11.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[23].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[24].Value = global::System.DBNull.Value;
            }
            if ((Original_IP4.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[25].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[26].Value = ((double)(Original_IP4.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[25].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[26].Value = global::System.DBNull.Value;
            }
            if ((Original_IP5.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[27].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[28].Value = ((double)(Original_IP5.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[27].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[28].Value = global::System.DBNull.Value;
            }
            if ((Original_IP6.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[29].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[30].Value = ((double)(Original_IP6.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[29].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[30].Value = global::System.DBNull.Value;
            }
            if ((Original_IP7.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[31].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[32].Value = ((double)(Original_IP7.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[31].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[32].Value = global::System.DBNull.Value;
            }
            if ((Original_IP8.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[33].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[34].Value = ((double)(Original_IP8.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[33].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[34].Value = global::System.DBNull.Value;
            }
            if ((Original_IP9.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[35].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[36].Value = ((double)(Original_IP9.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[35].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[36].Value = global::System.DBNull.Value;
            }
            if ((Original_IP10.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[37].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[38].Value = ((double)(Original_IP10.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[37].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[38].Value = global::System.DBNull.Value;
            }
            if ((Original_IP11.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[39].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[40].Value = ((double)(Original_IP11.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[39].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[40].Value = global::System.DBNull.Value;
            }
            if ((Original_ACP5.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[41].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[42].Value = ((double)(Original_ACP5.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[41].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[42].Value = global::System.DBNull.Value;
            }
            if ((Original_ACP6.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[43].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[44].Value = ((double)(Original_ACP6.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[43].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[44].Value = global::System.DBNull.Value;
            }
            if ((Original_ACP7.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[45].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[46].Value = ((double)(Original_ACP7.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[45].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[46].Value = global::System.DBNull.Value;
            }
            if ((Original_ACP8.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[47].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[48].Value = ((double)(Original_ACP8.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[47].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[48].Value = global::System.DBNull.Value;
            }
            if ((Original_ACP9.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[49].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[50].Value = ((double)(Original_ACP9.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[49].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[50].Value = global::System.DBNull.Value;
            }
            if ((Original_ACP10.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[51].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[52].Value = ((double)(Original_ACP10.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[51].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[52].Value = global::System.DBNull.Value;
            }
            if ((Original_ACP11.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[53].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[54].Value = ((double)(Original_ACP11.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[53].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[54].Value = global::System.DBNull.Value;
            }
            if ((Original_ACH6.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[55].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[56].Value = ((double)(Original_ACH6.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[55].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[56].Value = global::System.DBNull.Value;
            }
            if ((Original_ACH7.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[57].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[58].Value = ((double)(Original_ACH7.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[57].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[58].Value = global::System.DBNull.Value;
            }
            if ((Original_ACH8.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[59].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[60].Value = ((double)(Original_ACH8.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[59].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[60].Value = global::System.DBNull.Value;
            }
            if ((Original_ACH9.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[61].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[62].Value = ((double)(Original_ACH9.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[61].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[62].Value = global::System.DBNull.Value;
            }
            if ((Original_ACH10.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[63].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[64].Value = ((double)(Original_ACH10.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[63].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[64].Value = global::System.DBNull.Value;
            }
            if ((Original_ACH11.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[65].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[66].Value = ((double)(Original_ACH11.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[65].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[66].Value = global::System.DBNull.Value;
            }
            if ((Original_A6.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[67].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[68].Value = ((double)(Original_A6.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[67].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[68].Value = global::System.DBNull.Value;
            }
            if ((Original_A7.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[69].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[70].Value = ((double)(Original_A7.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[69].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[70].Value = global::System.DBNull.Value;
            }
            if ((Original_A8.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[71].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[72].Value = ((double)(Original_A8.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[71].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[72].Value = global::System.DBNull.Value;
            }
            if ((Original_A9.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[73].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[74].Value = ((double)(Original_A9.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[73].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[74].Value = global::System.DBNull.Value;
            }
            if ((Original_A10.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[75].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[76].Value = ((double)(Original_A10.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[75].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[76].Value = global::System.DBNull.Value;
            }
            if ((Original_A11.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[77].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[78].Value = ((double)(Original_A11.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[77].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[78].Value = global::System.DBNull.Value;
            }
            if ((Original_H2.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[79].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[80].Value = ((double)(Original_H2.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[79].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[80].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(
                    int conc_id, 
                    global::System.Nullable<int> масса_катализатора, 
                    global::System.Nullable<double> NP1, 
                    global::System.Nullable<double> NP2, 
                    global::System.Nullable<double> NP3, 
                    global::System.Nullable<double> NP4, 
                    global::System.Nullable<double> NP5, 
                    global::System.Nullable<double> NP6, 
                    global::System.Nullable<double> NP7, 
                    global::System.Nullable<double> NP8, 
                    global::System.Nullable<double> NP9, 
                    global::System.Nullable<double> NP10, 
                    global::System.Nullable<double> NP11, 
                    global::System.Nullable<double> IP4, 
                    global::System.Nullable<double> IP5, 
                    global::System.Nullable<double> IP6, 
                    global::System.Nullable<double> IP7, 
                    global::System.Nullable<double> IP8, 
                    global::System.Nullable<double> IP9, 
                    global::System.Nullable<double> IP10, 
                    global::System.Nullable<double> IP11, 
                    global::System.Nullable<double> ACP5, 
                    global::System.Nullable<double> ACP6, 
                    global::System.Nullable<double> ACP7, 
                    global::System.Nullable<double> ACP8, 
                    global::System.Nullable<double> ACP9, 
                    global::System.Nullable<double> ACP10, 
                    global::System.Nullable<double> ACP11, 
                    global::System.Nullable<double> ACH6, 
                    global::System.Nullable<double> ACH7, 
                    global::System.Nullable<double> ACH8, 
                    global::System.Nullable<double> ACH9, 
                    global::System.Nullable<double> ACH10, 
                    global::System.Nullable<double> ACH11, 
                    global::System.Nullable<double> A6, 
                    global::System.Nullable<double> A7, 
                    global::System.Nullable<double> A8, 
                    global::System.Nullable<double> A9, 
                    global::System.Nullable<double> A10, 
                    global::System.Nullable<double> A11, 
                    global::System.Nullable<double> H2) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((int)(conc_id));
            if ((масса_катализатора.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[1].Value = ((int)(масса_катализатора.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((NP1.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[2].Value = ((double)(NP1.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((NP2.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[3].Value = ((double)(NP2.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((NP3.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[4].Value = ((double)(NP3.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((NP4.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[5].Value = ((double)(NP4.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            if ((NP5.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[6].Value = ((double)(NP5.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            if ((NP6.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[7].Value = ((double)(NP6.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            if ((NP7.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[8].Value = ((double)(NP7.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            if ((NP8.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[9].Value = ((double)(NP8.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            if ((NP9.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[10].Value = ((double)(NP9.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            if ((NP10.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[11].Value = ((double)(NP10.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            if ((NP11.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[12].Value = ((double)(NP11.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            if ((IP4.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[13].Value = ((double)(IP4.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            if ((IP5.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[14].Value = ((double)(IP5.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            if ((IP6.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[15].Value = ((double)(IP6.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            if ((IP7.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[16].Value = ((double)(IP7.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            if ((IP8.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[17].Value = ((double)(IP8.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            if ((IP9.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[18].Value = ((double)(IP9.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            if ((IP10.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[19].Value = ((double)(IP10.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[19].Value = global::System.DBNull.Value;
            }
            if ((IP11.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[20].Value = ((double)(IP11.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            if ((ACP5.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[21].Value = ((double)(ACP5.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[21].Value = global::System.DBNull.Value;
            }
            if ((ACP6.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[22].Value = ((double)(ACP6.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[22].Value = global::System.DBNull.Value;
            }
            if ((ACP7.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[23].Value = ((double)(ACP7.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[23].Value = global::System.DBNull.Value;
            }
            if ((ACP8.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[24].Value = ((double)(ACP8.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[24].Value = global::System.DBNull.Value;
            }
            if ((ACP9.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[25].Value = ((double)(ACP9.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[25].Value = global::System.DBNull.Value;
            }
            if ((ACP10.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[26].Value = ((double)(ACP10.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[26].Value = global::System.DBNull.Value;
            }
            if ((ACP11.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[27].Value = ((double)(ACP11.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[27].Value = global::System.DBNull.Value;
            }
            if ((ACH6.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[28].Value = ((double)(ACH6.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[28].Value = global::System.DBNull.Value;
            }
            if ((ACH7.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[29].Value = ((double)(ACH7.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[29].Value = global::System.DBNull.Value;
            }
            if ((ACH8.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[30].Value = ((double)(ACH8.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[30].Value = global::System.DBNull.Value;
            }
            if ((ACH9.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[31].Value = ((double)(ACH9.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[31].Value = global::System.DBNull.Value;
            }
            if ((ACH10.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[32].Value = ((double)(ACH10.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[32].Value = global::System.DBNull.Value;
            }
            if ((ACH11.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[33].Value = ((double)(ACH11.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[33].Value = global::System.DBNull.Value;
            }
            if ((A6.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[34].Value = ((double)(A6.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[34].Value = global::System.DBNull.Value;
            }
            if ((A7.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[35].Value = ((double)(A7.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[35].Value = global::System.DBNull.Value;
            }
            if ((A8.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[36].Value = ((double)(A8.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[36].Value = global::System.DBNull.Value;
            }
            if ((A9.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[37].Value = ((double)(A9.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[37].Value = global::System.DBNull.Value;
            }
            if ((A10.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[38].Value = ((double)(A10.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[38].Value = global::System.DBNull.Value;
            }
            if ((A11.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[39].Value = ((double)(A11.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[39].Value = global::System.DBNull.Value;
            }
            if ((H2.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[40].Value = ((double)(H2.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[40].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    int conc_id, 
                    global::System.Nullable<int> масса_катализатора, 
                    global::System.Nullable<double> NP1, 
                    global::System.Nullable<double> NP2, 
                    global::System.Nullable<double> NP3, 
                    global::System.Nullable<double> NP4, 
                    global::System.Nullable<double> NP5, 
                    global::System.Nullable<double> NP6, 
                    global::System.Nullable<double> NP7, 
                    global::System.Nullable<double> NP8, 
                    global::System.Nullable<double> NP9, 
                    global::System.Nullable<double> NP10, 
                    global::System.Nullable<double> NP11, 
                    global::System.Nullable<double> IP4, 
                    global::System.Nullable<double> IP5, 
                    global::System.Nullable<double> IP6, 
                    global::System.Nullable<double> IP7, 
                    global::System.Nullable<double> IP8, 
                    global::System.Nullable<double> IP9, 
                    global::System.Nullable<double> IP10, 
                    global::System.Nullable<double> IP11, 
                    global::System.Nullable<double> ACP5, 
                    global::System.Nullable<double> ACP6, 
                    global::System.Nullable<double> ACP7, 
                    global::System.Nullable<double> ACP8, 
                    global::System.Nullable<double> ACP9, 
                    global::System.Nullable<double> ACP10, 
                    global::System.Nullable<double> ACP11, 
                    global::System.Nullable<double> ACH6, 
                    global::System.Nullable<double> ACH7, 
                    global::System.Nullable<double> ACH8, 
                    global::System.Nullable<double> ACH9, 
                    global::System.Nullable<double> ACH10, 
                    global::System.Nullable<double> ACH11, 
                    global::System.Nullable<double> A6, 
                    global::System.Nullable<double> A7, 
                    global::System.Nullable<double> A8, 
                    global::System.Nullable<double> A9, 
                    global::System.Nullable<double> A10, 
                    global::System.Nullable<double> A11, 
                    global::System.Nullable<double> H2, 
                    int Original_conc_id, 
                    global::System.Nullable<int> Original_масса_катализатора, 
                    global::System.Nullable<double> Original_NP1, 
                    global::System.Nullable<double> Original_NP2, 
                    global::System.Nullable<double> Original_NP3, 
                    global::System.Nullable<double> Original_NP4, 
                    global::System.Nullable<double> Original_NP5, 
                    global::System.Nullable<double> Original_NP6, 
                    global::System.Nullable<double> Original_NP7, 
                    global::System.Nullable<double> Original_NP8, 
                    global::System.Nullable<double> Original_NP9, 
                    global::System.Nullable<double> Original_NP10, 
                    global::System.Nullable<double> Original_NP11, 
                    global::System.Nullable<double> Original_IP4, 
                    global::System.Nullable<double> Original_IP5, 
                    global::System.Nullable<double> Original_IP6, 
                    global::System.Nullable<double> Original_IP7, 
                    global::System.Nullable<double> Original_IP8, 
                    global::System.Nullable<double> Original_IP9, 
                    global::System.Nullable<double> Original_IP10, 
                    global::System.Nullable<double> Original_IP11, 
                    global::System.Nullable<double> Original_ACP5, 
                    global::System.Nullable<double> Original_ACP6, 
                    global::System.Nullable<double> Original_ACP7, 
                    global::System.Nullable<double> Original_ACP8, 
                    global::System.Nullable<double> Original_ACP9, 
                    global::System.Nullable<double> Original_ACP10, 
                    global::System.Nullable<double> Original_ACP11, 
                    global::System.Nullable<double> Original_ACH6, 
                    global::System.Nullable<double> Original_ACH7, 
                    global::System.Nullable<double> Original_ACH8, 
                    global::System.Nullable<double> Original_ACH9, 
                    global::System.Nullable<double> Original_ACH10, 
                    global::System.Nullable<double> Original_ACH11, 
                    global::System.Nullable<double> Original_A6, 
                    global::System.Nullable<double> Original_A7, 
                    global::System.Nullable<double> Original_A8, 
                    global::System.Nullable<double> Original_A9, 
                    global::System.Nullable<double> Original_A10, 
                    global::System.Nullable<double> Original_A11, 
                    global::System.Nullable<double> Original_H2) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((int)(conc_id));
            if ((масса_катализатора.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((int)(масса_катализатора.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((NP1.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((double)(NP1.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((NP2.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((double)(NP2.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((NP3.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((double)(NP3.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((NP4.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((double)(NP4.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            if ((NP5.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((double)(NP5.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            if ((NP6.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((double)(NP6.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            if ((NP7.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((double)(NP7.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            if ((NP8.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((double)(NP8.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            if ((NP9.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((double)(NP9.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            if ((NP10.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((double)(NP10.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            if ((NP11.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((double)(NP11.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            if ((IP4.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((double)(IP4.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            if ((IP5.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((double)(IP5.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            if ((IP6.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((double)(IP6.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            if ((IP7.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((double)(IP7.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            if ((IP8.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((double)(IP8.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            if ((IP9.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[18].Value = ((double)(IP9.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            if ((IP10.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((double)(IP10.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[19].Value = global::System.DBNull.Value;
            }
            if ((IP11.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[20].Value = ((double)(IP11.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            if ((ACP5.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[21].Value = ((double)(ACP5.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[21].Value = global::System.DBNull.Value;
            }
            if ((ACP6.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[22].Value = ((double)(ACP6.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[22].Value = global::System.DBNull.Value;
            }
            if ((ACP7.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[23].Value = ((double)(ACP7.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[23].Value = global::System.DBNull.Value;
            }
            if ((ACP8.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[24].Value = ((double)(ACP8.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[24].Value = global::System.DBNull.Value;
            }
            if ((ACP9.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[25].Value = ((double)(ACP9.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[25].Value = global::System.DBNull.Value;
            }
            if ((ACP10.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[26].Value = ((double)(ACP10.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[26].Value = global::System.DBNull.Value;
            }
            if ((ACP11.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[27].Value = ((double)(ACP11.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[27].Value = global::System.DBNull.Value;
            }
            if ((ACH6.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[28].Value = ((double)(ACH6.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[28].Value = global::System.DBNull.Value;
            }
            if ((ACH7.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[29].Value = ((double)(ACH7.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[29].Value = global::System.DBNull.Value;
            }
            if ((ACH8.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[30].Value = ((double)(ACH8.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[30].Value = global::System.DBNull.Value;
            }
            if ((ACH9.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[31].Value = ((double)(ACH9.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[31].Value = global::System.DBNull.Value;
            }
            if ((ACH10.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[32].Value = ((double)(ACH10.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[32].Value = global::System.DBNull.Value;
            }
            if ((ACH11.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[33].Value = ((double)(ACH11.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[33].Value = global::System.DBNull.Value;
            }
            if ((A6.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[34].Value = ((double)(A6.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[34].Value = global::System.DBNull.Value;
            }
            if ((A7.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[35].Value = ((double)(A7.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[35].Value = global::System.DBNull.Value;
            }
            if ((A8.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[36].Value = ((double)(A8.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[36].Value = global::System.DBNull.Value;
            }
            if ((A9.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[37].Value = ((double)(A9.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[37].Value = global::System.DBNull.Value;
            }
            if ((A10.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[38].Value = ((double)(A10.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[38].Value = global::System.DBNull.Value;
            }
            if ((A11.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[39].Value = ((double)(A11.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[39].Value = global::System.DBNull.Value;
            }
            if ((H2.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[40].Value = ((double)(H2.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[40].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[41].Value = ((int)(Original_conc_id));
            if ((Original_масса_катализатора.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[42].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[43].Value = ((int)(Original_масса_катализатора.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[42].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[43].Value = global::System.DBNull.Value;
            }
            if ((Original_NP1.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[44].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[45].Value = ((double)(Original_NP1.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[44].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[45].Value = global::System.DBNull.Value;
            }
            if ((Original_NP2.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[46].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[47].Value = ((double)(Original_NP2.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[46].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[47].Value = global::System.DBNull.Value;
            }
            if ((Original_NP3.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[48].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[49].Value = ((double)(Original_NP3.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[48].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[49].Value = global::System.DBNull.Value;
            }
            if ((Original_NP4.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[50].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[51].Value = ((double)(Original_NP4.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[50].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[51].Value = global::System.DBNull.Value;
            }
            if ((Original_NP5.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[52].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[53].Value = ((double)(Original_NP5.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[52].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[53].Value = global::System.DBNull.Value;
            }
            if ((Original_NP6.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[54].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[55].Value = ((double)(Original_NP6.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[54].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[55].Value = global::System.DBNull.Value;
            }
            if ((Original_NP7.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[56].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[57].Value = ((double)(Original_NP7.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[56].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[57].Value = global::System.DBNull.Value;
            }
            if ((Original_NP8.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[58].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[59].Value = ((double)(Original_NP8.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[58].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[59].Value = global::System.DBNull.Value;
            }
            if ((Original_NP9.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[60].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[61].Value = ((double)(Original_NP9.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[60].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[61].Value = global::System.DBNull.Value;
            }
            if ((Original_NP10.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[62].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[63].Value = ((double)(Original_NP10.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[62].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[63].Value = global::System.DBNull.Value;
            }
            if ((Original_NP11.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[64].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[65].Value = ((double)(Original_NP11.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[64].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[65].Value = global::System.DBNull.Value;
            }
            if ((Original_IP4.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[66].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[67].Value = ((double)(Original_IP4.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[66].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[67].Value = global::System.DBNull.Value;
            }
            if ((Original_IP5.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[68].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[69].Value = ((double)(Original_IP5.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[68].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[69].Value = global::System.DBNull.Value;
            }
            if ((Original_IP6.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[70].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[71].Value = ((double)(Original_IP6.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[70].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[71].Value = global::System.DBNull.Value;
            }
            if ((Original_IP7.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[72].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[73].Value = ((double)(Original_IP7.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[72].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[73].Value = global::System.DBNull.Value;
            }
            if ((Original_IP8.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[74].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[75].Value = ((double)(Original_IP8.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[74].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[75].Value = global::System.DBNull.Value;
            }
            if ((Original_IP9.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[76].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[77].Value = ((double)(Original_IP9.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[76].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[77].Value = global::System.DBNull.Value;
            }
            if ((Original_IP10.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[78].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[79].Value = ((double)(Original_IP10.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[78].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[79].Value = global::System.DBNull.Value;
            }
            if ((Original_IP11.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[80].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[81].Value = ((double)(Original_IP11.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[80].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[81].Value = global::System.DBNull.Value;
            }
            if ((Original_ACP5.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[82].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[83].Value = ((double)(Original_ACP5.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[82].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[83].Value = global::System.DBNull.Value;
            }
            if ((Original_ACP6.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[84].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[85].Value = ((double)(Original_ACP6.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[84].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[85].Value = global::System.DBNull.Value;
            }
            if ((Original_ACP7.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[86].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[87].Value = ((double)(Original_ACP7.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[86].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[87].Value = global::System.DBNull.Value;
            }
            if ((Original_ACP8.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[88].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[89].Value = ((double)(Original_ACP8.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[88].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[89].Value = global::System.DBNull.Value;
            }
            if ((Original_ACP9.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[90].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[91].Value = ((double)(Original_ACP9.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[90].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[91].Value = global::System.DBNull.Value;
            }
            if ((Original_ACP10.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[92].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[93].Value = ((double)(Original_ACP10.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[92].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[93].Value = global::System.DBNull.Value;
            }
            if ((Original_ACP11.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[94].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[95].Value = ((double)(Original_ACP11.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[94].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[95].Value = global::System.DBNull.Value;
            }
            if ((Original_ACH6.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[96].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[97].Value = ((double)(Original_ACH6.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[96].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[97].Value = global::System.DBNull.Value;
            }
            if ((Original_ACH7.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[98].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[99].Value = ((double)(Original_ACH7.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[98].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[99].Value = global::System.DBNull.Value;
            }
            if ((Original_ACH8.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[100].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[101].Value = ((double)(Original_ACH8.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[100].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[101].Value = global::System.DBNull.Value;
            }
            if ((Original_ACH9.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[102].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[103].Value = ((double)(Original_ACH9.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[102].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[103].Value = global::System.DBNull.Value;
            }
            if ((Original_ACH10.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[104].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[105].Value = ((double)(Original_ACH10.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[104].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[105].Value = global::System.DBNull.Value;
            }
            if ((Original_ACH11.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[106].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[107].Value = ((double)(Original_ACH11.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[106].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[107].Value = global::System.DBNull.Value;
            }
            if ((Original_A6.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[108].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[109].Value = ((double)(Original_A6.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[108].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[109].Value = global::System.DBNull.Value;
            }
            if ((Original_A7.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[110].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[111].Value = ((double)(Original_A7.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[110].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[111].Value = global::System.DBNull.Value;
            }
            if ((Original_A8.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[112].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[113].Value = ((double)(Original_A8.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[112].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[113].Value = global::System.DBNull.Value;
            }
            if ((Original_A9.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[114].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[115].Value = ((double)(Original_A9.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[114].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[115].Value = global::System.DBNull.Value;
            }
            if ((Original_A10.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[116].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[117].Value = ((double)(Original_A10.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[116].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[117].Value = global::System.DBNull.Value;
            }
            if ((Original_A11.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[118].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[119].Value = ((double)(Original_A11.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[118].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[119].Value = global::System.DBNull.Value;
            }
            if ((Original_H2.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[120].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[121].Value = ((double)(Original_H2.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[120].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[121].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    global::System.Nullable<int> масса_катализатора, 
                    global::System.Nullable<double> NP1, 
                    global::System.Nullable<double> NP2, 
                    global::System.Nullable<double> NP3, 
                    global::System.Nullable<double> NP4, 
                    global::System.Nullable<double> NP5, 
                    global::System.Nullable<double> NP6, 
                    global::System.Nullable<double> NP7, 
                    global::System.Nullable<double> NP8, 
                    global::System.Nullable<double> NP9, 
                    global::System.Nullable<double> NP10, 
                    global::System.Nullable<double> NP11, 
                    global::System.Nullable<double> IP4, 
                    global::System.Nullable<double> IP5, 
                    global::System.Nullable<double> IP6, 
                    global::System.Nullable<double> IP7, 
                    global::System.Nullable<double> IP8, 
                    global::System.Nullable<double> IP9, 
                    global::System.Nullable<double> IP10, 
                    global::System.Nullable<double> IP11, 
                    global::System.Nullable<double> ACP5, 
                    global::System.Nullable<double> ACP6, 
                    global::System.Nullable<double> ACP7, 
                    global::System.Nullable<double> ACP8, 
                    global::System.Nullable<double> ACP9, 
                    global::System.Nullable<double> ACP10, 
                    global::System.Nullable<double> ACP11, 
                    global::System.Nullable<double> ACH6, 
                    global::System.Nullable<double> ACH7, 
                    global::System.Nullable<double> ACH8, 
                    global::System.Nullable<double> ACH9, 
                    global::System.Nullable<double> ACH10, 
                    global::System.Nullable<double> ACH11, 
                    global::System.Nullable<double> A6, 
                    global::System.Nullable<double> A7, 
                    global::System.Nullable<double> A8, 
                    global::System.Nullable<double> A9, 
                    global::System.Nullable<double> A10, 
                    global::System.Nullable<double> A11, 
                    global::System.Nullable<double> H2, 
                    int Original_conc_id, 
                    global::System.Nullable<int> Original_масса_катализатора, 
                    global::System.Nullable<double> Original_NP1, 
                    global::System.Nullable<double> Original_NP2, 
                    global::System.Nullable<double> Original_NP3, 
                    global::System.Nullable<double> Original_NP4, 
                    global::System.Nullable<double> Original_NP5, 
                    global::System.Nullable<double> Original_NP6, 
                    global::System.Nullable<double> Original_NP7, 
                    global::System.Nullable<double> Original_NP8, 
                    global::System.Nullable<double> Original_NP9, 
                    global::System.Nullable<double> Original_NP10, 
                    global::System.Nullable<double> Original_NP11, 
                    global::System.Nullable<double> Original_IP4, 
                    global::System.Nullable<double> Original_IP5, 
                    global::System.Nullable<double> Original_IP6, 
                    global::System.Nullable<double> Original_IP7, 
                    global::System.Nullable<double> Original_IP8, 
                    global::System.Nullable<double> Original_IP9, 
                    global::System.Nullable<double> Original_IP10, 
                    global::System.Nullable<double> Original_IP11, 
                    global::System.Nullable<double> Original_ACP5, 
                    global::System.Nullable<double> Original_ACP6, 
                    global::System.Nullable<double> Original_ACP7, 
                    global::System.Nullable<double> Original_ACP8, 
                    global::System.Nullable<double> Original_ACP9, 
                    global::System.Nullable<double> Original_ACP10, 
                    global::System.Nullable<double> Original_ACP11, 
                    global::System.Nullable<double> Original_ACH6, 
                    global::System.Nullable<double> Original_ACH7, 
                    global::System.Nullable<double> Original_ACH8, 
                    global::System.Nullable<double> Original_ACH9, 
                    global::System.Nullable<double> Original_ACH10, 
                    global::System.Nullable<double> Original_ACH11, 
                    global::System.Nullable<double> Original_A6, 
                    global::System.Nullable<double> Original_A7, 
                    global::System.Nullable<double> Original_A8, 
                    global::System.Nullable<double> Original_A9, 
                    global::System.Nullable<double> Original_A10, 
                    global::System.Nullable<double> Original_A11, 
                    global::System.Nullable<double> Original_H2) {
            return this.Update(Original_conc_id, масса_катализатора, NP1, NP2, NP3, NP4, NP5, NP6, NP7, NP8, NP9, NP10, NP11, IP4, IP5, IP6, IP7, IP8, IP9, IP10, IP11, ACP5, ACP6, ACP7, ACP8, ACP9, ACP10, ACP11, ACH6, ACH7, ACH8, ACH9, ACH10, ACH11, A6, A7, A8, A9, A10, A11, H2, Original_conc_id, Original_масса_катализатора, Original_NP1, Original_NP2, Original_NP3, Original_NP4, Original_NP5, Original_NP6, Original_NP7, Original_NP8, Original_NP9, Original_NP10, Original_NP11, Original_IP4, Original_IP5, Original_IP6, Original_IP7, Original_IP8, Original_IP9, Original_IP10, Original_IP11, Original_ACP5, Original_ACP6, Original_ACP7, Original_ACP8, Original_ACP9, Original_ACP10, Original_ACP11, Original_ACH6, Original_ACH7, Original_ACH8, Original_ACH9, Original_ACH10, Original_ACH11, Original_A6, Original_A7, Original_A8, Original_A9, Original_A10, Original_A11, Original_H2);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class ИзмКонц_УстановкаTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public ИзмКонц_УстановкаTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "ИзмКонц_Установка";
            tableMapping.ColumnMappings.Add("conc_id", "conc_id");
            tableMapping.ColumnMappings.Add("facility_id", "facility_id");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM [dbo].[ИзмКонц_Установка] WHERE (([conc_id] = @Original_conc_id) AND " +
                "([facility_id] = @Original_facility_id))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_conc_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "conc_id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_facility_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "facility_id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO [dbo].[ИзмКонц_Установка] ([conc_id], [facility_id]) VALUES (@conc_id" +
                ", @facility_id);\r\nSELECT conc_id, facility_id FROM ИзмКонц_Установка WHERE (conc" +
                "_id = @conc_id) AND (facility_id = @facility_id)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@conc_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "conc_id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@facility_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "facility_id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[ИзмКонц_Установка] SET [conc_id] = @conc_id, [facility_id] = @facility_id WHERE (([conc_id] = @Original_conc_id) AND ([facility_id] = @Original_facility_id));
SELECT conc_id, facility_id FROM ИзмКонц_Установка WHERE (conc_id = @conc_id) AND (facility_id = @facility_id)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@conc_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "conc_id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@facility_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "facility_id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_conc_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "conc_id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_facility_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "facility_id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::Katal_Ref.Properties.Settings.Default.Katal_Reform_DBConnectionStringNew;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT conc_id, facility_id FROM dbo.ИзмКонц_Установка";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(Katal_Reform_DBDataSet1.ИзмКонц_УстановкаDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual Katal_Reform_DBDataSet1.ИзмКонц_УстановкаDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            Katal_Reform_DBDataSet1.ИзмКонц_УстановкаDataTable dataTable = new Katal_Reform_DBDataSet1.ИзмКонц_УстановкаDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(Katal_Reform_DBDataSet1.ИзмКонц_УстановкаDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(Katal_Reform_DBDataSet1 dataSet) {
            return this.Adapter.Update(dataSet, "ИзмКонц_Установка");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_conc_id, int Original_facility_id) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_conc_id));
            this.Adapter.DeleteCommand.Parameters[1].Value = ((int)(Original_facility_id));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(int conc_id, int facility_id) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((int)(conc_id));
            this.Adapter.InsertCommand.Parameters[1].Value = ((int)(facility_id));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(int conc_id, int facility_id, int Original_conc_id, int Original_facility_id) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((int)(conc_id));
            this.Adapter.UpdateCommand.Parameters[1].Value = ((int)(facility_id));
            this.Adapter.UpdateCommand.Parameters[2].Value = ((int)(Original_conc_id));
            this.Adapter.UpdateCommand.Parameters[3].Value = ((int)(Original_facility_id));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(int Original_conc_id, int Original_facility_id) {
            return this.Update(Original_conc_id, Original_facility_id, Original_conc_id, Original_facility_id);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class КомпонентыTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public КомпонентыTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "Компоненты";
            tableMapping.ColumnMappings.Add("component_id", "component_id");
            tableMapping.ColumnMappings.Add("Наименование_компонента", "Наименование_компонента");
            tableMapping.ColumnMappings.Add("Хим_формула", "Хим_формула");
            tableMapping.ColumnMappings.Add("Молярная_масса", "Молярная_масса");
            tableMapping.ColumnMappings.Add("Температура_кипения", "Температура_кипения");
            tableMapping.ColumnMappings.Add("charac_id", "charac_id");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [dbo].[Компоненты] WHERE (([component_id] = @Original_component_id) AND ([Наименование_компонента] = @Original_Наименование_компонента) AND ([Хим_формула] = @Original_Хим_формула) AND ([Молярная_масса] = @Original_Молярная_масса) AND ([Температура_кипения] = @Original_Температура_кипения) AND ((@IsNull_charac_id = 1 AND [charac_id] IS NULL) OR ([charac_id] = @Original_charac_id)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_component_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "component_id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Наименование_компонента", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Наименование_компонента", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Хим_формула", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Хим_формула", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Молярная_масса", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Молярная_масса", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Температура_кипения", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Температура_кипения", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_charac_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "charac_id", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_charac_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "charac_id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[Компоненты] ([component_id], [Наименование_компонента], [Хим_формула], [Молярная_масса], [Температура_кипения], [charac_id]) VALUES (@component_id, @Наименование_компонента, @Хим_формула, @Молярная_масса, @Температура_кипения, @charac_id);
SELECT component_id, Наименование_компонента, Хим_формула, Молярная_масса, Температура_кипения, charac_id FROM Компоненты WHERE (component_id = @component_id)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@component_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "component_id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Наименование_компонента", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Наименование_компонента", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Хим_формула", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Хим_формула", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Молярная_масса", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Молярная_масса", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Температура_кипения", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Температура_кипения", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@charac_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "charac_id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[Компоненты] SET [component_id] = @component_id, [Наименование_компонента] = @Наименование_компонента, [Хим_формула] = @Хим_формула, [Молярная_масса] = @Молярная_масса, [Температура_кипения] = @Температура_кипения, [charac_id] = @charac_id WHERE (([component_id] = @Original_component_id) AND ([Наименование_компонента] = @Original_Наименование_компонента) AND ([Хим_формула] = @Original_Хим_формула) AND ([Молярная_масса] = @Original_Молярная_масса) AND ([Температура_кипения] = @Original_Температура_кипения) AND ((@IsNull_charac_id = 1 AND [charac_id] IS NULL) OR ([charac_id] = @Original_charac_id)));
SELECT component_id, Наименование_компонента, Хим_формула, Молярная_масса, Температура_кипения, charac_id FROM Компоненты WHERE (component_id = @component_id)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@component_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "component_id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Наименование_компонента", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Наименование_компонента", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Хим_формула", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Хим_формула", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Молярная_масса", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Молярная_масса", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Температура_кипения", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Температура_кипения", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@charac_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "charac_id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_component_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "component_id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Наименование_компонента", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Наименование_компонента", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Хим_формула", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Хим_формула", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Молярная_масса", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Молярная_масса", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Температура_кипения", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Температура_кипения", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_charac_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "charac_id", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_charac_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "charac_id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::Katal_Ref.Properties.Settings.Default.Katal_Reform_DBConnectionStringNew;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT component_id, Наименование_компонента, Хим_формула, Молярная_масса, Темпер" +
                "атура_кипения, charac_id FROM dbo.Компоненты";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(Katal_Reform_DBDataSet1.КомпонентыDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual Katal_Reform_DBDataSet1.КомпонентыDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            Katal_Reform_DBDataSet1.КомпонентыDataTable dataTable = new Katal_Reform_DBDataSet1.КомпонентыDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(Katal_Reform_DBDataSet1.КомпонентыDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(Katal_Reform_DBDataSet1 dataSet) {
            return this.Adapter.Update(dataSet, "Компоненты");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_component_id, string Original_Наименование_компонента, string Original_Хим_формула, double Original_Молярная_масса, double Original_Температура_кипения, global::System.Nullable<int> Original_charac_id) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_component_id));
            if ((Original_Наименование_компонента == null)) {
                throw new global::System.ArgumentNullException("Original_Наименование_компонента");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((string)(Original_Наименование_компонента));
            }
            if ((Original_Хим_формула == null)) {
                throw new global::System.ArgumentNullException("Original_Хим_формула");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_Хим_формула));
            }
            this.Adapter.DeleteCommand.Parameters[3].Value = ((double)(Original_Молярная_масса));
            this.Adapter.DeleteCommand.Parameters[4].Value = ((double)(Original_Температура_кипения));
            if ((Original_charac_id.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[6].Value = ((int)(Original_charac_id.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(int component_id, string Наименование_компонента, string Хим_формула, double Молярная_масса, double Температура_кипения, global::System.Nullable<int> charac_id) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((int)(component_id));
            if ((Наименование_компонента == null)) {
                throw new global::System.ArgumentNullException("Наименование_компонента");
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(Наименование_компонента));
            }
            if ((Хим_формула == null)) {
                throw new global::System.ArgumentNullException("Хим_формула");
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(Хим_формула));
            }
            this.Adapter.InsertCommand.Parameters[3].Value = ((double)(Молярная_масса));
            this.Adapter.InsertCommand.Parameters[4].Value = ((double)(Температура_кипения));
            if ((charac_id.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[5].Value = ((int)(charac_id.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(int component_id, string Наименование_компонента, string Хим_формула, double Молярная_масса, double Температура_кипения, global::System.Nullable<int> charac_id, int Original_component_id, string Original_Наименование_компонента, string Original_Хим_формула, double Original_Молярная_масса, double Original_Температура_кипения, global::System.Nullable<int> Original_charac_id) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((int)(component_id));
            if ((Наименование_компонента == null)) {
                throw new global::System.ArgumentNullException("Наименование_компонента");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(Наименование_компонента));
            }
            if ((Хим_формула == null)) {
                throw new global::System.ArgumentNullException("Хим_формула");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(Хим_формула));
            }
            this.Adapter.UpdateCommand.Parameters[3].Value = ((double)(Молярная_масса));
            this.Adapter.UpdateCommand.Parameters[4].Value = ((double)(Температура_кипения));
            if ((charac_id.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((int)(charac_id.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[6].Value = ((int)(Original_component_id));
            if ((Original_Наименование_компонента == null)) {
                throw new global::System.ArgumentNullException("Original_Наименование_компонента");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(Original_Наименование_компонента));
            }
            if ((Original_Хим_формула == null)) {
                throw new global::System.ArgumentNullException("Original_Хим_формула");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((string)(Original_Хим_формула));
            }
            this.Adapter.UpdateCommand.Parameters[9].Value = ((double)(Original_Молярная_масса));
            this.Adapter.UpdateCommand.Parameters[10].Value = ((double)(Original_Температура_кипения));
            if ((Original_charac_id.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[12].Value = ((int)(Original_charac_id.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string Наименование_компонента, string Хим_формула, double Молярная_масса, double Температура_кипения, global::System.Nullable<int> charac_id, int Original_component_id, string Original_Наименование_компонента, string Original_Хим_формула, double Original_Молярная_масса, double Original_Температура_кипения, global::System.Nullable<int> Original_charac_id) {
            return this.Update(Original_component_id, Наименование_компонента, Хим_формула, Молярная_масса, Температура_кипения, charac_id, Original_component_id, Original_Наименование_компонента, Original_Хим_формула, Original_Молярная_масса, Original_Температура_кипения, Original_charac_id);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class Компоненты_УстановкаTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public Компоненты_УстановкаTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "Компоненты_Установка";
            tableMapping.ColumnMappings.Add("component_id", "component_id");
            tableMapping.ColumnMappings.Add("facility_id", "facility_id");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM [dbo].[Компоненты_Установка] WHERE (([component_id] = @Original_compo" +
                "nent_id) AND ([facility_id] = @Original_facility_id))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_component_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "component_id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_facility_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "facility_id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO [dbo].[Компоненты_Установка] ([component_id], [facility_id]) VALUES (" +
                "@component_id, @facility_id);\r\nSELECT component_id, facility_id FROM Компоненты_" +
                "Установка WHERE (component_id = @component_id) AND (facility_id = @facility_id)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@component_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "component_id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@facility_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "facility_id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[Компоненты_Установка] SET [component_id] = @component_id, [facility_id] = @facility_id WHERE (([component_id] = @Original_component_id) AND ([facility_id] = @Original_facility_id));
SELECT component_id, facility_id FROM Компоненты_Установка WHERE (component_id = @component_id) AND (facility_id = @facility_id)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@component_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "component_id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@facility_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "facility_id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_component_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "component_id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_facility_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "facility_id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::Katal_Ref.Properties.Settings.Default.Katal_Reform_DBConnectionStringNew;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT component_id, facility_id FROM dbo.Компоненты_Установка";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(Katal_Reform_DBDataSet1.Компоненты_УстановкаDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual Katal_Reform_DBDataSet1.Компоненты_УстановкаDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            Katal_Reform_DBDataSet1.Компоненты_УстановкаDataTable dataTable = new Katal_Reform_DBDataSet1.Компоненты_УстановкаDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(Katal_Reform_DBDataSet1.Компоненты_УстановкаDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(Katal_Reform_DBDataSet1 dataSet) {
            return this.Adapter.Update(dataSet, "Компоненты_Установка");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_component_id, int Original_facility_id) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_component_id));
            this.Adapter.DeleteCommand.Parameters[1].Value = ((int)(Original_facility_id));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(int component_id, int facility_id) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((int)(component_id));
            this.Adapter.InsertCommand.Parameters[1].Value = ((int)(facility_id));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(int component_id, int facility_id, int Original_component_id, int Original_facility_id) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((int)(component_id));
            this.Adapter.UpdateCommand.Parameters[1].Value = ((int)(facility_id));
            this.Adapter.UpdateCommand.Parameters[2].Value = ((int)(Original_component_id));
            this.Adapter.UpdateCommand.Parameters[3].Value = ((int)(Original_facility_id));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(int Original_component_id, int Original_facility_id) {
            return this.Update(Original_component_id, Original_facility_id, Original_component_id, Original_facility_id);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class СотрудникиTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public СотрудникиTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "Сотрудники";
            tableMapping.ColumnMappings.Add("employee_id", "employee_id");
            tableMapping.ColumnMappings.Add("ФИО", "ФИО");
            tableMapping.ColumnMappings.Add("Дата_рождения", "Дата_рождения");
            tableMapping.ColumnMappings.Add("Пасспортные_данные", "Пасспортные_данные");
            tableMapping.ColumnMappings.Add("Должность", "Должность");
            tableMapping.ColumnMappings.Add("Номер_телефона", "Номер_телефона");
            tableMapping.ColumnMappings.Add("facility_id", "facility_id");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [dbo].[Сотрудники] WHERE (([employee_id] = @Original_employee_id) AND ([ФИО] = @Original_ФИО) AND ([Дата_рождения] = @Original_Дата_рождения) AND ([Пасспортные_данные] = @Original_Пасспортные_данные) AND ([Должность] = @Original_Должность) AND ((@IsNull_Номер_телефона = 1 AND [Номер_телефона] IS NULL) OR ([Номер_телефона] = @Original_Номер_телефона)) AND ((@IsNull_facility_id = 1 AND [facility_id] IS NULL) OR ([facility_id] = @Original_facility_id)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_employee_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "employee_id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ФИО", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ФИО", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Дата_рождения", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Дата_рождения", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Пасспортные_данные", global::System.Data.SqlDbType.BigInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Пасспортные_данные", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Должность", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Должность", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Номер_телефона", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Номер_телефона", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Номер_телефона", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Номер_телефона", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_facility_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "facility_id", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_facility_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "facility_id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[Сотрудники] ([employee_id], [ФИО], [Дата_рождения], [Пасспортные_данные], [Должность], [Номер_телефона], [facility_id]) VALUES (@employee_id, @ФИО, @Дата_рождения, @Пасспортные_данные, @Должность, @Номер_телефона, @facility_id);
SELECT employee_id, ФИО, Дата_рождения, Пасспортные_данные, Должность, Номер_телефона, facility_id FROM Сотрудники WHERE (employee_id = @employee_id)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@employee_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "employee_id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ФИО", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ФИО", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Дата_рождения", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Дата_рождения", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Пасспортные_данные", global::System.Data.SqlDbType.BigInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Пасспортные_данные", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Должность", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Должность", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Номер_телефона", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Номер_телефона", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@facility_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "facility_id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[Сотрудники] SET [employee_id] = @employee_id, [ФИО] = @ФИО, [Дата_рождения] = @Дата_рождения, [Пасспортные_данные] = @Пасспортные_данные, [Должность] = @Должность, [Номер_телефона] = @Номер_телефона, [facility_id] = @facility_id WHERE (([employee_id] = @Original_employee_id) AND ([ФИО] = @Original_ФИО) AND ([Дата_рождения] = @Original_Дата_рождения) AND ([Пасспортные_данные] = @Original_Пасспортные_данные) AND ([Должность] = @Original_Должность) AND ((@IsNull_Номер_телефона = 1 AND [Номер_телефона] IS NULL) OR ([Номер_телефона] = @Original_Номер_телефона)) AND ((@IsNull_facility_id = 1 AND [facility_id] IS NULL) OR ([facility_id] = @Original_facility_id)));
SELECT employee_id, ФИО, Дата_рождения, Пасспортные_данные, Должность, Номер_телефона, facility_id FROM Сотрудники WHERE (employee_id = @employee_id)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@employee_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "employee_id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ФИО", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ФИО", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Дата_рождения", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Дата_рождения", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Пасспортные_данные", global::System.Data.SqlDbType.BigInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Пасспортные_данные", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Должность", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Должность", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Номер_телефона", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Номер_телефона", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@facility_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "facility_id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_employee_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "employee_id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ФИО", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ФИО", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Дата_рождения", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Дата_рождения", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Пасспортные_данные", global::System.Data.SqlDbType.BigInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Пасспортные_данные", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Должность", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Должность", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Номер_телефона", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Номер_телефона", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Номер_телефона", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Номер_телефона", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_facility_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "facility_id", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_facility_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "facility_id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::Katal_Ref.Properties.Settings.Default.Katal_Reform_DBConnectionStringNew;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT employee_id, ФИО, Дата_рождения, Пасспортные_данные, Должность, Номер_теле" +
                "фона, facility_id FROM dbo.Сотрудники";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(Katal_Reform_DBDataSet1.СотрудникиDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual Katal_Reform_DBDataSet1.СотрудникиDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            Katal_Reform_DBDataSet1.СотрудникиDataTable dataTable = new Katal_Reform_DBDataSet1.СотрудникиDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(Katal_Reform_DBDataSet1.СотрудникиDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(Katal_Reform_DBDataSet1 dataSet) {
            return this.Adapter.Update(dataSet, "Сотрудники");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_employee_id, string Original_ФИО, System.DateTime Original_Дата_рождения, long Original_Пасспортные_данные, string Original_Должность, string Original_Номер_телефона, global::System.Nullable<int> Original_facility_id) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_employee_id));
            if ((Original_ФИО == null)) {
                throw new global::System.ArgumentNullException("Original_ФИО");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((string)(Original_ФИО));
            }
            this.Adapter.DeleteCommand.Parameters[2].Value = ((System.DateTime)(Original_Дата_рождения));
            this.Adapter.DeleteCommand.Parameters[3].Value = ((long)(Original_Пасспортные_данные));
            if ((Original_Должность == null)) {
                throw new global::System.ArgumentNullException("Original_Должность");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[4].Value = ((string)(Original_Должность));
            }
            if ((Original_Номер_телефона == null)) {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[6].Value = ((string)(Original_Номер_телефона));
            }
            if ((Original_facility_id.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[8].Value = ((int)(Original_facility_id.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(int employee_id, string ФИО, System.DateTime Дата_рождения, long Пасспортные_данные, string Должность, string Номер_телефона, global::System.Nullable<int> facility_id) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((int)(employee_id));
            if ((ФИО == null)) {
                throw new global::System.ArgumentNullException("ФИО");
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(ФИО));
            }
            this.Adapter.InsertCommand.Parameters[2].Value = ((System.DateTime)(Дата_рождения));
            this.Adapter.InsertCommand.Parameters[3].Value = ((long)(Пасспортные_данные));
            if ((Должность == null)) {
                throw new global::System.ArgumentNullException("Должность");
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(Должность));
            }
            if ((Номер_телефона == null)) {
                this.Adapter.InsertCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = ((string)(Номер_телефона));
            }
            if ((facility_id.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[6].Value = ((int)(facility_id.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(int employee_id, string ФИО, System.DateTime Дата_рождения, long Пасспортные_данные, string Должность, string Номер_телефона, global::System.Nullable<int> facility_id, int Original_employee_id, string Original_ФИО, System.DateTime Original_Дата_рождения, long Original_Пасспортные_данные, string Original_Должность, string Original_Номер_телефона, global::System.Nullable<int> Original_facility_id) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((int)(employee_id));
            if ((ФИО == null)) {
                throw new global::System.ArgumentNullException("ФИО");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(ФИО));
            }
            this.Adapter.UpdateCommand.Parameters[2].Value = ((System.DateTime)(Дата_рождения));
            this.Adapter.UpdateCommand.Parameters[3].Value = ((long)(Пасспортные_данные));
            if ((Должность == null)) {
                throw new global::System.ArgumentNullException("Должность");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(Должность));
            }
            if ((Номер_телефона == null)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(Номер_телефона));
            }
            if ((facility_id.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((int)(facility_id.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[7].Value = ((int)(Original_employee_id));
            if ((Original_ФИО == null)) {
                throw new global::System.ArgumentNullException("Original_ФИО");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((string)(Original_ФИО));
            }
            this.Adapter.UpdateCommand.Parameters[9].Value = ((System.DateTime)(Original_Дата_рождения));
            this.Adapter.UpdateCommand.Parameters[10].Value = ((long)(Original_Пасспортные_данные));
            if ((Original_Должность == null)) {
                throw new global::System.ArgumentNullException("Original_Должность");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((string)(Original_Должность));
            }
            if ((Original_Номер_телефона == null)) {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[13].Value = ((string)(Original_Номер_телефона));
            }
            if ((Original_facility_id.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[15].Value = ((int)(Original_facility_id.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string ФИО, System.DateTime Дата_рождения, long Пасспортные_данные, string Должность, string Номер_телефона, global::System.Nullable<int> facility_id, int Original_employee_id, string Original_ФИО, System.DateTime Original_Дата_рождения, long Original_Пасспортные_данные, string Original_Должность, string Original_Номер_телефона, global::System.Nullable<int> Original_facility_id) {
            return this.Update(Original_employee_id, ФИО, Дата_рождения, Пасспортные_данные, Должность, Номер_телефона, facility_id, Original_employee_id, Original_ФИО, Original_Дата_рождения, Original_Пасспортные_данные, Original_Должность, Original_Номер_телефона, Original_facility_id);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class Термодин_харак_TableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public Термодин_харак_TableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "Термодин_харак$";
            tableMapping.ColumnMappings.Add("charac_id", "charac_id");
            tableMapping.ColumnMappings.Add("Обозначение ", "Обозначение ");
            tableMapping.ColumnMappings.Add("Наименование", "Наименование");
            tableMapping.ColumnMappings.Add("ΔH298 , кДж/моль", "ΔH298 , кДж/моль");
            tableMapping.ColumnMappings.Add(" S298 , Дж/(моль*К)", " S298 , Дж/(моль*К)");
            tableMapping.ColumnMappings.Add("Сp 298, Дж/(моль*град)", "Сp 298, Дж/(моль*град)");
            tableMapping.ColumnMappings.Add("a ", "a ");
            tableMapping.ColumnMappings.Add("b*10^3", "b*10^3");
            tableMapping.ColumnMappings.Add("c*10^6", "c*10^6");
            tableMapping.ColumnMappings.Add("c_*10^-5", "c_*10^-5");
            tableMapping.ColumnMappings.Add("Сp 298, Дж/(моль*град), Расчитанная через коэфициенты", "Сp 298, Дж/(моль*град), Расчитанная через коэфициенты");
            tableMapping.ColumnMappings.Add("Ошибка, %", "Ошибка, %");
            tableMapping.ColumnMappings.Add("F13", "F13");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [dbo].[Термодин_харак$] WHERE (([charac_id] = @Original_charac_id) AND ((@IsNull_Обозначение_ = 1 AND [Обозначение ] IS NULL) OR ([Обозначение ] = @Original_Обозначение_)) AND ((@IsNull_Наименование = 1 AND [Наименование] IS NULL) OR ([Наименование] = @Original_Наименование)) AND ((@p3 = 1 AND [ΔH298 , кДж/моль] IS NULL) OR ([ΔH298 , кДж/моль] = @p2)) AND ((@p6 = 1 AND [ S298 , Дж/(моль*К)] IS NULL) OR ([ S298 , Дж/(моль*К)] = @p5)) AND ((@p9 = 1 AND [Сp 298, Дж/(моль*град)] IS NULL) OR ([Сp 298, Дж/(моль*град)] = @p8)) AND ((@IsNull_a_ = 1 AND [a ] IS NULL) OR ([a ] = @Original_a_)) AND ((@p12 = 1 AND [b*10^3] IS NULL) OR ([b*10^3] = @p11)) AND ((@p15 = 1 AND [c*10^6] IS NULL) OR ([c*10^6] = @p14)) AND ((@p18 = 1 AND [c_*10^-5] IS NULL) OR ([c_*10^-5] = @p17)) AND ((@p21 = 1 AND [Сp 298, Дж/(моль*град), Расчитанная через коэфициенты] IS NULL) OR ([Сp 298, Дж/(моль*град), Расчитанная через коэфициенты] = @p20)) AND ((@p24 = 1 AND [Ошибка, %] IS NULL) OR ([Ошибка, %] = @p23)) AND ((@IsNull_F13 = 1 AND [F13] IS NULL) OR ([F13] = @Original_F13)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_charac_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "charac_id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Обозначение_", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Обозначение ", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Обозначение_", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Обозначение ", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Наименование", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Наименование", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Наименование", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Наименование", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@p3", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ΔH298 , кДж/моль", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@p2", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ΔH298 , кДж/моль", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@p6", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, " S298 , Дж/(моль*К)", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@p5", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, " S298 , Дж/(моль*К)", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@p9", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Сp 298, Дж/(моль*град)", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@p8", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Сp 298, Дж/(моль*град)", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_a_", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "a ", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_a_", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "a ", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@p12", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "b*10^3", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@p11", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "b*10^3", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@p15", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "c*10^6", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@p14", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "c*10^6", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@p18", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "c_*10^-5", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@p17", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "c_*10^-5", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@p21", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Сp 298, Дж/(моль*град), Расчитанная через коэфициенты", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@p20", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Сp 298, Дж/(моль*град), Расчитанная через коэфициенты", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@p24", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Ошибка, %", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@p23", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Ошибка, %", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_F13", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "F13", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_F13", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "F13", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[Термодин_харак$] ([charac_id], [Обозначение ], [Наименование], [ΔH298 , кДж/моль], [ S298 , Дж/(моль*К)], [Сp 298, Дж/(моль*град)], [a ], [b*10^3], [c*10^6], [c_*10^-5], [Сp 298, Дж/(моль*град), Расчитанная через коэфициенты], [Ошибка, %], [F13]) VALUES (@charac_id, @Обозначение_, @Наименование, @p1, @p4, @p7, @a_, @p10, @p13, @p16, @p19, @p22, @F13);
SELECT charac_id, [Обозначение ], Наименование, [ΔH298 , кДж/моль], [ S298 , Дж/(моль*К)], [Сp 298, Дж/(моль*град)], [a ], [b*10^3], [c*10^6], [c_*10^-5], [Сp 298, Дж/(моль*град), Расчитанная через коэфициенты], [Ошибка, %], F13 FROM Термодин_харак$ WHERE (charac_id = @charac_id)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@charac_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "charac_id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Обозначение_", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Обозначение ", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Наименование", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Наименование", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@p1", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ΔH298 , кДж/моль", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@p4", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, " S298 , Дж/(моль*К)", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@p7", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Сp 298, Дж/(моль*град)", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@a_", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "a ", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@p10", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "b*10^3", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@p13", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "c*10^6", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@p16", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "c_*10^-5", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@p19", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Сp 298, Дж/(моль*град), Расчитанная через коэфициенты", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@p22", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Ошибка, %", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@F13", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "F13", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = "UPDATE [dbo].[Термодин_харак$] SET [charac_id] = @charac_id, [Обозначение ] = @Об" +
                "означение_, [Наименование] = @Наименование, [ΔH298 , кДж/моль] = @p1, [ S298 , Д" +
                "ж/(моль*К)] = @p4, [Сp 298, Дж/(моль*град)] = @p7, [a ] = @a_, [b*10^3] = @p10, " +
                "[c*10^6] = @p13, [c_*10^-5] = @p16, [Сp 298, Дж/(моль*град), Расчитанная через к" +
                "оэфициенты] = @p19, [Ошибка, %] = @p22, [F13] = @F13 WHERE (([charac_id] = @Orig" +
                "inal_charac_id) AND ((@IsNull_Обозначение_ = 1 AND [Обозначение ] IS NULL) OR ([" +
                "Обозначение ] = @Original_Обозначение_)) AND ((@IsNull_Наименование = 1 AND [Наи" +
                "менование] IS NULL) OR ([Наименование] = @Original_Наименование)) AND ((@p3 = 1 " +
                "AND [ΔH298 , кДж/моль] IS NULL) OR ([ΔH298 , кДж/моль] = @p2)) AND ((@p6 = 1 AND" +
                " [ S298 , Дж/(моль*К)] IS NULL) OR ([ S298 , Дж/(моль*К)] = @p5)) AND ((@p9 = 1 " +
                "AND [Сp 298, Дж/(моль*град)] IS NULL) OR ([Сp 298, Дж/(моль*град)] = @p8)) AND (" +
                "(@IsNull_a_ = 1 AND [a ] IS NULL) OR ([a ] = @Original_a_)) AND ((@p12 = 1 AND [" +
                "b*10^3] IS NULL) OR ([b*10^3] = @p11)) AND ((@p15 = 1 AND [c*10^6] IS NULL) OR (" +
                "[c*10^6] = @p14)) AND ((@p18 = 1 AND [c_*10^-5] IS NULL) OR ([c_*10^-5] = @p17))" +
                " AND ((@p21 = 1 AND [Сp 298, Дж/(моль*град), Расчитанная через коэфициенты] IS N" +
                "ULL) OR ([Сp 298, Дж/(моль*град), Расчитанная через коэфициенты] = @p20)) AND ((" +
                "@p24 = 1 AND [Ошибка, %] IS NULL) OR ([Ошибка, %] = @p23)) AND ((@IsNull_F13 = 1" +
                " AND [F13] IS NULL) OR ([F13] = @Original_F13)));\r\nSELECT charac_id, [Обозначени" +
                "е ], Наименование, [ΔH298 , кДж/моль], [ S298 , Дж/(моль*К)], [Сp 298, Дж/(моль*" +
                "град)], [a ], [b*10^3], [c*10^6], [c_*10^-5], [Сp 298, Дж/(моль*град), Расчитанн" +
                "ая через коэфициенты], [Ошибка, %], F13 FROM Термодин_харак$ WHERE (charac_id = " +
                "@charac_id)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@charac_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "charac_id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Обозначение_", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Обозначение ", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Наименование", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Наименование", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@p1", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ΔH298 , кДж/моль", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@p4", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, " S298 , Дж/(моль*К)", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@p7", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Сp 298, Дж/(моль*град)", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@a_", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "a ", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@p10", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "b*10^3", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@p13", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "c*10^6", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@p16", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "c_*10^-5", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@p19", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Сp 298, Дж/(моль*град), Расчитанная через коэфициенты", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@p22", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Ошибка, %", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@F13", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "F13", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_charac_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "charac_id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Обозначение_", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Обозначение ", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Обозначение_", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Обозначение ", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Наименование", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Наименование", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Наименование", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Наименование", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@p3", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ΔH298 , кДж/моль", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@p2", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ΔH298 , кДж/моль", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@p6", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, " S298 , Дж/(моль*К)", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@p5", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, " S298 , Дж/(моль*К)", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@p9", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Сp 298, Дж/(моль*град)", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@p8", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Сp 298, Дж/(моль*град)", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_a_", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "a ", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_a_", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "a ", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@p12", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "b*10^3", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@p11", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "b*10^3", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@p15", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "c*10^6", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@p14", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "c*10^6", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@p18", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "c_*10^-5", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@p17", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "c_*10^-5", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@p21", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Сp 298, Дж/(моль*град), Расчитанная через коэфициенты", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@p20", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Сp 298, Дж/(моль*град), Расчитанная через коэфициенты", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@p24", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Ошибка, %", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@p23", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Ошибка, %", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_F13", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "F13", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_F13", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "F13", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::Katal_Ref.Properties.Settings.Default.Katal_Reform_DBConnectionStringNew;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT charac_id, [Обозначение ], Наименование, [ΔH298 , кДж/моль], [ S298 , Дж/(" +
                "моль*К)], [Сp 298, Дж/(моль*град)], [a ], [b*10^3], [c*10^6], [c_*10^-5], [Сp 29" +
                "8, Дж/(моль*град), Расчитанная через коэфициенты], [Ошибка, %], F13 FROM dbo.Тер" +
                "модин_харак$";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(Katal_Reform_DBDataSet1._Термодин_харак_DataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual Katal_Reform_DBDataSet1._Термодин_харак_DataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            Katal_Reform_DBDataSet1._Термодин_харак_DataTable dataTable = new Katal_Reform_DBDataSet1._Термодин_харак_DataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(Katal_Reform_DBDataSet1._Термодин_харак_DataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(Katal_Reform_DBDataSet1 dataSet) {
            return this.Adapter.Update(dataSet, "Термодин_харак$");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_charac_id, string Original_Обозначение_, string Original_Наименование, global::System.Nullable<double> p2, global::System.Nullable<double> p5, global::System.Nullable<double> p8, global::System.Nullable<double> Original_a_, global::System.Nullable<double> p11, global::System.Nullable<double> p14, global::System.Nullable<double> p17, global::System.Nullable<double> p20, global::System.Nullable<double> p23, string Original_F13) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_charac_id));
            if ((Original_Обозначение_ == null)) {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_Обозначение_));
            }
            if ((Original_Наименование == null)) {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[4].Value = ((string)(Original_Наименование));
            }
            if ((p2.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[6].Value = ((double)(p2.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            if ((p5.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[8].Value = ((double)(p5.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            if ((p8.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[10].Value = ((double)(p8.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            if ((Original_a_.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[12].Value = ((double)(Original_a_.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            if ((p11.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[14].Value = ((double)(p11.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            if ((p14.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[15].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[16].Value = ((double)(p14.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[15].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            if ((p17.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[17].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[18].Value = ((double)(p17.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[17].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            if ((p20.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[19].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[20].Value = ((double)(p20.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[19].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            if ((p23.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[21].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[22].Value = ((double)(p23.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[21].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[22].Value = global::System.DBNull.Value;
            }
            if ((Original_F13 == null)) {
                this.Adapter.DeleteCommand.Parameters[23].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[24].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[23].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[24].Value = ((string)(Original_F13));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(int charac_id, string Обозначение_, string Наименование, global::System.Nullable<double> p1, global::System.Nullable<double> p4, global::System.Nullable<double> p7, global::System.Nullable<double> a_, global::System.Nullable<double> p10, global::System.Nullable<double> p13, global::System.Nullable<double> p16, global::System.Nullable<double> p19, global::System.Nullable<double> p22, string F13) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((int)(charac_id));
            if ((Обозначение_ == null)) {
                this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(Обозначение_));
            }
            if ((Наименование == null)) {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(Наименование));
            }
            if ((p1.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[3].Value = ((double)(p1.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((p4.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[4].Value = ((double)(p4.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((p7.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[5].Value = ((double)(p7.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            if ((a_.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[6].Value = ((double)(a_.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            if ((p10.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[7].Value = ((double)(p10.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            if ((p13.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[8].Value = ((double)(p13.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            if ((p16.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[9].Value = ((double)(p16.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            if ((p19.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[10].Value = ((double)(p19.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            if ((p22.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[11].Value = ((double)(p22.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            if ((F13 == null)) {
                this.Adapter.InsertCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[12].Value = ((string)(F13));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    int charac_id, 
                    string Обозначение_, 
                    string Наименование, 
                    global::System.Nullable<double> p1, 
                    global::System.Nullable<double> p4, 
                    global::System.Nullable<double> p7, 
                    global::System.Nullable<double> a_, 
                    global::System.Nullable<double> p10, 
                    global::System.Nullable<double> p13, 
                    global::System.Nullable<double> p16, 
                    global::System.Nullable<double> p19, 
                    global::System.Nullable<double> p22, 
                    string F13, 
                    int Original_charac_id, 
                    string Original_Обозначение_, 
                    string Original_Наименование, 
                    global::System.Nullable<double> p2, 
                    global::System.Nullable<double> p5, 
                    global::System.Nullable<double> p8, 
                    global::System.Nullable<double> Original_a_, 
                    global::System.Nullable<double> p11, 
                    global::System.Nullable<double> p14, 
                    global::System.Nullable<double> p17, 
                    global::System.Nullable<double> p20, 
                    global::System.Nullable<double> p23, 
                    string Original_F13) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((int)(charac_id));
            if ((Обозначение_ == null)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(Обозначение_));
            }
            if ((Наименование == null)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(Наименование));
            }
            if ((p1.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((double)(p1.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((p4.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((double)(p4.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((p7.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((double)(p7.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            if ((a_.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((double)(a_.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            if ((p10.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((double)(p10.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            if ((p13.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((double)(p13.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            if ((p16.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((double)(p16.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            if ((p19.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((double)(p19.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            if ((p22.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((double)(p22.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            if ((F13 == null)) {
                this.Adapter.UpdateCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((string)(F13));
            }
            this.Adapter.UpdateCommand.Parameters[13].Value = ((int)(Original_charac_id));
            if ((Original_Обозначение_ == null)) {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[15].Value = ((string)(Original_Обозначение_));
            }
            if ((Original_Наименование == null)) {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[17].Value = ((string)(Original_Наименование));
            }
            if ((p2.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[18].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[19].Value = ((double)(p2.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[18].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[19].Value = global::System.DBNull.Value;
            }
            if ((p5.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[20].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[21].Value = ((double)(p5.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[20].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[21].Value = global::System.DBNull.Value;
            }
            if ((p8.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[22].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[23].Value = ((double)(p8.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[22].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[23].Value = global::System.DBNull.Value;
            }
            if ((Original_a_.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[24].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[25].Value = ((double)(Original_a_.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[24].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[25].Value = global::System.DBNull.Value;
            }
            if ((p11.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[26].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[27].Value = ((double)(p11.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[26].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[27].Value = global::System.DBNull.Value;
            }
            if ((p14.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[28].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[29].Value = ((double)(p14.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[28].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[29].Value = global::System.DBNull.Value;
            }
            if ((p17.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[30].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[31].Value = ((double)(p17.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[30].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[31].Value = global::System.DBNull.Value;
            }
            if ((p20.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[32].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[33].Value = ((double)(p20.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[32].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[33].Value = global::System.DBNull.Value;
            }
            if ((p23.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[34].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[35].Value = ((double)(p23.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[34].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[35].Value = global::System.DBNull.Value;
            }
            if ((Original_F13 == null)) {
                this.Adapter.UpdateCommand.Parameters[36].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[37].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[36].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[37].Value = ((string)(Original_F13));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string Обозначение_, 
                    string Наименование, 
                    global::System.Nullable<double> p1, 
                    global::System.Nullable<double> p4, 
                    global::System.Nullable<double> p7, 
                    global::System.Nullable<double> a_, 
                    global::System.Nullable<double> p10, 
                    global::System.Nullable<double> p13, 
                    global::System.Nullable<double> p16, 
                    global::System.Nullable<double> p19, 
                    global::System.Nullable<double> p22, 
                    string F13, 
                    int Original_charac_id, 
                    string Original_Обозначение_, 
                    string Original_Наименование, 
                    global::System.Nullable<double> p2, 
                    global::System.Nullable<double> p5, 
                    global::System.Nullable<double> p8, 
                    global::System.Nullable<double> Original_a_, 
                    global::System.Nullable<double> p11, 
                    global::System.Nullable<double> p14, 
                    global::System.Nullable<double> p17, 
                    global::System.Nullable<double> p20, 
                    global::System.Nullable<double> p23, 
                    string Original_F13) {
            return this.Update(Original_charac_id, Обозначение_, Наименование, p1, p4, p7, a_, p10, p13, p16, p19, p22, F13, Original_charac_id, Original_Обозначение_, Original_Наименование, p2, p5, p8, Original_a_, p11, p14, p17, p20, p23, Original_F13);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class УстановкаTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public УстановкаTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "Установка";
            tableMapping.ColumnMappings.Add("facility_id", "facility_id");
            tableMapping.ColumnMappings.Add("Наименование_установки", "Наименование_установки");
            tableMapping.ColumnMappings.Add("Год_открытия_устанвки", "Год_открытия_устанвки");
            tableMapping.ColumnMappings.Add("Местоположение", "Местоположение");
            tableMapping.ColumnMappings.Add("Производительность", "Производительность");
            tableMapping.ColumnMappings.Add("Давление", "Давление");
            tableMapping.ColumnMappings.Add("Температура_кипения", "Температура_кипения");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [dbo].[Установка] WHERE (([facility_id] = @Original_facility_id) AND ([Наименование_установки] = @Original_Наименование_установки) AND ([Год_открытия_устанвки] = @Original_Год_открытия_устанвки) AND ([Местоположение] = @Original_Местоположение) AND ([Производительность] = @Original_Производительность) AND ((@IsNull_Давление = 1 AND [Давление] IS NULL) OR ([Давление] = @Original_Давление)) AND ((@IsNull_Температура_кипения = 1 AND [Температура_кипения] IS NULL) OR ([Температура_кипения] = @Original_Температура_кипения)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_facility_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "facility_id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Наименование_установки", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Наименование_установки", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Год_открытия_устанвки", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Год_открытия_устанвки", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Местоположение", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Местоположение", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Производительность", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Производительность", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Давление", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Давление", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Давление", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Давление", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Температура_кипения", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Температура_кипения", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Температура_кипения", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Температура_кипения", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[Установка] ([facility_id], [Наименование_установки], [Год_открытия_устанвки], [Местоположение], [Производительность], [Давление], [Температура_кипения]) VALUES (@facility_id, @Наименование_установки, @Год_открытия_устанвки, @Местоположение, @Производительность, @Давление, @Температура_кипения);
SELECT facility_id, Наименование_установки, Год_открытия_устанвки, Местоположение, Производительность, Давление, Температура_кипения FROM Установка WHERE (facility_id = @facility_id)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@facility_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "facility_id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Наименование_установки", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Наименование_установки", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Год_открытия_устанвки", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Год_открытия_устанвки", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Местоположение", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Местоположение", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Производительность", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Производительность", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Давление", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Давление", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Температура_кипения", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Температура_кипения", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[Установка] SET [facility_id] = @facility_id, [Наименование_установки] = @Наименование_установки, [Год_открытия_устанвки] = @Год_открытия_устанвки, [Местоположение] = @Местоположение, [Производительность] = @Производительность, [Давление] = @Давление, [Температура_кипения] = @Температура_кипения WHERE (([facility_id] = @Original_facility_id) AND ([Наименование_установки] = @Original_Наименование_установки) AND ([Год_открытия_устанвки] = @Original_Год_открытия_устанвки) AND ([Местоположение] = @Original_Местоположение) AND ([Производительность] = @Original_Производительность) AND ((@IsNull_Давление = 1 AND [Давление] IS NULL) OR ([Давление] = @Original_Давление)) AND ((@IsNull_Температура_кипения = 1 AND [Температура_кипения] IS NULL) OR ([Температура_кипения] = @Original_Температура_кипения)));
SELECT facility_id, Наименование_установки, Год_открытия_устанвки, Местоположение, Производительность, Давление, Температура_кипения FROM Установка WHERE (facility_id = @facility_id)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@facility_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "facility_id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Наименование_установки", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Наименование_установки", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Год_открытия_устанвки", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Год_открытия_устанвки", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Местоположение", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Местоположение", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Производительность", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Производительность", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Давление", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Давление", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Температура_кипения", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Температура_кипения", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_facility_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "facility_id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Наименование_установки", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Наименование_установки", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Год_открытия_устанвки", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Год_открытия_устанвки", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Местоположение", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Местоположение", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Производительность", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Производительность", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Давление", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Давление", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Давление", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Давление", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Температура_кипения", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Температура_кипения", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Температура_кипения", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Температура_кипения", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::Katal_Ref.Properties.Settings.Default.Katal_Reform_DBConnectionStringNew;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT facility_id, Наименование_установки, Год_открытия_устанвки, Местоположение" +
                ", Производительность, Давление, Температура_кипения FROM dbo.Установка";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(Katal_Reform_DBDataSet1.УстановкаDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual Katal_Reform_DBDataSet1.УстановкаDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            Katal_Reform_DBDataSet1.УстановкаDataTable dataTable = new Katal_Reform_DBDataSet1.УстановкаDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(Katal_Reform_DBDataSet1.УстановкаDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(Katal_Reform_DBDataSet1 dataSet) {
            return this.Adapter.Update(dataSet, "Установка");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_facility_id, string Original_Наименование_установки, int Original_Год_открытия_устанвки, string Original_Местоположение, double Original_Производительность, global::System.Nullable<double> Original_Давление, global::System.Nullable<int> Original_Температура_кипения) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_facility_id));
            if ((Original_Наименование_установки == null)) {
                throw new global::System.ArgumentNullException("Original_Наименование_установки");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((string)(Original_Наименование_установки));
            }
            this.Adapter.DeleteCommand.Parameters[2].Value = ((int)(Original_Год_открытия_устанвки));
            if ((Original_Местоположение == null)) {
                throw new global::System.ArgumentNullException("Original_Местоположение");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((string)(Original_Местоположение));
            }
            this.Adapter.DeleteCommand.Parameters[4].Value = ((double)(Original_Производительность));
            if ((Original_Давление.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[6].Value = ((double)(Original_Давление.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            if ((Original_Температура_кипения.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[8].Value = ((int)(Original_Температура_кипения.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(int facility_id, string Наименование_установки, int Год_открытия_устанвки, string Местоположение, double Производительность, global::System.Nullable<double> Давление, global::System.Nullable<int> Температура_кипения) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((int)(facility_id));
            if ((Наименование_установки == null)) {
                throw new global::System.ArgumentNullException("Наименование_установки");
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(Наименование_установки));
            }
            this.Adapter.InsertCommand.Parameters[2].Value = ((int)(Год_открытия_устанвки));
            if ((Местоположение == null)) {
                throw new global::System.ArgumentNullException("Местоположение");
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(Местоположение));
            }
            this.Adapter.InsertCommand.Parameters[4].Value = ((double)(Производительность));
            if ((Давление.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[5].Value = ((double)(Давление.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            if ((Температура_кипения.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[6].Value = ((int)(Температура_кипения.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(int facility_id, string Наименование_установки, int Год_открытия_устанвки, string Местоположение, double Производительность, global::System.Nullable<double> Давление, global::System.Nullable<int> Температура_кипения, int Original_facility_id, string Original_Наименование_установки, int Original_Год_открытия_устанвки, string Original_Местоположение, double Original_Производительность, global::System.Nullable<double> Original_Давление, global::System.Nullable<int> Original_Температура_кипения) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((int)(facility_id));
            if ((Наименование_установки == null)) {
                throw new global::System.ArgumentNullException("Наименование_установки");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(Наименование_установки));
            }
            this.Adapter.UpdateCommand.Parameters[2].Value = ((int)(Год_открытия_устанвки));
            if ((Местоположение == null)) {
                throw new global::System.ArgumentNullException("Местоположение");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(Местоположение));
            }
            this.Adapter.UpdateCommand.Parameters[4].Value = ((double)(Производительность));
            if ((Давление.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((double)(Давление.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            if ((Температура_кипения.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((int)(Температура_кипения.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[7].Value = ((int)(Original_facility_id));
            if ((Original_Наименование_установки == null)) {
                throw new global::System.ArgumentNullException("Original_Наименование_установки");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((string)(Original_Наименование_установки));
            }
            this.Adapter.UpdateCommand.Parameters[9].Value = ((int)(Original_Год_открытия_устанвки));
            if ((Original_Местоположение == null)) {
                throw new global::System.ArgumentNullException("Original_Местоположение");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((string)(Original_Местоположение));
            }
            this.Adapter.UpdateCommand.Parameters[11].Value = ((double)(Original_Производительность));
            if ((Original_Давление.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[13].Value = ((double)(Original_Давление.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            if ((Original_Температура_кипения.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[15].Value = ((int)(Original_Температура_кипения.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string Наименование_установки, int Год_открытия_устанвки, string Местоположение, double Производительность, global::System.Nullable<double> Давление, global::System.Nullable<int> Температура_кипения, int Original_facility_id, string Original_Наименование_установки, int Original_Год_открытия_устанвки, string Original_Местоположение, double Original_Производительность, global::System.Nullable<double> Original_Давление, global::System.Nullable<int> Original_Температура_кипения) {
            return this.Update(Original_facility_id, Наименование_установки, Год_открытия_устанвки, Местоположение, Производительность, Давление, Температура_кипения, Original_facility_id, Original_Наименование_установки, Original_Год_открытия_устанвки, Original_Местоположение, Original_Производительность, Original_Давление, Original_Температура_кипения);
        }
    }
    
    /// <summary>
    ///TableAdapterManager is used to coordinate TableAdapters in the dataset to enable Hierarchical Update scenarios
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerDesigner, Microsoft.VSD" +
        "esigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapterManager")]
    public partial class TableAdapterManager : global::System.ComponentModel.Component {
        
        private UpdateOrderOption _updateOrder;
        
        private Изменение_концентрации_TableAdapter _изменение_концентрации_TableAdapter;
        
        private ИзмКонц_УстановкаTableAdapter _измКонц_УстановкаTableAdapter;
        
        private КомпонентыTableAdapter _компонентыTableAdapter;
        
        private Компоненты_УстановкаTableAdapter _компоненты_УстановкаTableAdapter;
        
        private СотрудникиTableAdapter _сотрудникиTableAdapter;
        
        private Термодин_харак_TableAdapter _термодин_харак_TableAdapter;
        
        private УстановкаTableAdapter _установкаTableAdapter;
        
        private bool _backupDataSetBeforeUpdate;
        
        private global::System.Data.IDbConnection _connection;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public UpdateOrderOption UpdateOrder {
            get {
                return this._updateOrder;
            }
            set {
                this._updateOrder = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public Изменение_концентрации_TableAdapter Изменение_концентрации_TableAdapter {
            get {
                return this._изменение_концентрации_TableAdapter;
            }
            set {
                this._изменение_концентрации_TableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public ИзмКонц_УстановкаTableAdapter ИзмКонц_УстановкаTableAdapter {
            get {
                return this._измКонц_УстановкаTableAdapter;
            }
            set {
                this._измКонц_УстановкаTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public КомпонентыTableAdapter КомпонентыTableAdapter {
            get {
                return this._компонентыTableAdapter;
            }
            set {
                this._компонентыTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public Компоненты_УстановкаTableAdapter Компоненты_УстановкаTableAdapter {
            get {
                return this._компоненты_УстановкаTableAdapter;
            }
            set {
                this._компоненты_УстановкаTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public СотрудникиTableAdapter СотрудникиTableAdapter {
            get {
                return this._сотрудникиTableAdapter;
            }
            set {
                this._сотрудникиTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public Термодин_харак_TableAdapter Термодин_харак_TableAdapter {
            get {
                return this._термодин_харак_TableAdapter;
            }
            set {
                this._термодин_харак_TableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public УстановкаTableAdapter УстановкаTableAdapter {
            get {
                return this._установкаTableAdapter;
            }
            set {
                this._установкаTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public bool BackupDataSetBeforeUpdate {
            get {
                return this._backupDataSetBeforeUpdate;
            }
            set {
                this._backupDataSetBeforeUpdate = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public global::System.Data.IDbConnection Connection {
            get {
                if ((this._connection != null)) {
                    return this._connection;
                }
                if (((this._изменение_концентрации_TableAdapter != null) 
                            && (this._изменение_концентрации_TableAdapter.Connection != null))) {
                    return this._изменение_концентрации_TableAdapter.Connection;
                }
                if (((this._измКонц_УстановкаTableAdapter != null) 
                            && (this._измКонц_УстановкаTableAdapter.Connection != null))) {
                    return this._измКонц_УстановкаTableAdapter.Connection;
                }
                if (((this._компонентыTableAdapter != null) 
                            && (this._компонентыTableAdapter.Connection != null))) {
                    return this._компонентыTableAdapter.Connection;
                }
                if (((this._компоненты_УстановкаTableAdapter != null) 
                            && (this._компоненты_УстановкаTableAdapter.Connection != null))) {
                    return this._компоненты_УстановкаTableAdapter.Connection;
                }
                if (((this._сотрудникиTableAdapter != null) 
                            && (this._сотрудникиTableAdapter.Connection != null))) {
                    return this._сотрудникиTableAdapter.Connection;
                }
                if (((this._термодин_харак_TableAdapter != null) 
                            && (this._термодин_харак_TableAdapter.Connection != null))) {
                    return this._термодин_харак_TableAdapter.Connection;
                }
                if (((this._установкаTableAdapter != null) 
                            && (this._установкаTableAdapter.Connection != null))) {
                    return this._установкаTableAdapter.Connection;
                }
                return null;
            }
            set {
                this._connection = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public int TableAdapterInstanceCount {
            get {
                int count = 0;
                if ((this._изменение_концентрации_TableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._измКонц_УстановкаTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._компонентыTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._компоненты_УстановкаTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._сотрудникиTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._термодин_харак_TableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._установкаTableAdapter != null)) {
                    count = (count + 1);
                }
                return count;
            }
        }
        
        /// <summary>
        ///Update rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private int UpdateUpdatedRows(Katal_Reform_DBDataSet1 dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            if ((this._термодин_харак_TableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet._Термодин_харак_.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._термодин_харак_TableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._изменение_концентрации_TableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet._Изменение_концентрации_.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._изменение_концентрации_TableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._компонентыTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.Компоненты.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._компонентыTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._установкаTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.Установка.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._установкаTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._измКонц_УстановкаTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.ИзмКонц_Установка.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._измКонц_УстановкаTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._компоненты_УстановкаTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.Компоненты_Установка.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._компоненты_УстановкаTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._сотрудникиTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.Сотрудники.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._сотрудникиTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Insert rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private int UpdateInsertedRows(Katal_Reform_DBDataSet1 dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            if ((this._термодин_харак_TableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet._Термодин_харак_.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._термодин_харак_TableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._изменение_концентрации_TableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet._Изменение_концентрации_.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._изменение_концентрации_TableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._компонентыTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.Компоненты.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._компонентыTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._установкаTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.Установка.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._установкаTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._измКонц_УстановкаTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.ИзмКонц_Установка.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._измКонц_УстановкаTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._компоненты_УстановкаTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.Компоненты_Установка.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._компоненты_УстановкаTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._сотрудникиTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.Сотрудники.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._сотрудникиTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Delete rows in bottom-up order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private int UpdateDeletedRows(Katal_Reform_DBDataSet1 dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows) {
            int result = 0;
            if ((this._сотрудникиTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.Сотрудники.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._сотрудникиTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._компоненты_УстановкаTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.Компоненты_Установка.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._компоненты_УстановкаTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._измКонц_УстановкаTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.ИзмКонц_Установка.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._измКонц_УстановкаTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._установкаTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.Установка.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._установкаTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._компонентыTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.Компоненты.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._компонентыTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._изменение_концентрации_TableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet._Изменение_концентрации_.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._изменение_концентрации_TableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._термодин_харак_TableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet._Термодин_харак_.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._термодин_харак_TableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Remove inserted rows that become updated rows after calling TableAdapter.Update(inserted rows) first
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private global::System.Data.DataRow[] GetRealUpdatedRows(global::System.Data.DataRow[] updatedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            if (((updatedRows == null) 
                        || (updatedRows.Length < 1))) {
                return updatedRows;
            }
            if (((allAddedRows == null) 
                        || (allAddedRows.Count < 1))) {
                return updatedRows;
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> realUpdatedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            for (int i = 0; (i < updatedRows.Length); i = (i + 1)) {
                global::System.Data.DataRow row = updatedRows[i];
                if ((allAddedRows.Contains(row) == false)) {
                    realUpdatedRows.Add(row);
                }
            }
            return realUpdatedRows.ToArray();
        }
        
        /// <summary>
        ///Update all changes to the dataset.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public virtual int UpdateAll(Katal_Reform_DBDataSet1 dataSet) {
            if ((dataSet == null)) {
                throw new global::System.ArgumentNullException("dataSet");
            }
            if ((dataSet.HasChanges() == false)) {
                return 0;
            }
            if (((this._изменение_концентрации_TableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._изменение_концентрации_TableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("Все адаптеры таблицы, управляемые диспетчером адаптера таблицы TableAdapterManage" +
                        "r, должны использовать одинаковую строку подключения.");
            }
            if (((this._измКонц_УстановкаTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._измКонц_УстановкаTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("Все адаптеры таблицы, управляемые диспетчером адаптера таблицы TableAdapterManage" +
                        "r, должны использовать одинаковую строку подключения.");
            }
            if (((this._компонентыTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._компонентыTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("Все адаптеры таблицы, управляемые диспетчером адаптера таблицы TableAdapterManage" +
                        "r, должны использовать одинаковую строку подключения.");
            }
            if (((this._компоненты_УстановкаTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._компоненты_УстановкаTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("Все адаптеры таблицы, управляемые диспетчером адаптера таблицы TableAdapterManage" +
                        "r, должны использовать одинаковую строку подключения.");
            }
            if (((this._сотрудникиTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._сотрудникиTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("Все адаптеры таблицы, управляемые диспетчером адаптера таблицы TableAdapterManage" +
                        "r, должны использовать одинаковую строку подключения.");
            }
            if (((this._термодин_харак_TableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._термодин_харак_TableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("Все адаптеры таблицы, управляемые диспетчером адаптера таблицы TableAdapterManage" +
                        "r, должны использовать одинаковую строку подключения.");
            }
            if (((this._установкаTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._установкаTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("Все адаптеры таблицы, управляемые диспетчером адаптера таблицы TableAdapterManage" +
                        "r, должны использовать одинаковую строку подключения.");
            }
            global::System.Data.IDbConnection workConnection = this.Connection;
            if ((workConnection == null)) {
                throw new global::System.ApplicationException("TableAdapterManager не содержит сведений о подключении. Укажите для каждого адапт" +
                        "ера таблицы TableAdapterManager допустимый экземпляр адаптера таблицы.");
            }
            bool workConnOpened = false;
            if (((workConnection.State & global::System.Data.ConnectionState.Broken) 
                        == global::System.Data.ConnectionState.Broken)) {
                workConnection.Close();
            }
            if ((workConnection.State == global::System.Data.ConnectionState.Closed)) {
                workConnection.Open();
                workConnOpened = true;
            }
            global::System.Data.IDbTransaction workTransaction = workConnection.BeginTransaction();
            if ((workTransaction == null)) {
                throw new global::System.ApplicationException("Не удается начать транзакцию. Текущее соединение данных не поддерживает транзакци" +
                        "и или текущее состояние не позволяет начать транзакцию.");
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter> adaptersWithAcceptChangesDuringUpdate = new global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter>();
            global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection> revertConnections = new global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection>();
            int result = 0;
            global::System.Data.DataSet backupDataSet = null;
            if (this.BackupDataSetBeforeUpdate) {
                backupDataSet = new global::System.Data.DataSet();
                backupDataSet.Merge(dataSet);
            }
            try {
                // ---- Prepare for update -----------
                //
                if ((this._изменение_концентрации_TableAdapter != null)) {
                    revertConnections.Add(this._изменение_концентрации_TableAdapter, this._изменение_концентрации_TableAdapter.Connection);
                    this._изменение_концентрации_TableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._изменение_концентрации_TableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._изменение_концентрации_TableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._изменение_концентрации_TableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._изменение_концентрации_TableAdapter.Adapter);
                    }
                }
                if ((this._измКонц_УстановкаTableAdapter != null)) {
                    revertConnections.Add(this._измКонц_УстановкаTableAdapter, this._измКонц_УстановкаTableAdapter.Connection);
                    this._измКонц_УстановкаTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._измКонц_УстановкаTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._измКонц_УстановкаTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._измКонц_УстановкаTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._измКонц_УстановкаTableAdapter.Adapter);
                    }
                }
                if ((this._компонентыTableAdapter != null)) {
                    revertConnections.Add(this._компонентыTableAdapter, this._компонентыTableAdapter.Connection);
                    this._компонентыTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._компонентыTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._компонентыTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._компонентыTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._компонентыTableAdapter.Adapter);
                    }
                }
                if ((this._компоненты_УстановкаTableAdapter != null)) {
                    revertConnections.Add(this._компоненты_УстановкаTableAdapter, this._компоненты_УстановкаTableAdapter.Connection);
                    this._компоненты_УстановкаTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._компоненты_УстановкаTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._компоненты_УстановкаTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._компоненты_УстановкаTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._компоненты_УстановкаTableAdapter.Adapter);
                    }
                }
                if ((this._сотрудникиTableAdapter != null)) {
                    revertConnections.Add(this._сотрудникиTableAdapter, this._сотрудникиTableAdapter.Connection);
                    this._сотрудникиTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._сотрудникиTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._сотрудникиTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._сотрудникиTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._сотрудникиTableAdapter.Adapter);
                    }
                }
                if ((this._термодин_харак_TableAdapter != null)) {
                    revertConnections.Add(this._термодин_харак_TableAdapter, this._термодин_харак_TableAdapter.Connection);
                    this._термодин_харак_TableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._термодин_харак_TableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._термодин_харак_TableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._термодин_харак_TableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._термодин_харак_TableAdapter.Adapter);
                    }
                }
                if ((this._установкаTableAdapter != null)) {
                    revertConnections.Add(this._установкаTableAdapter, this._установкаTableAdapter.Connection);
                    this._установкаTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._установкаTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._установкаTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._установкаTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._установкаTableAdapter.Adapter);
                    }
                }
                // 
                //---- Perform updates -----------
                //
                if ((this.UpdateOrder == UpdateOrderOption.UpdateInsertDelete)) {
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                }
                else {
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                }
                result = (result + this.UpdateDeletedRows(dataSet, allChangedRows));
                // 
                //---- Commit updates -----------
                //
                workTransaction.Commit();
                if ((0 < allAddedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                    allAddedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
                if ((0 < allChangedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allChangedRows.Count];
                    allChangedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
            }
            catch (global::System.Exception ex) {
                workTransaction.Rollback();
                // ---- Restore the dataset -----------
                if (this.BackupDataSetBeforeUpdate) {
                    global::System.Diagnostics.Debug.Assert((backupDataSet != null));
                    dataSet.Clear();
                    dataSet.Merge(backupDataSet);
                }
                else {
                    if ((0 < allAddedRows.Count)) {
                        global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                        allAddedRows.CopyTo(rows);
                        for (int i = 0; (i < rows.Length); i = (i + 1)) {
                            global::System.Data.DataRow row = rows[i];
                            row.AcceptChanges();
                            row.SetAdded();
                        }
                    }
                }
                throw ex;
            }
            finally {
                if (workConnOpened) {
                    workConnection.Close();
                }
                if ((this._изменение_концентрации_TableAdapter != null)) {
                    this._изменение_концентрации_TableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._изменение_концентрации_TableAdapter]));
                    this._изменение_концентрации_TableAdapter.Transaction = null;
                }
                if ((this._измКонц_УстановкаTableAdapter != null)) {
                    this._измКонц_УстановкаTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._измКонц_УстановкаTableAdapter]));
                    this._измКонц_УстановкаTableAdapter.Transaction = null;
                }
                if ((this._компонентыTableAdapter != null)) {
                    this._компонентыTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._компонентыTableAdapter]));
                    this._компонентыTableAdapter.Transaction = null;
                }
                if ((this._компоненты_УстановкаTableAdapter != null)) {
                    this._компоненты_УстановкаTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._компоненты_УстановкаTableAdapter]));
                    this._компоненты_УстановкаTableAdapter.Transaction = null;
                }
                if ((this._сотрудникиTableAdapter != null)) {
                    this._сотрудникиTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._сотрудникиTableAdapter]));
                    this._сотрудникиTableAdapter.Transaction = null;
                }
                if ((this._термодин_харак_TableAdapter != null)) {
                    this._термодин_харак_TableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._термодин_харак_TableAdapter]));
                    this._термодин_харак_TableAdapter.Transaction = null;
                }
                if ((this._установкаTableAdapter != null)) {
                    this._установкаTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._установкаTableAdapter]));
                    this._установкаTableAdapter.Transaction = null;
                }
                if ((0 < adaptersWithAcceptChangesDuringUpdate.Count)) {
                    global::System.Data.Common.DataAdapter[] adapters = new System.Data.Common.DataAdapter[adaptersWithAcceptChangesDuringUpdate.Count];
                    adaptersWithAcceptChangesDuringUpdate.CopyTo(adapters);
                    for (int i = 0; (i < adapters.Length); i = (i + 1)) {
                        global::System.Data.Common.DataAdapter adapter = adapters[i];
                        adapter.AcceptChangesDuringUpdate = true;
                    }
                }
            }
            return result;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected virtual void SortSelfReferenceRows(global::System.Data.DataRow[] rows, global::System.Data.DataRelation relation, bool childFirst) {
            global::System.Array.Sort<global::System.Data.DataRow>(rows, new SelfReferenceComparer(relation, childFirst));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected virtual bool MatchTableAdapterConnection(global::System.Data.IDbConnection inputConnection) {
            if ((this._connection != null)) {
                return true;
            }
            if (((this.Connection == null) 
                        || (inputConnection == null))) {
                return true;
            }
            if (string.Equals(this.Connection.ConnectionString, inputConnection.ConnectionString, global::System.StringComparison.Ordinal)) {
                return true;
            }
            return false;
        }
        
        /// <summary>
        ///Update Order Option
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public enum UpdateOrderOption {
            
            InsertUpdateDelete = 0,
            
            UpdateInsertDelete = 1,
        }
        
        /// <summary>
        ///Used to sort self-referenced table's rows
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private class SelfReferenceComparer : object, global::System.Collections.Generic.IComparer<global::System.Data.DataRow> {
            
            private global::System.Data.DataRelation _relation;
            
            private int _childFirst;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal SelfReferenceComparer(global::System.Data.DataRelation relation, bool childFirst) {
                this._relation = relation;
                if (childFirst) {
                    this._childFirst = -1;
                }
                else {
                    this._childFirst = 1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            private global::System.Data.DataRow GetRoot(global::System.Data.DataRow row, out int distance) {
                global::System.Diagnostics.Debug.Assert((row != null));
                global::System.Data.DataRow root = row;
                distance = 0;

                global::System.Collections.Generic.IDictionary<global::System.Data.DataRow, global::System.Data.DataRow> traversedRows = new global::System.Collections.Generic.Dictionary<global::System.Data.DataRow, global::System.Data.DataRow>();
                traversedRows[row] = row;

                global::System.Data.DataRow parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                for (
                ; ((parent != null) 
                            && (traversedRows.ContainsKey(parent) == false)); 
                ) {
                    distance = (distance + 1);
                    root = parent;
                    traversedRows[parent] = parent;
                    parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                }

                if ((distance == 0)) {
                    traversedRows.Clear();
                    traversedRows[row] = row;
                    parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    for (
                    ; ((parent != null) 
                                && (traversedRows.ContainsKey(parent) == false)); 
                    ) {
                        distance = (distance + 1);
                        root = parent;
                        traversedRows[parent] = parent;
                        parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    }
                }

                return root;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int Compare(global::System.Data.DataRow row1, global::System.Data.DataRow row2) {
                if (object.ReferenceEquals(row1, row2)) {
                    return 0;
                }
                if ((row1 == null)) {
                    return -1;
                }
                if ((row2 == null)) {
                    return 1;
                }

                int distance1 = 0;
                global::System.Data.DataRow root1 = this.GetRoot(row1, out distance1);

                int distance2 = 0;
                global::System.Data.DataRow root2 = this.GetRoot(row2, out distance2);

                if (object.ReferenceEquals(root1, root2)) {
                    return (this._childFirst * distance1.CompareTo(distance2));
                }
                else {
                    global::System.Diagnostics.Debug.Assert(((root1.Table != null) 
                                    && (root2.Table != null)));
                    if ((root1.Table.Rows.IndexOf(root1) < root2.Table.Rows.IndexOf(root2))) {
                        return -1;
                    }
                    else {
                        return 1;
                    }
                }
            }
        }
    }
}

#pragma warning restore 1591